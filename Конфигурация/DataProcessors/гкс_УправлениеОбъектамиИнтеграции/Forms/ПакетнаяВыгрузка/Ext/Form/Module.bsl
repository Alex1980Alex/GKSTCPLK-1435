
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ФормироватьСообщенияДляВсехПолучателей = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	//@skip-warning
	ЭтоУправляемаяФорма = (ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма"));
	Если ЭтоУправляемаяФорма И 
		 ИсточникВыбора.ИмяФормы = "ОбщаяФорма.гкс_ВыборМетаданных" И 			
	     ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда		
			
   		ВыбранноеЗначение.Свойство("АдресДереваМетаданных", АдресДереваМетаданных);
		ВыбранноеЗначение.Свойство("ПолноеИмя", ТипМетаданных);
			
		ТипМетаданныхПриИзмененииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолучателиТочкаОбменаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Получатели.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ТочкаОбмена) Тогда
		ТекущиеДанные.СерверОбмена = СерверОбменаТочкиОбмена(ТекущиеДанные.ТочкаОбмена);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФормироватьДляВсехПолучателейПриИзменении(Элемент)
	
	УстановитьВидимостьНаКлиенте();
		
КонецПроцедуры

&НаКлиенте
Процедура ТипМетаданныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресДереваМетаданных", АдресДереваМетаданных);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ИдентификаторВладельца", УникальныйИдентификатор);
	
	ОткрытьФорму("ОбщаяФорма.гкс_ВыборМетаданных",
		ПараметрыФормы,
		ЭтотОбъект,
		ЭтотОбъект.УникальныйИдентификатор,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

&НаКлиенте
Процедура ТипМетаданныхПриИзменении(Элемент)
	
	ТипМетаданныхПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКомпоновщикНастроекНастройкиВыборПриИзменении(Элемент)
	
	СписокКомпоновщикНастроекНастройкиВыборПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьСообщенияИОтправитьВОчередь(Команда)
	
	Если НЕ ЕстьВозможностьФормированияИОтправкиСообщений() Тогда
		Возврат;		
	КонецЕсли;

	Если Список.Отбор.Элементы.Количество() = 0 Тогда
		
		ОбратныйВызов = Новый ОписаниеОповещения("СформироватьСообщенияИОтправитьВОчередьЗавершение", ЭтотОбъект);
		ТекстВопроса = СтрШаблон(НСтр("ru='Не установлены настройки отбора. 
		|Потенциально, выгрузка всех объектов метаданных %1 может занять длительное время. 
		|Продолжить?'"), ТипМетаданных);
		
		ПоказатьВопрос(ОбратныйВызов, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе		
		СформироватьСообщенияИОтправитьВОчередьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыиФункции

&НаСервере
Процедура ТипМетаданныхПриИзмененииНаСервере()
	
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Если НЕ ЗначениеЗаполнено(ТипМетаданных) Тогда
		Возврат;
	КонецЕсли;
	
	СброситьВыбранныеПоляСписка();
	СброситьОтборСписка();

	НастроитьСписокДляОтображения();
		
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;

КонецПроцедуры

&НаСервере
Процедура СписокКомпоновщикНастроекНастройкиВыборПриИзмененииНаСервере()
	
	ДобавитьВыбранныеПоляВСписок();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписокДляОтображения()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект"); 
	
	Список.ОсновнаяТаблица = ТипМетаданных;
	Список.ТекстЗапроса = ОбъектОбработки.ТекстЗапросаПоТипуМетаданных(ТипМетаданных);
	Список.ДинамическоеСчитываниеДанных = Истина;
		
	ДобавитьВыбранныеПоляВСписок();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВыбранныеПоляВСписок()
	
	УдалитьЭлементыВыбранныхПолейСписка();
	
	ЭлементПоле = ЭтотОбъект.Элементы.Добавить("СписокСсылка", Тип("ПолеФормы"), Элементы.Список);
	ЭлементПоле.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементПоле.Заголовок = "Ссылка";
	ЭлементПоле.ПутьКДанным = "Список.Ссылка"; 

	Для Каждого Поле Из Список.КомпоновщикНастроек.Настройки.Выбор.Элементы Цикл
		
		Если НЕ ТипЗнч(Поле) = Тип("ВыбранноеПолеКомпоновкиДанных") ИЛИ НЕ Поле.Использование 
			ИЛИ СтрНайти(Строка(Поле.Поле), "СистемныеПоля") > 0 
			ИЛИ ВыбранноеПолеУжеДобавлено(Поле) Тогда
			Продолжить;
		КонецЕсли;
				
		ЭлементПоле = ЭтотОбъект.Элементы.Добавить("Список" + Строка(Поле.Поле), Тип("ПолеФормы"), Элементы.Список);
		ЭлементПоле.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементПоле.Заголовок = Поле.Заголовок;
		ЭлементПоле.ПутьКДанным = "Список." + Строка(Поле.Поле); 	
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВыбранноеПолеУжеДобавлено(ВыбранноеПоле) 
	
	ИмяПоля = "Список" + Строка(ВыбранноеПоле.Поле);
	Возврат НЕ ЭтотОбъект.Элементы.Найти(ИмяПоля) = Неопределено;
		
КонецФункции

&НаСервере
Процедура УдалитьЭлементыВыбранныхПолейСписка()
	                                          
	УдаляемыеЭлементы = Новый Массив;
	Для Каждого СтарыйЭлемент Из Элементы.Список.ПодчиненныеЭлементы Цикл
		УдаляемыеЭлементы.Добавить(СтарыйЭлемент);
	КонецЦикла;
	
	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(УдаляемыйЭлемент);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СброситьВыбранныеПоляСписка()
	
	Список.КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура СброситьОтборСписка()
	
	Список.Отбор.Элементы.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСообщенияИОтправитьВОчередьНаСервере()
		
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");	
	ОбъектОбработки.СформироватьСообщенияПоПараметрамИОтправитьВОчередь(ПараметрыСообщений());								   
								   	
КонецПроцедуры

&НаСервере
Функция ПараметрыСообщений()
	
	ПараметрыФормирования = Новый Структура;
	ПараметрыФормирования.Вставить("ТипМетаданных", ТипМетаданных);
	ПараметрыФормирования.Вставить("ИсполняемыеНастройки", 
	                               Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных());
	ПараметрыФормирования.Вставить("ИсполняемаяСхема", 
	                               Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных());
	
	Если НЕ ФормироватьСообщенияДляВсехПолучателей Тогда
		
		ТаблицаПолучателей = Получатели.Выгрузить();
		ТаблицаПолучателей.Колонки.Добавить("ТипМетаданных", Новый ОписаниеТипов("Строка"));
		ТаблицаПолучателей.ЗаполнитьЗначения(ТипМетаданных, "ТипМетаданных");
		
		ПараметрыФормирования.Вставить("ТаблицаПолучателей", ТаблицаПолучателей);		
		
	КонецЕсли;
						   
	Возврат ПараметрыФормирования;
	
КонецФункции

&НаКлиенте
Функция ЕстьВозможностьФормированияИОтправкиСообщений()
	
	ЕстьВозможность = Истина;
	Если НЕ ЗначениеЗаполнено(ТипМетаданных) Тогда
		ЕстьВозможность = Ложь;
		гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не выбран тип метаданных'"), 
		                                                      Неопределено, 
															  "ТипМетаданных");
	КонецЕсли;
	
	Если НЕ ФормироватьСообщенияДляВсехПолучателей И Получатели.Количество() = 0 Тогда
		ЕстьВозможность = Ложь;
		гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не выбраны получатели'"));		
	КонецЕсли;
	
	Для Каждого Получатель Из Получатели Цикл
		
		ИндексСтроки = Получатели.Индекс(Получатель);
		
		Если НЕ ЗначениеЗаполнено(Получатель.ТочкаОбмена) Тогда
			
			ЕстьВозможность = Ложь;
			гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнена ""Точка обмена""'"),
			Неопределено, СтрШаблон("Получатели[%1].ТочкаОбмена", Формат(ИндексСтроки, "ЧЦ=; ЧГ=")));	
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Получатель.СерверОбмена) Тогда
			
			ЕстьВозможность = Ложь;
			гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен ""Сервер обмена""'"),
			Неопределено,  СтрШаблон("Получатели[%1].СерверОбмена", Формат(ИндексСтроки, "ЧЦ=; ЧГ=")));
			
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(Получатель.Формат) Тогда
			
			ЕстьВозможность = Ложь;
			гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен ""Формат""'"),
			Неопределено,  СтрШаблон("Получатели[%1].Формат", Формат(ИндексСтроки, "ЧЦ=; ЧГ=")));
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЕстьВозможность;
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьНаКлиенте()
	
	Элементы.Получатели.Видимость = НЕ ФормироватьСообщенияДляВсехПолучателей;
			
КонецПроцедуры

&НаСервере
Функция СерверОбменаТочкиОбмена(ТочкаОбмена)
	
	Возврат гкс_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТочкаОбмена, "Владелец");
		
КонецФункции

&НаКлиенте
Процедура СформироватьСообщенияИОтправитьВОчередьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СформироватьСообщенияИОтправитьВОчередьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
