
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем ОтборСообщения;
	
	Параметры.Свойство("ПолноеИмяСправочника", ИмяСправочникаСообщений);
	Параметры.Свойство("ОтборСообщения", ОтборСообщения); 
	
	УстановитьПредставлениеСправочникаСообщенийПоИмениПриСоздании();
	УстановитьОтборПоВидуСообщений(ОтборСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОнлайнПриИзмененииНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставленияСправочникаСообщенийПриИзменении(Элемент)
	
	ИмяСправочникаСообщений = ?(ПредставленияСправочникаСообщений = "Исходящие",
	"Справочник.ИсходящиеСообщения", "Справочник.гкс_ВходящиеСообщенияRMQ");
	
	ОнлайнПриИзмененииНаКлиенте();
	УстановитьОтборПоВидуСообщений();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура УстановитьОтборПоВидуСообщений(ОтборСообщения = Неопределено)
	
	Менеджер = гкс_ОчередьСообщенийRMQСлужебный;
	
	СхемаКомпоновки = Менеджер.СформироватьСхемуКомпоновкиПоТипуОбъекта(ИмяСправочникаСообщений);
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки, ЭтотОбъект.УникальныйИдентификатор);
	
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроек);
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	
	Если ЗначениеЗаполнено(ОтборСообщения) Тогда
				
		ОтборСообщение = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборСообщение.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		
		Если ТипЗнч(ОтборСообщения) = Тип("Массив") Тогда
			
			ВидСравненияОтбор = ВидСравненияКомпоновкиДанных.ВСписке;
			СписокОтбор = Новый СписокЗначений;
			СписокОтбор.ЗагрузитьЗначения(ОтборСообщения);
			ЗначениеОтбор = СписокОтбор;

		Иначе
			
			ВидСравненияОтбор = ВидСравненияКомпоновкиДанных.Равно;
			ЗначениеОтбор = ОтборСообщения;
			
		КонецЕсли;
		
		ОтборСообщение.ВидСравнения = ВидСравненияОтбор;
		ОтборСообщение.ПравоеЗначение = ЗначениеОтбор;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура РезультатОтбораСообщенийОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗначениеПоляРасшифровки = ЗначениеПоляРасшифровки(ДанныеРасшифровкиСообщений, Расшифровка);
	
	Если НЕ ЗначениеПоляРасшифровки = Неопределено Тогда		
		ПоказатьЗначение(Неопределено, ЗначениеПоляРасшифровки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОнлайнПриИзменении(Элемент)
	
	ОнлайнПриИзмененииНаКлиенте();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РезультатОтбора(Команда)
	
	Если ЕстьВозможностьОтбораСообщений() Тогда		
		ОтобратьИПоказатьСообщения();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьКПовторнойОбработке(Команда)
	ВыполнитьОбработкуСообщений(Команда.Имя);	
КонецПроцедуры

&НаКлиенте
Процедура ПропуститьОбработкуСообщений(Команда)	
	ВыполнитьОбработкуСообщений(Команда.Имя);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьОбработкуСообщений(ИмяКоманды)
	
	Если НЕ ЕстьВозможностьОтбораСообщений() Тогда	
		Возврат;	
	КонецЕсли;
	
	ОбработатьСообщенияНаСервере(ИмяКоманды);
	
	Оповестить("ИзменениеСостоянийСообщений", ИмяСправочникаСообщений);

КонецПроцедуры

&НаСервере
Процедура ОбработатьСообщенияНаСервере(Знач ИмяКоманды)
	
	ИмяКоманды = НРег(ИмяКоманды);
	
	МакетКомпоновки = СформироватьМакетКомпоновки();
	Запрос = СформироватьЗапросПоМакету(МакетКомпоновки);
	
	Сообщения = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");	
	Если НЕ ЗначениеЗаполнено(Сообщения) Тогда		
		Возврат;	
	КонецЕсли;

	Если ИмяКоманды = "отметитькповторнойобработке" Тогда
		ОтметитьКПовторнойОбработкеНаСервере(Сообщения);	
	ИначеЕсли ИмяКоманды = "пропуститьобработкусообщений" Тогда
		ПропуститьОбработкуСообщенийНаСервере(Сообщения);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеСправочникаСообщенийПоИмениПриСоздании()
	
	Если ЗначениеЗаполнено(ИмяСправочникаСообщений) Тогда	
		ЭтотОбъект.Элементы.ПредставленияСправочникаСообщений.ТолькоПросмотр = Истина;
	Иначе
		ИмяСправочникаСообщений = "Справочник.гкс_ВходящиеСообщенияRMQ";
	КонецЕсли;	
	
	ЭтотОбъект.ПредставленияСправочникаСообщений = ?(ИмяСправочникаСообщений = "Справочник.гкс_ВходящиеСообщенияRMQ",  
	                                                 "Входящие", 
	                                                 "Исходящие");
	
КонецПроцедуры

&НаКлиенте
Процедура ОнлайнПриИзмененииНаКлиенте()
	
	Если Онлайн Тогда		
		ТекстЗаголовка = ?(ИмяСправочникаСообщений = "Справочник.гкс_ВходящиеСообщенияRMQ", 
		НСтр("ru='Обработать вх. сообщения'"), 
		НСтр("ru='Отправить в RabbitMQ'"));		
	Иначе		
		Префикс = ?(ИмяСправочникаСообщений = "Справочник.гкс_ВходящиеСообщенияRMQ", "вх.", "исх.");
		ТекстЗаголовка = СтрШаблон(НСтр("ru='Поставить в очередь обработки %1 сообщений'"), Префикс);
	КонецЕсли;
	
	Элементы.ОтметитьКПовторнойОбработке.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеПоляРасшифровки(ДанныеРасшифровкиСообщений, Расшифровка)
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровкиСообщений);
	
	Для Каждого ЭлементРасшифровки Из ДанныеРасшифровки.Элементы Цикл
		Если ЭлементРасшифровки.Идентификатор = Расшифровка Тогда			
			ПоляРасшифровки = ЭлементРасшифровки.ПолучитьПоля();			
			
			Для Каждого ПолеРасшифровки Из ПоляРасшифровки Цикл					
				Если ПолеРасшифровки.Поле = "Ссылка" Тогда					
					Возврат ПолеРасшифровки.Значение;	
				КонецЕсли;				
			КонецЦикла;			
			
		КонецЕсли;		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ЕстьВозможностьОтбораСообщений()
	
	Если НЕ ЗначениеЗаполнено(ИмяСправочникаСообщений) Тогда
		гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран тип справочника", , "ИмяСправочникаСообщений");
		Возврат Ложь;		
	КонецЕсли;
	
	Возврат Истина;
	                                                         
КонецФункции

&НаКлиенте
Процедура ОтобратьИПоказатьСообщения()
	
	ОтобратьИПоказатьСообщенияНаСервере();
	Элементы.ГруппаСтраницыОтборРезультат.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
	Элементы.ГруппаСтраницыОтборРезультат.ТекущаяСтраница = Элементы.СтраницаРезультат;
	                                                         
КонецПроцедуры

&НаСервере
Процедура ОтобратьИПоказатьСообщенияНаСервере()
	
	РезультатОтбораСообщений.Очистить();
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	МакетКомпоновки = СформироватьМакетКомпоновки(ДанныеРасшифровки);
		
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ,ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатОтбораСообщений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	ДанныеРасшифровкиСообщений = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, ЭтотОбъект.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция СформироватьМакетКомпоновки(ДанныеРасшифровки = Неопределено)
	
	СхемаКомпоновки =
	гкс_ОчередьСообщенийRMQСлужебный.СформироватьСхемуКомпоновкиПоТипуОбъекта(ИмяСправочникаСообщений);	
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();	
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновки, Настройки, ДанныеРасшифровки);
	
	Возврат МакетКомпоновки;
	
КонецФункции

&НаСервере
Процедура ОтметитьКПовторнойОбработкеНаСервере(Сообщения)
			
	Если Онлайн Тогда		
		Обработки.гкс_УправлениеОбъектамиИнтеграции.ОбработатьОбъектыБезОчереди(Сообщения);		
	Иначе		
		Обработки.гкс_УправлениеОбъектамиИнтеграции.ВернутьОбъектыВОчередь(Сообщения);	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПропуститьОбработкуСообщенийНаСервере(Сообщения)
	Обработки.гкс_УправлениеОбъектамиИнтеграции.ПропуститьОбработку(Сообщения);
КонецПроцедуры

&НаСервере
Функция СформироватьЗапросПоМакету(МакетКомпоновки)
	
	Запрос = Новый Запрос(МакетКомпоновки.НаборыДанных.НаборДанных1.Запрос);
	ВсеПараметрыЗапроса = Запрос.НайтиПараметры();
	
	Для Каждого ПараметрЗапроса Из ВсеПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ПараметрЗапроса.Имя,
		                          МакетКомпоновки.ЗначенияПараметров[ПараметрЗапроса.Имя].Значение);			
	КонецЦикла;
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти


