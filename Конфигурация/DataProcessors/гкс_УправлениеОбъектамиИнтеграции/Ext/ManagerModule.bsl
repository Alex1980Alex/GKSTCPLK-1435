#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ВернутьОбъектыВОчередь(Объекты) Экспорт
	
	Если Объекты.Количество() = 0 Тогда		
		Возврат;		
	КонецЕсли;

	ОтсортироватьОбъекты(Объекты);
	
	НачатьТранзакцию();	
	Попытка		
		Для Каждого Объект Из Объекты Цикл			
			ВернутьОбъектВОчередь(Объект);			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();	
		
	Исключение	
		ОтменитьТранзакцию();
		ВызватьИсключение ОписаниеОшибки();
		
	КонецПопытки;
		
КонецПроцедуры

Процедура ПропуститьОбработку(Объекты) Экспорт
	
	Для Каждого Объект Из Объекты Цикл
		
		ТипЗнчОбъект = ТипЗнч(Объект);
		Если ТипЗнчОбъект = Тип("СправочникСсылка.гкс_ВходящиеСообщенияRMQ") Тогда
			
			НовоеСостояние = Перечисления.гкс_СостоянияВходящихСообщенийRMQ.Пропущено;	
						
			гкс_ОчередьСообщенийRMQВызовСервера.УстановитьСостояниеВходящегоСообщения(Объект, 
			                                                                          НовоеСостояние);
			
		ИначеЕсли ТипЗнчОбъект = Тип("СправочникСсылка.ИсходящиеСообщения") Тогда
			
			ТекущееПриложение = гкс_ОчередьСообщенийRMQВызовСервера.ТекущееПриложение();
			НовоеСостояние = Перечисления.гкс_СостоянияИсходящихСообщенийRMQ.Пропущено;	
			ТекДатаВМС = ОчередьСообщенийВызовСервера.ТекущаяУниверсальнаяДатаВМиллисекундахНаСервере();
			
			гкс_ОчередьСообщенийRMQВызовСервера.УстановитьСостояниеИсходящегоСообщения(Объект, 
                                                                                       ТекущееПриложение,
			                                                                           НовоеСостояние,
			                                                                           ТекДатаВМС);
																					   
		ИначеЕсли ТипЗнчОбъект = Тип("СправочникСсылка.гкс_ОчередьОтложенногоФормированияИсходящихСообщений") Тогда 
			
			ПомеченНаУдаления = гкс_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "ПометкаУдаления");
			Если НЕ ПомеченНаУдаления Тогда
				гкс_ОчередьСообщенийRMQВызовСервера.ПропуститьОбработкуЭлементаОчереди(Объект);
			КонецЕсли;
			
		КонецЕсли;
		 		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьОбъектыБезОчереди(Объекты) Экспорт
	
	ОтсортироватьОбъекты(Объекты);
	ПодготовкаОбъектовКОбработкеБезОчереди(Объекты); 

	ИмяОбъектаОбработки = ИмяОбъектаОбработки(Объекты);
	Если ИмяОбъектаОбработки = "Справочник.гкс_ВходящиеСообщенияRMQ" Тогда	
		гкс_ОчередьСообщенийRMQСлужебный.ОбработкаПакетаСообщенийRMQ(Объекты);
	ИначеЕсли ИмяОбъектаОбработки = "Справочник.ИсходящиеСообщения" Тогда		
		ОтправкаСообщений.ПоФИФОИзОчередиИсходящих(Неопределено, Неопределено, Объекты);
	ИначеЕсли ИмяОбъектаОбработки = "Справочник.гкс_ОчередьОтложенногоФормированияИсходящихСообщений" Тогда
		гкс_ОчередьСообщенийRMQСлужебный.ОбработкаЭлементаОчередиОтложенногоФормирования(Объекты);
	КонецЕсли;
	
КонецПроцедуры

// Сформировать описание получателей.
// 
// Параметры:
//  ТаблицаПолучателей - ТаблицаЗначений - колонки:
//  	* ВыгружатьСсылкиИзОбъекта - Булево
//  	* КлючМаршрутизации - Строка
//  	* СерверОбмена - СправочникСсылка.СерверыОчередейRMQ
//  	* ТочкаОбмена - СправочникСсылка.гкс_ТочкиОбменаRMQ
//  	* Формат - СправочникСсылка.гкс_ФорматыОбменаИАС
// 
// Возвращаемое значение:
//  Массив Из Структура- 
Функция СформироватьОписаниеПолучателей(ТаблицаПолучателей) Экспорт 
	
	Получатели = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(ТаблицаПолучателей) Тогда
		Возврат Получатели;
	КонецЕсли;
	
	Для Каждого СтрокаПолучатель Из ТаблицаПолучателей Цикл
		
		РеквизитыТочкиОбмена = гкс_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаПолучатель.ТочкаОбмена, 
		                                                                      "Наименование, ТипТочкиОбмена");
		РеквизитыФормата = гкс_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаПолучатель.Формат, 
		                                                                  "Ссылка, Тип, Версия");
		
		ОписаниеПолучателя = Справочники.гкс_ПолучателиДанныхRMQ.ОписаниеПолучателя();
		
		СтруктураЗаполнения = Новый Структура;
		СтруктураЗаполнения.Вставить("ОбратныйАдрес", "");		
		СтруктураЗаполнения.Вставить("Формат", РеквизитыФормата.Ссылка);
		СтруктураЗаполнения.Вставить("ТипФормата", РеквизитыФормата.Тип);		
		СтруктураЗаполнения.Вставить("ВерсияФормата", РеквизитыФормата.Версия);		
		СтруктураЗаполнения.Вставить("СерверRMQ", СтрокаПолучатель.СерверОбмена);
		СтруктураЗаполнения.Вставить("ТипМетаданных", СтрокаПолучатель.ТипМетаданных);
		СтруктураЗаполнения.Вставить("ТочкаОбмена", РеквизитыТочкиОбмена.Наименование);
		СтруктураЗаполнения.Вставить("ТипТочкиОбмена", РеквизитыТочкиОбмена.ТипТочкиОбмена);
		СтруктураЗаполнения.Вставить("КлючМаршрутизации", СокрЛП(СтрокаПолучатель.КлючМаршрутизации));
		СтруктураЗаполнения.Вставить("ВыгружатьСсылкиИзОбъекта", СтрокаПолучатель.ВыгружатьСсылкиИзОбъекта);
		
		СтруктураЗаполнения.Вставить("КлючФормата", 
                                     СтрШаблон("%1#%2", XMLСтрока(РеквизитыФормата.Ссылка), 
									 XMLСтрока(Новый УникальныйИдентификатор)));
				
		ЗаполнитьЗначенияСвойств(ОписаниеПолучателя, СтруктураЗаполнения);
		Получатели.Добавить(ОписаниеПолучателя);
	    	
	КонецЦикла;
	
	Возврат Получатели;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВернутьОбъектВОчередь(Объект)
	
	ТипЗнчОбъект = ТипЗнч(Объект);
	
	Если ТипЗнчОбъект = Тип("СправочникСсылка.ИсходящиеСообщения") Тогда
		
		СообщениеОбъект = Объект.ПолучитьОбъект();
		
		СообщениеОбъект.ДатаВремяОтправки = Неопределено;
		СообщениеОбъект.ДополнительныеСвойства.Вставить("Состояние", 
		Перечисления.гкс_СостоянияИсходящихСообщенийRMQ.Подготовлено);
		
		СообщениеОбъект.Записать();
		
	ИначеЕсли ТипЗнчОбъект = Тип("СправочникСсылка.гкс_ВходящиеСообщенияRMQ") Тогда
		
		СообщениеОбъект = Объект.ПолучитьОбъект();
		
		СообщениеОбъект.ДатаОбработки = Неопределено;
		СообщениеОбъект.ДатаПринятияВОбработку = Неопределено;
		СообщениеОбъект.ДополнительныеСвойства.Вставить("ЗафиксироватьВОчереди", Истина);
		СообщениеОбъект.ДополнительныеСвойства.Вставить("ОтметкаВремени", ТекущаяУниверсальнаяДатаВМиллисекундах());
		СообщениеОбъект.ДополнительныеСвойства.Вставить("Состояние", 
		Перечисления.гкс_СостоянияВходящихСообщенийRMQ.Зарегистрировано);
		
		СообщениеОбъект.Записать();
		
	ИначеЕсли ТипЗнчОбъект = Тип("СправочникСсылка.гкс_ОчередьОтложенногоФормированияИсходящихСообщений") Тогда
		
		ЭлементОчередиОбъект = Объект.ПолучитьОбъект();
		ЭлементОчередиОбъект.ДатаПринятияВОбработку = Неопределено;
		ЭлементОчередиОбъект.ДатаВремяОбработки = Неопределено;		
		ЭлементОчередиОбъект.ПометкаУдаления = Ложь;
	
		ЭлементОчередиОбъект.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтсортироватьОбъекты(Объекты)
	
	ИмяРеквизитаСортировки = Неопределено;
	ИмяОбъектаОбработки = ИмяОбъектаОбработки(Объекты);
	
	Если ИмяОбъектаОбработки = "Справочник.гкс_ВходящиеСообщенияRMQ" Тогда
		ИмяРеквизитаСортировки = "ДатаПолучения";
	ИначеЕсли ИмяОбъектаОбработки = "Справочник.ИсходящиеСообщения" Тогда
		ИмяРеквизитаСортировки = "ДатаВремяСобытия";
	ИначеЕсли ИмяОбъектаОбработки = "Справочник.гкс_ОчередьОтложенногоФормированияИсходящихСообщений" Тогда
		ИмяРеквизитаСортировки = "ДатаПостановкиВОчередь";
	Иначе
		Возврат;
	КонецЕсли;
		
	ЗначенияРеквизитов = гкс_ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Объекты, ИмяРеквизитаСортировки);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Сообщение");
	Таблица.Колонки.Добавить("Дата");
	
	Для Каждого Сообщение Из ЗначенияРеквизитов Цикл
		
		НовСтрока = Таблица.Добавить();
		НовСтрока.Сообщение = Сообщение.Ключ;
		НовСтрока.Дата = Сообщение.Значение[ИмяРеквизитаСортировки];
		
	КонецЦикла;
	
	Таблица.Сортировать("Дата Возр");	
	Объекты = Таблица.ВыгрузитьКолонку("Сообщение");
	
КонецПроцедуры	

Функция ИмяОбъектаОбработки(Объекты)
	
	ПервыйОбъект = Объекты[0];
	ТипЗнчОбъекта = ТипЗнч(ПервыйОбъект);
	ИмяОбъектаОбработки = Неопределено;
	Если ТипЗнчОбъекта = Тип("СправочникСсылка.гкс_ВходящиеСообщенияRMQ") Тогда
		ИмяОбъектаОбработки = "Справочник.гкс_ВходящиеСообщенияRMQ";
	ИначеЕсли ТипЗнчОбъекта = Тип("СправочникСсылка.ИсходящиеСообщения") Тогда
		ИмяОбъектаОбработки = "Справочник.ИсходящиеСообщения";
	ИначеЕсли ТипЗнчОбъекта = Тип("СправочникСсылка.гкс_ОчередьОтложенногоФормированияИсходящихСообщений") Тогда
		ИмяОбъектаОбработки = "Справочник.гкс_ОчередьОтложенногоФормированияИсходящихСообщений";
	КонецЕсли;
	
	Возврат ИмяОбъектаОбработки;

КонецФункции

#Область ОбработкаОбъектовВнеОчереди

Процедура ПодготовкаОбъектовКОбработкеБезОчереди(Объекты) 
	
	ИмяТаблицы = ИмяОбъектаОбработки(Объекты);
			
	ТаблицаОбъектов = Новый ТаблицаЗначений;
	ТаблицаОбъектов.Колонки.Добавить("Ссылка");	
	
	Для Каждого Объект Из Объекты Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаОбъектов.Добавить(), Новый Структура("Ссылка", Объект));
	КонецЦикла;
			
	НачатьТранзакцию();	
	Попытка 	
		
		БлокировкаДанных = Новый БлокировкаДанных;
		
		ЭлементБлокировки = БлокировкаДанных.Добавить(ИмяТаблицы);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = ТаблицаОбъектов;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Ссылка");
		
		БлокировкаДанных.Заблокировать();
				
		Для Каждого СсылкаНаОбъект Из Объекты Цикл
			ПодготовкаОбъектаКОбработкеБезОчереди(СсылкаНаОбъект, ИмяТаблицы);				
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение		
		ОтменитьТранзакцию();
		
		ТекстИнформирования = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение ТекстИнформирования;		
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ПодготовкаОбъектаКОбработкеБезОчереди(СсылкаНаОбъект, ИмяТаблицы)
	
	Объект = СсылкаНаОбъект.ПолучитьОбъект();
	Объект.ПометкаУдаления = Ложь;
	
	Если ИмяТаблицы = "Справочник.гкс_ОчередьОтложенногоФормированияИсходящихСообщений" Тогда	
		
		Объект["ДатаВремяОбработки"] = Неопределено;
		Объект["ДатаПринятияВОбработку"] = Неопределено;
		
	ИначеЕсли ИмяТаблицы = "Справочник.гкс_ВходящиеСообщенияRMQ" Тогда				
		
		Объект["ДатаОбработки"] = Неопределено;
		Объект["ДатаПринятияВОбработку"] = Неопределено;
		Объект.ДополнительныеСвойства.Вставить("Состояние",
		Перечисления.гкс_СостоянияВходящихСообщенийRMQ.Зарегистрировано);
		
	ИначеЕсли ИмяТаблицы = "Справочник.ИсходящиеСообщения" Тогда
		
		Объект["ДатаВремяОтправки"] = Неопределено;
		Объект.ДополнительныеСвойства.Вставить("Состояние",
		Перечисления.гкс_СостоянияИсходящихСообщенийRMQ.Подготовлено);
		
	КонецЕсли;
	
	Объект.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли        