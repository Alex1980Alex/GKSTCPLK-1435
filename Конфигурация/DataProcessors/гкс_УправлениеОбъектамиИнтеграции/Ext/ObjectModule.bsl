#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ПакетнаяВыгрузка

Процедура СформироватьСообщенияПоПараметрамИОтправитьВОчередь(ПараметрыСообщений) Экспорт
	
	Перем ИсполняемыеНастройки, ИсполняемаяСхема, ТаблицаПолучателей, ТипМетаданных;  
	
	ИнформацияДляЖурнала = "";
	ПараметрыСообщений.Свойство("ТаблицаПолучателей", ТаблицаПолучателей);
	ПараметрыСообщений.Свойство("ИсполняемаяСхема", ИсполняемаяСхема);
	ПараметрыСообщений.Свойство("ИсполняемыеНастройки", ИсполняемыеНастройки);
	ПараметрыСообщений.Свойство("ТипМетаданных", ТипМетаданных);
	
	ОбъектыСообщений = ПолучитьОбъектыСообщенийПоСхемеИНастройкам(ИсполняемаяСхема, ИсполняемыеНастройки);
	
	ТекстСообщения = СтрШаблон(НСтр("ru='Объект метаданных: %1 Всего к выгрузке - %2 объектов'"), 
	                           ТипМетаданных, 
							   ОбъектыСообщений.Количество());
	ИнформацияДляЖурнала = ИнформацияДляЖурнала + ТекстСообщения + Символы.ПС;
	
	гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
	
	Если ОбъектыСообщений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущееВремя = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	УстановитьПривилегированныйРежим(Истина);
	
	СформироватьСообщенияПоОбъектамИОтправитьВОчередь(ОбъектыСообщений, 
	                                                  СформироватьОписаниеПолучателей(ТаблицаПолучателей));
	УстановитьПривилегированныйРежим(Ложь);
	
	ВремяВыполнения = Окр((ТекущаяУниверсальнаяДатаВМиллисекундах() - ТекущееВремя) / 1000, 0);
	ТекстСообщения = СтрШаблон(НСтр("ru='Для всех объектов сформированы сообщения за %1 секунд'"), 
	                           Формат(ВремяВыполнения, "ЧЦ=; ЧН=0; ЧГ="));
							   
	ИнформацияДляЖурнала = ИнформацияДляЖурнала + ТекстСообщения;
	
	гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
	
	гкс_ОчередьСообщенийRMQ.ЗаписьИнформацииВЖурналРегистрации(ИнформацияДляЖурнала, 
	                                                           НСтр("ru='ПакетнаяВыгрузкаВRMQ'"), 
	                                                           Метаданные.Обработки.гкс_УправлениеОбъектамиИнтеграции);
		
КонецПроцедуры

#КонецОбласти

#Область РаспространениеФормата

Процедура РаспространитьФормат(ОписаниеФормата) Экспорт
		
	ОбъектыСообщений = Новый Массив;
	ОбъектыСообщений.Добавить(ОписаниеФормата.Формат);
	
	ДопСвойстваФормата = ДопСвойстваФормата();
	ЗаполнитьЗначенияСвойств(ДопСвойстваФормата, ОписаниеФормата);
		
	СформироватьСообщенияПоОбъектамИОтправитьВОчередь(ОбъектыСообщений, 
	                                                  ПолучателиФорматаПоОписанию(ОписаниеФормата),
													  ДопСвойстваФормата);

КонецПроцедуры

Функция ДопСвойстваФормата()
	
	ДопСвойства = Новый Структура;
	ДопСвойства.Вставить("ВыгружатьМодель");
	ДопСвойства.Вставить("ВыгружатьОбщиеНастройкиФормата");
	ДопСвойства.Вставить("ВыгружатьНастройкиФорматаОбменаED");
	ДопСвойства.Вставить("АктивностьФормата");
	
	Возврат ДопСвойства;
	
КонецФункции

Функция ПолучателиФорматаПоОписанию(ОписаниеФормата)
	
	Получатели = Новый Массив;
	
	СлужебныйФормат = Справочники.гкс_ФорматыОбменаИАС.EnterpriseDataService;
	РеквизитыТочкиОбмена = гкс_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОписаниеФормата.ТочкаОбмена, 
                                 "Наименование, ТипТочкиОбмена, Владелец");
	
	ОписаниеПолучателя = Справочники.гкс_ПолучателиДанныхRMQ.ОписаниеПолучателя();
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ОбратныйАдрес", "");		
	СтруктураЗаполнения.Вставить("Формат", СлужебныйФормат);
	СтруктураЗаполнения.Вставить("СерверRMQ", РеквизитыТочкиОбмена.Владелец);
	СтруктураЗаполнения.Вставить("ТипМетаданных", Метаданные.Справочники.гкс_ФорматыОбменаИАС.ПолноеИмя());
	СтруктураЗаполнения.Вставить("ТочкаОбмена", РеквизитыТочкиОбмена.Наименование);
	СтруктураЗаполнения.Вставить("ТипТочкиОбмена", РеквизитыТочкиОбмена.ТипТочкиОбмена);
	СтруктураЗаполнения.Вставить("КлючМаршрутизации", СокрЛП(ОписаниеФормата.КлючМаршрутизации));
	СтруктураЗаполнения.Вставить("ВыгружатьСсылкиИзОбъекта", Ложь);
	
	СтруктураЗаполнения.Вставить("КлючФормата", 
                                 СтрШаблон("%1#%2", XMLСтрока(СлужебныйФормат), 
								 XMLСтрока(Новый УникальныйИдентификатор)));
								 
    ЗаполнитьЗначенияСвойств(ОписаниеПолучателя, СтруктураЗаполнения);
	
	Получатели.Добавить(ОписаниеПолучателя);
	
	Возврат Получатели;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыиФункции

#Область ПакетнаяВыгрузка

Функция ПолучитьОбъектыСообщенийПоСхемеИНастройкам(Схема, Настройки)
	
	ВсеОбъекты = Новый ТаблицаЗначений;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, 
	                                              Настройки, 
												  Неопределено, 
												  Неопределено, 
												  Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")); 
												  	
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ВсеОбъекты);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ВсеОбъекты.ВыгрузитьКолонку("Ссылка");

КонецФункции 

Процедура СформироватьСообщенияПоОбъектамИОтправитьВОчередь(СсылкиНаОбъектыСообщений, 
                                                            Получатели = Неопределено, 
                                                            ДопПараметры = Неопределено) Экспорт
	
	Для Каждого СсылкаНаОбъект Из СсылкиНаОбъектыСообщений Цикл
		
		Попытка
			ОбъектДляВыгрузки = СсылкаНаОбъект.ПолучитьОбъект();
			
		Исключение
			ВызватьИсключение ОписаниеОшибки();
			
		КонецПопытки;
		
		Если ОбъектДляВыгрузки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьДополнительныеСвойстваОбъектаВыгрузкиИзИсточника(ОбъектДляВыгрузки, ДопПараметры);
		
		Если НЕ Получатели = Неопределено Тогда
			
			гкс_ОчередьСообщенийRMQ.ИнициализироватьДополнительныеСвойстваОбъекта(ОбъектДляВыгрузки);
			ОбъектДляВыгрузки.ДополнительныеСвойства.ДанныеСинхронизацииRMQ.Вставить("Получатели", Получатели);
			
		КонецЕсли;
						
		гкс_ОчередьСообщенийRMQ.СоздатьСообщенияПоСобытиюОбъекта("ЗаписьОбъекта", ОбъектДляВыгрузки);
		
	КонецЦикла;

КонецПроцедуры 

Процедура ЗаполнитьДополнительныеСвойстваОбъектаВыгрузкиИзИсточника(ОбъектДляВыгрузки, ДопСвойстваИсточник)
	
	Если НЕ ЗначениеЗаполнено(ДопСвойстваИсточник) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ДопСвойстваИсточник Цикл
		ОбъектДляВыгрузки.ДополнительныеСвойства.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);	
	КонецЦикла;
		
КонецПроцедуры

Функция СформироватьОписаниеПолучателей(ТаблицаПолучателей) 
	
	Возврат Обработки.гкс_УправлениеОбъектамиИнтеграции.СформироватьОписаниеПолучателей(ТаблицаПолучателей);
	
КонецФункции

#КонецОбласти

#Область ТекстыЗапросов

Функция ТекстЗапросаПоТипуМетаданных(ТипМетаданных) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	%ИмяОбъекта% КАК Таблица";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяОбъекта%", ТипМетаданных);

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли          