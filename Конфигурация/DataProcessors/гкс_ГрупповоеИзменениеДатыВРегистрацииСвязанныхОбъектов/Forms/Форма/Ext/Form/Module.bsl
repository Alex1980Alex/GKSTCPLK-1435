#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьФорматРедактированияДаты();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчитыватьВремяПриИзменении(Элемент)
	
	УстановитьФорматРедактированияДаты();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРегистраций

&НаКлиенте
Процедура СписокРегистрацийПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Или Не ЗначениеЗаполнено(ТекДанные.Значение) Тогда
		Возврат;
	КонецЕсли;
	
	СвязанныеДокументы.Параметры.УстановитьЗначениеПараметра("ДокументРегистрация", ТекДанные.Значение);
	Элементы.СвязанныеДокументы.Обновить();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСвязанныеДокументы

&НаКлиенте
Процедура СвязанныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекДанные.СвязанныйДокумент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьДату(Команда)
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		ТекстСообщения = НСтр("ru='Необходимо выбрать дату!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СписокРегистраций) Тогда
		ТекстСообщения = НСтр("ru='Необходимо выбрать документ Регистрация на ПЛК!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;		
	КонецЕсли;

	ТекстВопроса = НСтр("ru='Процесс изменения даты не обратим. Продолжить?'");
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ИзменитьДатуЗавершение", ЭтотОбъект), ТекстВопроса, 
		РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет, НСтр("ru='Внимание!'")); 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОписание(Команда)
	
	ТекстОписания = НСтр("ru='Обработка изменяет в выбранных документах Регистрация на
	|ПЛК и связанных с ними документах реквизиты Дата и Местная дата, а так же изменяет Период и Местная дата в записях 
	|регистра сведений Состояние регистрации в соcтоянии Погрузка разрешена.'");
	
	ПоказатьПредупреждение( , ТекстОписания, , НСтр("ru='Описание обработки'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменитьДатуНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоиск();	
	Запрос.УстановитьПараметр("СписокРегистрации", СписокРегистраций.ВыгрузитьЗначения());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ИмяКолонкиРегистрация = "ДокументРегистрации";	
	ТаблицаРегистраций = РезультатЗапроса.Выгрузить().Скопировать(, ИмяКолонкиРегистрация);
	ТаблицаРегистраций.Свернуть(ИмяКолонкиРегистрация);
	
	Если СтатусПогрузкаРазрешена Тогда
		ТаблицаСостояния = ПолучитьДляРегистрацийСостоянияПогрузкаРазрешена(
			ТаблицаРегистраций.ВыгрузитьКолонку(ИмяКолонкиРегистрация));
	КонецЕсли;
	
	ВыборкаРегистрации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистрации.Следующий() Цикл
		
		ВыполнитьИзменениеДаты(ВыборкаРегистрации.ДокументРегистрации);
		
		Если СтатусПогрузкаРазрешена Тогда
			СтрокаСостояния = ТаблицаСостояния.Найти(ВыборкаРегистрации.ДокументРегистрации,"ДокументРегистрации");
			ИзменитьДатуПриСостоянииПогрузкаРазрешена(ВыборкаРегистрации.ДокументРегистрации, СтрокаСостояния);
		Иначе
			ИзменитьДатуПриВсехСостояниях(ВыборкаРегистрации.ДокументРегистрации);
		КонецЕсли;	
		
		ВыборкаСвязанный = ВыборкаРегистрации.Выбрать();
		
		Пока ВыборкаСвязанный.Следующий() Цикл			
			ВыполнитьИзменениеДаты(ВыборкаСвязанный.СвязанныйДокумент);			
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьДляРегистрацийСостоянияПогрузкаРазрешена(ДокументыРегистрации)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РССостоянияРегистрацииСрезПоследних.Период КАК Период,
	|	РССостоянияРегистрацииСрезПоследних.ТочкаМаршрута КАК ТочкаМаршрута,
	|	РССостоянияРегистрацииСрезПоследних.ТипРегистрации КАК ТипРегистрации,
	|	РССостоянияРегистрацииСрезПоследних.ДокументРегистрации КАК ДокументРегистрации,
	|	РССостоянияРегистрацииСрезПоследних.ТранспортноеСредство КАК ТранспортноеСредство,
	|	РССостоянияРегистрацииСрезПоследних.ВидПеревозки КАК ВидПеревозки,
	|	РССостоянияРегистрацииСрезПоследних.Состояние КАК Состояние,
	|	РССостоянияРегистрацииСрезПоследних.Пользователь КАК Пользователь,
	|	РССостоянияРегистрацииСрезПоследних.Комментарий КАК Комментарий,
	|	РССостоянияРегистрацииСрезПоследних.МестнаяДата КАК МестнаяДата
	|ИЗ
	|	РегистрСведений.гкс_СостоянияРегистрации.СрезПоследних(
	|			,
	|			ДокументРегистрации В (&ДокументРегистрации)
	|				И Состояние = &СостояниеПоргузкаРазрешена) КАК РССостоянияРегистрацииСрезПоследних
	|";
	
	Запрос.УстановитьПараметр("ДокументРегистрации", ДокументыРегистрации);
	Запрос.УстановитьПараметр("СостояниеПоргузкаРазрешена", Перечисления.гкс_СостоянияРегистрации.ПогрузкаРазрешена);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Процедура ИзменитьДатуПриСостоянииПогрузкаРазрешена(ДокументРегистрации, СтрокаСостояния)
	
	Если СтрокаСостояния = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.гкс_СостоянияРегистрации.СоздатьМенеджерЗаписи();
	
	ИменаСвойств = "Период, ТочкаМаршрута, ТипРегистрации, ДокументРегистрации, ТранспортноеСредство, ВидПеревозки";
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаСостояния, ИменаСвойств);
	
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.Выбран() Тогда		
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаСостояния);
		
		МенеджерЗаписи.Период = Дата;
		ЗаполнитьМестнуюДату(ДокументРегистрации, МенеджерЗаписи.МестнаяДата);		
	
		МенеджерЗаписи.Записать();
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура ИзменитьДатуПриВсехСостояниях(ДокументРегистрации)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.гкс_СостоянияРегистрации.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Отбор.ДокументРегистрации.Установить(ДокументРегистрации);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.Период = НачалоДня(Дата) + (Запись.Период - НачалоДня(Запись.Период));
		МестнаяДата = Запись.МестнаяДата;
		ЗаполнитьМестнуюДату(ДокументРегистрации, Запись.МестнаяДата);
		Запись.МестнаяДата = НачалоДня(Запись.МестнаяДата) + (МестнаяДата - НачалоДня(МестнаяДата));
	КонецЦикла;
	
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Записывать = Истина;
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьИзменениеДаты(ДокументСсылка)
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ДокументОбъект.ОбменДанными.Загрузка = Истина;
	
	Если УчитыватьВремя Тогда
		ДокументОбъект.Дата = Дата;
	Иначе
		ДокументОбъект.Дата = Дата + (ДокументОбъект.Дата - НачалоДня(ДокументОбъект.Дата));
	КонецЕсли;
	
	ЗаполнитьМестнуюДату(ДокументОбъект);
	ЗаписатьДокумент(ДокументОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМестнуюДату(ДокументОбъект, МестнаяДатаОбъекта = Неопределено)
	
	МетаданныеОбъекта = ДокументОбъект.Метаданные();
	
	ЕстьМестнаяДата = гкс_ОбщегоНазначения.ЕстьРеквизитОбъекта("МестнаяДата", МетаданныеОбъекта);
	
	Если Не ЕстьМестнаяДата Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьТочкаМаршрута = гкс_ОбщегоНазначения.ЕстьРеквизитОбъекта("ТочкаМаршрута", МетаданныеОбъекта);
	
	Если ЕстьТочкаМаршрута И ЗначениеЗаполнено(ДокументОбъект.ТочкаМаршрута) Тогда
		ЧасовойПоясПЛК = гкс_ПриемкаТранспорта.ЧасовойПоясПЛК(ДокументОбъект.ТочкаМаршрута);
	Иначе 
		ЧасовойПоясПЛК = Неопределено;
	КонецЕсли;
			
	Если ЗначениеЗаполнено(ЧасовойПоясПЛК) Тогда
		МестнаяДата = МестноеВремя(ДокументОбъект.Дата, ЧасовойПоясПЛК);
	Иначе
		МестнаяДата = ДокументОбъект.Дата;
	КонецЕсли;
	
	Если МестнаяДатаОбъекта = Неопределено Тогда
		ДокументОбъект.МестнаяДата = МестнаяДата;
	Иначе
		МестнаяДатаОбъекта = МестнаяДата;	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДокумент(ДокументОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
	    гкс_ОбщегоНазначения.УстановитьУпрБлокировкуПоЗначениюИПолю(ДокументОбъект.Ссылка);
		ДокументОбъект.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаПоиск()

	Возврат "ВЫБРАТЬ
	|	ДокВзвешивание.ДокументРегистрации КАК ДокументРегистрации,
	|	ДокВзвешивание.Ссылка КАК СвязанныйДокумент
	|ИЗ
	|	Документ.гкс_Взвешивание КАК ДокВзвешивание
	|ГДЕ
	|	ДокВзвешивание.ДокументРегистрации В(&СписокРегистрации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокОснованиеДляДвиженияЗапасов.Регистрация,
	|	ДокОснованиеДляДвиженияЗапасов.Ссылка
	|ИЗ
	|	Документ.гкс_ОснованиеДляДвиженияЗапасов КАК ДокОснованиеДляДвиженияЗапасов
	|ГДЕ
	|	ДокОснованиеДляДвиженияЗапасов.Регистрация В(&СписокРегистрации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокНаправлениеНаРазгрузку.ДокументРегистрации,
	|	ДокНаправлениеНаРазгрузку.Ссылка
	|ИЗ
	|	Документ.гкс_НаправлениеНаРазгрузку КАК ДокНаправлениеНаРазгрузку
	|ГДЕ
	|	ДокНаправлениеНаРазгрузку.ДокументРегистрации В(&СписокРегистрации)
	|ИТОГИ ПО
	|	ДокументРегистрации
	|";

КонецФункции

&НаКлиенте
Процедура ИзменитьДатуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ИзменитьДатуНаСервере();
		
		ОповеститьОбИзменении(Тип("ДокументСсылка.гкс_РегистрацияНаПЛК"));
		Элементы.СвязанныеДокументы.Обновить(); 
			
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьФорматРедактированияДаты()
	
	Если УчитыватьВремя Тогда
		Элементы.Дата.ФорматРедактирования = "ДЛФ=ДВ";
	Иначе
		Дата = НачалоДня(Дата);
		Элементы.Дата.ФорматРедактирования = "ДЛФ=Д";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
