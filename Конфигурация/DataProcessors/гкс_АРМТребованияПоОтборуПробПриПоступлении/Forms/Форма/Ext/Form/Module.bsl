#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьЗаголовокФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборТочкаМаршрутаПриИзменении(Элемент)
	
	ОбновитьТабличнуюЧасть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидПеревозкиПриИзменении(Элемент)
	
	ОбновитьТабличнуюЧасть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТранспортныеСредства

&НаКлиенте
Процедура ТранспортныеСредстваПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортныеСредстваПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСформироватьЗаданиеНаПроверкуКачества(Команда)
	
	ТекущиеДанные = Элементы.ТранспортныеСредства.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ПараметрыОповещения = Новый Структура;
		Оповещение = Новый ОписаниеОповещения("ОбработчикОжиданияОбновитьТранспортныеСредства", ЭтотОбъект, 
			ПараметрыОповещения);
		ПараметрыОткрытия = Новый Структура;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ЗаданиеНаПроверку) Тогда
			ПараметрыОткрытия.Вставить("Ключ", ТекущиеДанные.ЗаданиеНаПроверку);
		Иначе
			
			ПараметрыЗаполненияЗадания = Новый Структура;
			ПараметрыЗаполненияЗадания.Вставить("ТранспортныйДокумент", ТекущиеДанные.ТранспортныйДокумент);
			ПараметрыЗаполненияЗадания.Вставить("Номенклатура", ОтборНоменклатура);
			ПараметрыЗаполненияЗадания.Вставить("ТочкаМаршрута", ОтборТочкаМаршрута);
			ПараметрыЗаполненияЗадания.Вставить("ТранспортноеСредство", ТекущиеДанные.ТранспортноеСредство);
			ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ПараметрыЗаполненияЗадания);
			
		КонецЕсли;
		
		ОткрытьФорму("Документ.гкс_ЗаданияНаПроверкуКачества.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект, 
			ЭтотОбъект, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновить(Команда)
	
	ОбновитьТабличнуюЧасть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьЗаголовокФормы()
	
	Если Параметры.Свойство("ТребованияПоОтборуПробПриПоступлении") Тогда
		ЭтотОбъект.АвтоЗаголовок = Ложь;
		ЭтотОбъект.Заголовок = НСтр("ru='Рабочее место ""Требования по отбору проб при поступлении""'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТабличнуюЧасть()
	
	Если ЗначениеЗаполнено(ОтборНоменклатура) И ЗначениеЗаполнено(ОтборТочкаМаршрута) Тогда
		ОбновитьТабличнуюЧастьНаСервере();
	Иначе
		ТранспортныеСредства.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТабличнуюЧастьНаСервере()
	
	ТранспортныеСредства.Очистить();
	
	СписокТД = Документы.гкс_ЗаданияНаПроверкуКачества.ПолучитьСписокДоступныхТранспортныхДокументов(
		ОтборТочкаМаршрута, ОтборНоменклатура, ТекущаяДатаСеанса());
		
	ПереченьПоказателей = Документы.гкс_ЗаданияНаПроверкуКачества.ЗаполнитьПоказателиНоменклатурыСУчетомЗаданий(
		ОтборТочкаМаршрута, ОтборНоменклатура, СписокТД);
		
	УстановитьВидимостьПоказателей(ПереченьПоказателей);
	
	ЗаполнитьТаблицуТД(СписокТД, ПереченьПоказателей);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТД(СписокТД, ПереченьПоказателей)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = Документы.гкс_ЗаданияНаПроверкуКачества.ТекстЗапросаПолучениеСпискаНормативныПоказателейАнализа();
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТочкаМаршрута", ОтборТочкаМаршрута);
	Запрос.УстановитьПараметр("Номенклатура", ОтборНоменклатура);
	Запрос.УстановитьПараметр("СписокТД", СписокТД);
	Запрос.УстановитьПараметр("ДатаПоУмолчанию", Дата(2099, 1, 1));
	
	Результат = Запрос.Выполнить();
	ТаблицаНормативныхПоказателей = Результат.Выгрузить();
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦБТ_ТранспортныйДокумент.Ссылка КАК ТранспортныйДокумент,
		|	ЦБТ_ТранспортныйДокумент.ДатаПогрузки КАК ДатаПогрузки,
		|	ЦБТ_ТранспортныйДокумент.Контрагент КАК Контрагент,
		|	ЦБТ_ТранспортныйДокументТранспортныеСредства.ТранспортноеСредство КАК ТранспортноеСредство,
		|	ЕСТЬNULL(гкс_ТочкиМаршрута.КодСтанцииЖД, НЕОПРЕДЕЛЕНО) КАК СтанцияОтправления
		|ПОМЕСТИТЬ ВТ_ТранспортныеДокументы
		|ИЗ
		|	Документ.гкс_ТранспортныйДокумент.ТранспортныеСредства КАК ЦБТ_ТранспортныйДокументТранспортныеСредства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_ТранспортныйДокумент КАК ЦБТ_ТранспортныйДокумент
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гкс_ТочкиМаршрута КАК гкс_ТочкиМаршрута
		|			ПО ЦБТ_ТранспортныйДокумент.ПунктПогрузки = гкс_ТочкиМаршрута.Ссылка
		|		ПО ЦБТ_ТранспортныйДокументТранспортныеСредства.Ссылка = ЦБТ_ТранспортныйДокумент.Ссылка
		|			И (ЦБТ_ТранспортныйДокументТранспортныеСредства.Номенклатура = &Номенклатура)
		|ГДЕ
		|	ЦБТ_ТранспортныйДокумент.Ссылка В(&СписокТД)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТранспортныеДокументы.ТранспортныйДокумент КАК ТранспортныйДокумент,
		|	ВТ_ТранспортныеДокументы.ДатаПогрузки КАК ДатаПогрузки,
		|	ВТ_ТранспортныеДокументы.Контрагент КАК Контрагент,
		|	ВТ_ТранспортныеДокументы.ТранспортноеСредство КАК ТранспортноеСредство,
		|	ВТ_ТранспортныеДокументы.СтанцияОтправления КАК СтанцияОтправления
		|ИЗ
		|	ВТ_ТранспортныеДокументы КАК ВТ_ТранспортныеДокументы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданияНаПроверкуКачестваСрезПоследних.ТранспортныйДокумент КАК ТранспортныйДокумент,
		|	ЗаданияНаПроверкуКачестваСрезПоследних.ТранспортноеСредство КАК ТранспортноеСредство,
		|	ЗаданияНаПроверкуКачестваСрезПоследних.ПоказательАнализа КАК ПоказательАнализа,
		|	ЗаданияНаПроверкуКачестваСрезПоследних.ВыполнитьАнализ КАК ВыполнитьАнализ,
		|	ЗаданияНаПроверкуКачестваСрезПоследних.Регистратор КАК ЗаданиеНаПроверку
		|ИЗ
		|	РегистрСведений.гкс_ЗаданияНаПроверкуКачества.СрезПоследних(
		|			&Дата,
		|			ТранспортныйДокумент В (&СписокТД)
		|				И Номенклатура = &Номенклатура) КАК ЗаданияНаПроверкуКачестваСрезПоследних
		|ИТОГИ ПО
		|	ПоказательАнализа";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаТД = РезультатЗапроса[1].Выбрать();
	ТЗТранспортныеСредства = ДанныеФормыВЗначение(ТранспортныеСредства,Тип("ТаблицаЗначений"));
	
	Пока ВыборкаТД.Следующий() Цикл
		НовыйТранспорт = ТЗТранспортныеСредства.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйТранспорт, ВыборкаТД);
	КонецЦикла;
	
	// установим все нормативные показатели в ИСТИНА
	Для Каждого СтрокаНормативныйПоказатель Из ТаблицаНормативныхПоказателей Цикл
		НормативныйПоказатель = СтрокаНормативныйПоказатель.ПоказательАнализа;
		СтрокаПоказатель = ПереченьПоказателей.Найти(НормативныйПоказатель, "ПоказательАнализа");
		Если СтрокаПоказатель <> Неопределено Тогда
			НомерПП = СтрокаПоказатель.НомерПП;
			ТЗТранспортныеСредства.ЗаполнитьЗначения(Истина, "Показатель" + НомерПП);
		КонецЕсли;
	КонецЦикла;
	
	// заменим значения по умолчанию на значения из заданий на проверку качества
	ВыборкаПоказательАнализа = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоказательАнализа.Следующий() Цикл
		
		СтрокаПоказатель = ПереченьПоказателей.Найти(ВыборкаПоказательАнализа.ПоказательАнализа, 
			"ПоказательАнализа");
			
		Если СтрокаПоказатель <> Неопределено Тогда
			НомерПП = СтрокаПоказатель.НомерПП;
			НазваниеПоказателя = "Показатель" + НомерПП;
			ВыборкаДетальныеЗаписи = ВыборкаПоказательАнализа.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СтруктураПоиска = Новый Структура("ТранспортныйДокумент, ТранспортноеСредство", 
					ВыборкаДетальныеЗаписи.ТранспортныйДокумент, ВыборкаДетальныеЗаписи.ТранспортноеСредство);
				Строки = ТЗТранспортныеСредства.НайтиСтроки(СтруктураПоиска);
				Для Каждого Строка Из Строки Цикл
					Строка[НазваниеПоказателя] = ВыборкаДетальныеЗаписи.ВыполнитьАнализ;
					Строка.ЗаданиеНаПроверку = ВыборкаДетальныеЗаписи.ЗаданиеНаПроверку;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;

	КонецЦикла;
	
	ЗначениеВДанныеФормы(ТЗТранспортныеСредства, ТранспортныеСредства);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПоказателей(ПереченьПоказателей)
	
	Если ПереченьПоказателей = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоПоказателей = ПереченьПоказателей.Количество();
	
	Для НомерПоказателя = 1 По 20 Цикл
		ПоказательВидим = НомерПоказателя <= КоличествоПоказателей;
		Элементы["ТранспортныеСредстваПоказатель" + НомерПоказателя].Видимость = ПоказательВидим;
		Если ПоказательВидим Тогда
			Элементы["ТранспортныеСредстваПоказатель" + НомерПоказателя].Заголовок = 
				ПереченьПоказателей[НомерПоказателя - 1].ПоказательАнализа.Наименование;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияОбновитьТранспортныеСредства(Результат, Параметры) Экспорт
	
	ОбновитьТабличнуюЧастьНаСервере();
	
КонецПроцедуры

#КонецОбласти



