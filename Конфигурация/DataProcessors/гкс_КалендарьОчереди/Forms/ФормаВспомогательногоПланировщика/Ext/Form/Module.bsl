
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначенияЗаполнения = Параметры.ЗначенияЗаполнения;
	           
	СписокСвойств = "ТочкаМаршрута, ТипРегистрации, Номенклатура";
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияЗаполнения, СписокСвойств);
	
	Объект.УсловиеПроезда = ЗначенияЗаполнения.УсловиеПроезда;
	
	Если ЗначенияЗаполнения.Свойство("РазницаСоВременемСеансаВСек") Тогда
		РазницаСоВременемСеансаВСек = ЗначенияЗаполнения.РазницаСоВременемСеансаВСек;
	КонецЕсли;
	
	ЗаполнитьПланировщикДанными(ЗначенияЗаполнения);
	НастроитьПланировщик(ЗначенияЗаполнения.НачалоПериода, ЗначенияЗаполнения.ОкончаниеПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаОчередь" И ЗначениеЗаполнено(Параметр) Тогда
		
		Если ТипЗнч(Параметр) = Тип("ДокументСсылка.гкс_ЗаписьВОчередьПриемкиПЛК")
			ИЛИ ТипЗнч(Параметр) = Тип("ДокументСсылка.гкс_ЗаписьВОчередьОтгрузкиПЛК") Тогда
			
			ОбработкаОповещенияНаСервере(Параметр);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПланировщик

&НаКлиенте
Процедура ПланировщикПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, Значения, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Конец >= ТекущаяДата() + РазницаСоВременемСеансаВСек Тогда
		ОткрытьФормуРедактирования(Элемент, Начало, Конец);
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Создание записей в прошедшем периоде запрещено!'");
		ПоказатьПредупреждение( , ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикВыбор(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуРедактирования(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуРедактирования(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	
	ОткрытьФормуРедактирования(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	
	СписокЗаписейПланировщика = Элемент.ВыделенныеЭлементы;
	СписокЗаписей = Новый СписокЗначений;
	Для Каждого ТекЗапись Из СписокЗаписейПланировщика Цикл
		СписокЗаписей.Добавить(ТекЗапись.Значение);
	КонецЦикла;
	
	Если СписокЗаписей.Количество() > 0 Тогда
		ОтменитьЗаписиНаСервере(СписокЗаписей);
		ОбновитьЗаписиПланировщика();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработкаОповещенияНаСервере(ЗаписьВОчередь)
	
	Если Не ЗаписьВОчередь.Проведен Тогда
		СписокЗаписей = Новый СписокЗначений;
		СписокЗаписей.Добавить(ЗаписьВОчередь);
		ОтменитьЗаписиНаСервере(СписокЗаписей);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПланировщикДанными(ЗначенияЗаполнения)
	
	Объект.РежимРаботы = Перечисления.гкс_РежимРаботыКалендаряОчереди.Менеджер;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаполнитьПланировщикДанными(Планировщик, ЗначенияЗаполнения);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПланировщик(ДатаНачала, ДатаОкончания)
	
	// поставим заглушку
	// при повторном открытии элемента планировщика он не заполняется в обработчике события
	Если ДатаНачала = Неопределено Или ДатаОкончания = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Сперва откройте другой период!'");
		ВызватьИсключение(ТекстПредупреждения);
	КонецЕсли;
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	Планировщик.ТекущиеПериодыОтображения.Добавить(ДатаНачала, ДатаОкончания);
	
	ЭлементШкалыВремени = Планировщик.ШкалаВремени.Элементы[0];
	ЭлементШкалыВремени.Единица = ТипЕдиницыШкалыВремени.Минута;
	ЭлементШкалыВремени.Кратность = ПолучитьКратностьЭлементаШкалыВремени(Планировщик.ТекущиеПериодыОтображения[0].Начало);
	ЭлементШкалыВремени.Формат = "ДФ='HH:mm'";
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКратностьЭлементаШкалыВремени(Дата)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка Тогда
		МенеджерГрафика = РегистрыСведений.гкс_ГрафикПриемкиПЛК;
	Иначе
		МенеджерГрафика = РегистрыСведений.гкс_ГрафикОтгрузкиПЛК;	
	КонецЕсли;

	КоличествоТС_В_Час = МенеджерГрафика.КоличествоТранспортныхСредствВЧас(Дата, Номенклатура);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	КоличествоТС_В_Час = ?(ЗначениеЗаполнено(КоличествоТС_В_Час), КоличествоТС_В_Час, 1);
	КоличествоМинутВЧасе = 60;
	
	Кратность = КоличествоМинутВЧасе / КоличествоТС_В_Час;
	
	Возврат Кратность;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуРедактирования(Элемент, Начало = Неопределено, Конец = Неопределено)
	
	Если Элемент.ВыделенныеЭлементы.Количество() Тогда
		РедактируемыйЭлемент = Элемент.ВыделенныеЭлементы[0].Значение;
		Начало = Элемент.ВыделенныеЭлементы[0].Начало;
		Конец = Элемент.ВыделенныеЭлементы[0].Конец;
	Иначе
		РедактируемыйЭлемент = Неопределено;
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура("НачалоПериода, ОкончаниеПериода", Начало, Конец);
		
	Если РедактируемыйЭлемент = Неопределено 
		И Не Начало = Неопределено И Не Конец = Неопределено Тогда
		
		Для каждого ИнтервалФона Из Планировщик.ИнтервалыФона Цикл
			
			Если ИнтервалФона.Начало <= Начало И ИнтервалФона.Конец >= Конец
				И ИнтервалФона.Метки.Количество() Тогда
				СегментНоменклатуры = ИнтервалФона.Метки[0].Значение; // добавлена только одна метка в интервале
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	ЗначенияЗаполнения.Вставить("ТочкаМаршрута", ТочкаМаршрута);
	ЗначенияЗаполнения.Вставить("Номенклатура", Номенклатура);
	ЗначенияЗаполнения.Вставить("УсловиеПроезда", Объект.УсловиеПроезда);
	
	ПараметрыФормы = Новый Структура("Ключ, ЗначенияЗаполнения", РедактируемыйЭлемент, ЗначенияЗаполнения);
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияФормыДокумента", ЭтотОбъект);
	
	ОткрытьФорму(ИмяФормыРедактированияЭлементаПланировщика(), ПараметрыФормы, ЭтотОбъект, , , ,
			     Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
			 			 
&НаКлиенте
Функция ИмяФормыРедактированияЭлементаПланировщика()

	Если ТипРегистрации = ПредопределенноеЗначение("Перечисление.гкс_ТипРегистрации.Отгрузка") Тогда
		ИмяОткрываемойФормы = "Документ.гкс_ЗаписьВОчередьОтгрузкиПЛК.ФормаОбъекта";
		
	ИначеЕсли ТипРегистрации = ПредопределенноеЗначение("Перечисление.гкс_ТипРегистрации.Приемка") Тогда 
		ИмяОткрываемойФормы = "Документ.гкс_ЗаписьВОчередьПриемкиПЛК.ФормаОбъекта";		
	Иначе
		ИмяОткрываемойФормы = "";		
	КонецЕсли;
	
	Возврат ИмяОткрываемойФормы;
	
КонецФункции	
			 
&НаКлиенте
Процедура ПослеЗакрытияФормыДокумента(Результат, Параметры) Экспорт
	
	ОбновитьЗаписиПланировщика();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаписиПланировщика(ДатаНачала = Неопределено, ДатаОкончания = Неопределено)
	
	Если ДатаНачала = Неопределено И ДатаОкончания = Неопределено Тогда
		ДатаНачала = Планировщик.ТекущиеПериодыОтображения[0].Начало;
		ДатаОкончания = Планировщик.ТекущиеПериодыОтображения[0].Конец;
	КонецЕсли;
	
	Планировщик.Элементы.Очистить();
	Планировщик.ИнтервалыФона.Очистить();
	
	ЗначенияЗаполнения = Новый Структура();
	ЗначенияЗаполнения.Вставить("НачалоПериода", ДатаНачала);
	ЗначенияЗаполнения.Вставить("ОкончаниеПериода", ДатаОкончания);
	ЗначенияЗаполнения.Вставить("ТипРегистрации", ТипРегистрации);
		
	ЗаполнитьПланировщикДанными(ЗначенияЗаполнения);
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьЗаписиНаСервере(СписокЗаписей)
	
	Обработки.гкс_КалендарьОчереди.ОтменитьЗаписиВКалендаре(СписокЗаписей);
	
КонецПроцедуры

#КонецОбласти

