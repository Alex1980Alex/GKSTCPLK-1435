#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных
	
Перем НастройкиЦвета;

#КонецОбласти	
	
#Область ПрограммныйИнтерфейс

Функция ЗагрузитьНастройкиЦвета() Экспорт
	
	Возврат ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить(
		"Обработка.гкс_КалендарьОчереди", "НастройкиЦветаЭлементовПланировщика");
	
КонецФункции

Процедура СохранитьНастройкиЦвета(НастройкиЦвета) Экспорт
	
	ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить(
		"Обработка.гкс_КалендарьОчереди", "НастройкиЦветаЭлементовПланировщика", НастройкиЦвета);
	
КонецПроцедуры

// Получает данные и заполняет планировщик элементами
//
// Параметры:
//  Планировщик  - Планировщик - объект заполнения
//                 
//  ПараметрыЗаполнения  - Структура - настройки для заполнения
//                 
Процедура ЗаполнитьПланировщикДанными(Планировщик, ПараметрыЗаполнения) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерВремени();
	
	НастройкиЦвета = ЗагрузитьНастройкиЦвета();
	
	Период = Новый Структура("ДатаНачала, ДатаОкончания",
		ПараметрыЗаполнения.НачалоПериода, ПараметрыЗаполнения.ОкончаниеПериода);
		
	ЗаполнитьДаннымиГрафика(Планировщик, Период, ПараметрыЗаполнения);
	
	Если РежимРаботы = Перечисления.гкс_РежимРаботыКалендаряОчереди.Менеджер Тогда
		ЗаполнитьДаннымиОчереди(Планировщик, Период, ПараметрыЗаполнения);
	КонецЕсли;
		
	ОценкаПроизводительности.ЗакончитьЗамерВремени("КалендарьОчереди.ЗаполнениеПланировщикаНаСервере", Замер);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДаннымиГрафика(Планировщик, Период, ПараметрыЗаполнения)
	
	ВыборкаГрафика = ДанныеГрафиков(Период, ПараметрыЗаполнения.ТипРегистрации);
		
	Пока ВыборкаГрафика.Следующий() Цикл
		
		ЗначенияИзмерений = ИзмеренияЭлементаПланировщика(ВыборкаГрафика.Номенклатура);
			
		Если РежимРаботы = Перечисления.гкс_РежимРаботыКалендаряОчереди.Диспетчер Тогда
		
			НовыйЭлемент = Планировщик.Элементы.Добавить(ВыборкаГрафика.НачалоПериода, ВыборкаГрафика.ОкончаниеПериода);
			
			НовыйЭлемент.Текст = ЗаголовокЭлементаГрафика(ВыборкаГрафика.КоличествоТранспортныхСредствВЧас,
														  ВыборкаГрафика.КоличествоТранспортныхСредствВЧасПоЭО);
				
			НовыйЭлемент.ЗначенияИзмерений = ЗначенияИзмерений;
			НовыйЭлемент.Значение = ВыборкаГрафика.Регистратор;
			
			Если Не НастройкиЦвета = Неопределено Тогда
				НастройкаФона = НастройкиЦвета.Найти(ВыборкаГрафика.Номенклатура, "Номенклатура");
				Если Не НастройкаФона = Неопределено Тогда
					НовыйЭлемент.ЦветФона = НастройкаФона.Цвет;
				Иначе
					НовыйЭлемент.ЦветФона = WebЦвета.СеребристоСерый; // установим цвет по умолчанию
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли РежимРаботы = Перечисления.гкс_РежимРаботыКалендаряОчереди.Менеджер Тогда
			
			НовыйЭлемент = Планировщик.ИнтервалыФона.Добавить(ВыборкаГрафика.НачалоПериода, ВыборкаГрафика.ОкончаниеПериода);	
			НовыйЭлемент.ЗначенияИзмерений = ЗначенияИзмерений;
			
			ТекстМетки = ТекстМеткиИнтервалаФонаГрафика(ВыборкаГрафика.НачалоПериода, ВыборкаГрафика.ОкончаниеПериода, 
				ВыборкаГрафика.КоличествоТранспортныхСредствВЧас, ВыборкаГрафика.КоличествоТранспортныхСредствВЧасПоЭО);
			
			Метка = НовыйЭлемент.Метки.Добавить(ВыборкаГрафика.Номенклатура, ТекстМетки);
			Метка.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
			Метка.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
			
			НовыйЭлемент.Цвет = WebЦвета.СеребристоСерый;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Функция ЗаголовокЭлементаГрафика(КоличествоТранспортныхСредствВЧас, КоличествоТранспортныхСредствВЧасПоЭО)
	
	СтрокаШаблон = НСтр("ru = 'количество ТС/час: %1, в т.ч. по ЭО: %2'");
	Возврат СтрШаблон(СтрокаШаблон, КоличествоТранспортныхСредствВЧас, КоличествоТранспортныхСредствВЧасПоЭО);
	
КонецФункции

Функция ТекстМеткиИнтервалаФонаГрафика(НачалоПериода, ОкончаниеПериода, 
	КоличествоТранспортныхСредствВЧас, КоличествоТранспортныхСредствВЧасПоЭО)
	
	СтрокаШаблон = НСтр("ru='%1 - %2 , количество ТС/час: %3, в т.ч. по ЭО: %4'");
	Возврат СтрШаблон(СтрокаШаблон,
		Формат(НачалоПериода, "ДФ=hh:mm"), Формат(ОкончаниеПериода, "ДФ=hh:mm"),
		КоличествоТранспортныхСредствВЧас, КоличествоТранспортныхСредствВЧасПоЭО);
																			
КонецФункции

Функция ИзмеренияЭлементаПланировщика(Номенклатура)
	
	Измерения = Новый Соответствие;
	Измерения.Вставить("Номенклатура", Номенклатура);
	
	Возврат Новый ФиксированноеСоответствие(Измерения);	
	
КонецФункции

Процедура ЗаполнитьДаннымиОчереди(Планировщик, Период, ПараметрыЗаполнения)
			
	ВыборкаОчереди = ДанныеОчередей(Период, ПараметрыЗаполнения.ТипРегистрации);
			
	Пока ВыборкаОчереди.Следующий() Цикл
		
		НовыйЭлемент = Планировщик.Элементы.Добавить(ВыборкаОчереди.НачалоПериода, ВыборкаОчереди.ОкончаниеПериода);
		НовыйЭлемент.Текст = ЗаголовокЭлементаОчереди(
			ВыборкаОчереди.ТранспортноеСредство, ВыборкаОчереди.Контрагент, ВыборкаОчереди.Статус);
		НовыйЭлемент.Значение = ВыборкаОчереди.Регистратор;
		
		Измерения = Новый Соответствие;
		Измерения.Вставить("Номенклатура", ВыборкаОчереди.Номенклатура);
		
		НовыйЭлемент.ЗначенияИзмерений = Новый ФиксированноеСоответствие(Измерения);
		
		Если Не НастройкиЦвета = Неопределено Тогда
			НастройкаФона = НастройкиЦвета.Найти(ВыборкаОчереди.Номенклатура, "Номенклатура");
			Если Не НастройкаФона = Неопределено Тогда
				НовыйЭлемент.ЦветФона = НастройкаФона.Цвет;
			Иначе
				НовыйЭлемент.ЦветФона = WebЦвета.СеребристоСерый; // установим цвет по умолчанию
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаголовокЭлементаОчереди(ТранспортноеСредство, Контрагент, Статус)
	
	СтрокаШаблон = НСтр("ru=' %1  %2,  %3'");
	Возврат СтрШаблон(СтрокаШаблон, ТранспортноеСредство, Контрагент, Статус);
	
КонецФункции

Функция ДанныеГрафиков(Период, ТипРегистрации)	
	
	Если ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка Тогда
		Возврат РегистрыСведений.гкс_ГрафикПриемкиПЛК.ЗаписиГрафикаЗаПериод(Период, УсловиеПроезда);
	Иначе
		Возврат РегистрыСведений.гкс_ГрафикОтгрузкиПЛК.ЗаписиГрафикаЗаПериод(Период);	
	КонецЕсли;
		
КонецФункции

Функция ДанныеОчередей(Период, ТипРегистрации)	
	
	Если ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка Тогда	
		Возврат РегистрыСведений.гкс_ОчередьПриемкиПЛК.ЗаписиВОчередьЗаПериод(Период, УсловиеПроезда);
	Иначе
		Возврат РегистрыСведений.гкс_ОчередьОтгрузкиПЛК.ЗаписиВОчередьЗаПериод(Период);	
	КонецЕсли;
				
КонецФункции

#КонецОбласти

#КонецЕсли