#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Формат;
Перем Объект;
Перем МенеджерФорматов;
Перем Сообщение;
Перем ПотокЗаписи;
Перем ТипСериализации;
#Область ТестыИспытания
Перем Тесты_ВыбрасыватьИсключениеПриСериализацииXDTOJSON;
Перем Тесты_ВыбрасыватьИсключениеПриСериализацииXDTOXML;
Перем Тесты_ВыбрасыватьИсключениеПриСериализацииXML;
#КонецОбласти

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура УстановитьФормат(ФорматСообщения) Экспорт
	
	Формат = ФорматСообщения;
	
	Если МенеджерФорматов.ЭтоСтандартнаяСериализацияXML(Формат) Тогда
		ТипСериализации = "XML"; 	
	ИначеЕсли МенеджерФорматов.ЭтоСтандартнаяСериализацияXDTOJSON(Формат) Тогда 
		ТипСериализации = "XDTOJSON"; 
	ИначеЕсли МенеджерФорматов.ЭтоСтандартнаяСериализацияXDTOXML(Формат) Тогда
		ТипСериализации = "XDTOXML"; 
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОбъект(ОбъектСобытия) Экспорт
	
	Объект = ОбъектСобытия;
	
КонецПроцедуры

Функция СформироватьСообщение() Экспорт
	
	Сообщение = Неопределено;
	
	Если ЭтоСериализацияВXML() Тогда
		Сообщение = СформироватьСообщениеСтандартнаяСериализацияXML(); 	
	ИначеЕсли ЭтоСериализацияВXDTOJSON() Тогда 
		Сообщение = СформироватьСообщениеСтандартнаяСериализацияXDTOJSON(); 
	ИначеЕсли ЭтоСериализацияВXDTOXML() Тогда
		Сообщение = СформироватьСообщениеСтандартнаяСериализацияXDTOXML(); 
	КонецЕсли;
	
	Возврат Сообщение;
	
КонецФункции

#КонецОбласти

#Область ТестыИспытания

Процедура НастроитьОбъектДляТестовИспытаний(ПараметрыТестов) Экспорт
	
	Если ПараметрыТестов.Свойство("ВыбрасыватьИсключениеПриСериализацииXDTOJSON") 
	     И ЗначениеЗаполнено(ПараметрыТестов["ВыбрасыватьИсключениеПриСериализацииXDTOJSON"]) Тогда
		Тесты_ВыбрасыватьИсключениеПриСериализацииXDTOJSON = 
		ПараметрыТестов["ВыбрасыватьИсключениеПриСериализацииXDTOJSON"];
	КонецЕсли;
	
	Если ПараметрыТестов.Свойство("ВыбрасыватьИсключениеПриСериализацииXDTOXML") 
	     И ПараметрыТестов["ВыбрасыватьИсключениеПриСериализацииXDTOJSON"]Тогда
    	Тесты_ВыбрасыватьИсключениеПриСериализацииXDTOXML = 
    	ПараметрыТестов["ВыбрасыватьИсключениеПриСериализацииXDTOXML"];
	КонецЕсли;
	
	Если ПараметрыТестов.Свойство("ВыбрасыватьИсключениеПриСериализацииXML") 
	     И ПараметрыТестов["ВыбрасыватьИсключениеПриСериализацииXDTOJSON"]Тогда
 		Тесты_ВыбрасыватьИсключениеПриСериализацииXML = ПараметрыТестов["ВыбрасыватьИсключениеПриСериализацииXML"];		          
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеСообщений

#Область ЗаписьОбъектВПоток

Процедура ЗаписатьОбъектСтандартнаяСериализация()
	
	ЗаписатьОбъектПотокПоТипуСтандартнойСериализации(Объект);
	
КонецПроцедуры

Процедура ЗаписатьОбъектПотокПоТипуСтандартнойСериализации(ОбъектВПоток)
	
	Если ТипСериализации = "XDTOXML" Тогда
		СериализаторXDTO.ЗаписатьXML(ПотокЗаписи, ОбъектВПоток, НазначениеТипаXML.Явное);	
	ИначеЕсли ТипСериализации = "XDTOJSON" Тогда
		СериализаторXDTO.ЗаписатьJSON(ПотокЗаписи, ОбъектВПоток, НазначениеТипаXML.Явное);
	ИначеЕсли ТипСериализации = "XML" Тогда
		ЗаписатьXML(ПотокЗаписи, ОбъектВПоток, НазначениеТипаXML.Явное);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ИнициализацияПотокаЗаписи

Процедура ИнициализацияПотокаЗаписиXDTOJSON()

	ПотокЗаписи = Новый ЗаписьJSON();
	ПараметрыСериализации = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	ПотокЗаписи.УстановитьСтроку(ПараметрыСериализации);
		
КонецПроцедуры

Процедура ИнициализацияПотокаЗаписиXDTOXML()
	
	ИнициализацияПотокаЗаписиXML();
	
КонецПроцедуры

Процедура ИнициализацияПотокаЗаписиXML()
	
	ПотокЗаписи = Новый ЗаписьXML();
	ПотокЗаписи.УстановитьСтроку("UTF-8");
	ПотокЗаписи.ЗаписатьОбъявлениеXML();
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьСтрокуИзПотока()
	
	Возврат ПотокЗаписи.Закрыть();
	
КонецФункции

Функция СформироватьСообщениеСтандартнаяСериализацияXDTOJSON() 
	
	Если Тесты_ВыбрасыватьИсключениеПриСериализацииXDTOJSON Тогда
		Тесты_ИсключениеПриСериализацииXDTOJSON();;
	КонецЕсли;
	
	ИнициализацияПотокаЗаписиXDTOJSON();
	
	ЗаписатьОбъектСтандартнаяСериализация();
	
	Возврат ПолучитьСтрокуИзПотока();
	
КонецФункции

Функция СформироватьСообщениеСтандартнаяСериализацияXDTOXML() 
	
	Если Тесты_ВыбрасыватьИсключениеПриСериализацииXDTOXML Тогда
		Тесты_ИсключениеПриСериализацииXDTOXML();;
	КонецЕсли;
	
	ИнициализацияПотокаЗаписиXDTOXML();
	
	ЗаписатьОбъектСтандартнаяСериализация();	
	
	Возврат ПолучитьСтрокуИзПотока();
	
КонецФункции

Функция СформироватьСообщениеСтандартнаяСериализацияXML() 
	
	Если Тесты_ВыбрасыватьИсключениеПриСериализацииXML Тогда
		Тесты_ИсключениеПриСериализацииXML();
	КонецЕсли;
	
	ИнициализацияПотокаЗаписиXML();
	
	ЗаписатьОбъектСтандартнаяСериализация();	
	
	Возврат ПолучитьСтрокуИзПотока();
	
КонецФункции
	
#КонецОбласти

#Область Вспомогательные


Функция ЭтоСериализацияВXML()
	Возврат ТипСериализации = "XML"; 	
КонецФункции

Функция ЭтоСериализацияВXDTOXML()
	Возврат ТипСериализации = "XDTOXML"; 
КонецФункции

Функция ЭтоСериализацияВXDTOJSON()
	Возврат ТипСериализации = "XDTOJSON"; 
КонецФункции

#КонецОбласти

#Область Исключения

Процедура Тесты_ИсключениеПриСериализацииXDTOJSON()
	ВызватьИсключение НСтр("ru='Тесты. Смоделировано исключение при сериализации XDTO(JSON)'");
КонецПроцедуры

Процедура Тесты_ИсключениеПриСериализацииXDTOXML()
	ВызватьИсключение НСтр("ru='Тесты. Смоделировано исключение при сериализации XDTO(XML)'");
КонецПроцедуры

Процедура Тесты_ИсключениеПриСериализацииXML()
	ВызватьИсключение НСтр("ru='Тесты. Смоделировано исключение при сериализации XML'");
КонецПроцедуры

#КонецОбласти	

#КонецОбласти

#Область ИнициализацияПеременных

МенеджерФорматов = Справочники.гкс_ФорматыОбменаИАС;

#Область ТестыИспытания

Тесты_ВыбрасыватьИсключениеПриСериализацииXDTOJSON = Ложь;
Тесты_ВыбрасыватьИсключениеПриСериализацииXDTOXML = Ложь;
Тесты_ВыбрасыватьИсключениеПриСериализацииXML = Ложь;

#КонецОбласти

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли