#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда 

#Область ПрограммныйИнтерфейс       

 #Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  ПараметрыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыПечати
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	СтруктураТипов = гкс_ОбщегоНазначенияПЛК.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПриемныйАктЛокализация_by") Тогда
		
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПФ_MXL_ПриемныйАктЛокализация_by");
		ПараметрыПечати.Вставить("ОриентацияСтраницы", ОриентацияСтраницы.Ландшафт);
		ПараметрыПечати.Вставить("ДвусторонняяПечать", ТипДвустороннейПечати.ПереворотВверх);
		ПараметрыПечати.Вставить("ПолныйПутьКМакету", 
			"Обработка.гкс_ПечатьПриемныйАкт_ЗПП14.ПФ_MXL_ПриемныйАктЛокализация_by");
	
		ТабличныйДокумент = ПечатнаяФормаАкта(СтруктураТипов, ОбъектыПечати, ПараметрыПечати);
		 
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПФ_MXL_ПриемныйАктЛокализация_by",
			НСтр("ru='Приемный акт ЗПП-14 (Беларусь)';en='Priemniy akt ZPP-14'"), 
			ТабличныйДокумент);
	КонецЕсли;
				
КонецПроцедуры

#КонецОбласти	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатнаяФормаАкта(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ПараметрыПечати.Свойство("ИмяПараметровПечати", ТабличныйДокумент.ИмяПараметровПечати);
	ПараметрыПечати.Свойство("ОриентацияСтраницы", ТабличныйДокумент.ОриентацияСтраницы);
		
	УстановитьПривилегированныйРежим(Истина);
			
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл

		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = гкс_ЛокализацияСервер.МодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		
		ДанныеДляПечати = МенеджерОбъекта.
			ДанныеДляПечатнойФормыАктПриемкиЗПП14(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		Если Не ДанныеДляПечати = Неопределено Тогда
			ЗаполнитьТабличныйДокументАктПриемкиЗПП14(ТабличныйДокумент, 
				ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Процедура заполняет табличный документ
//
Процедура ЗаполнитьТабличныйДокументАктПриемкиЗПП14(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам	= ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДанныеШапки = гкс_ОбщегоНазначения.СтруктураПоРезультатуЗапроса(ДанныеДляПечати.РезультатПоШапке);
	ДанныеСтроки = гкс_ОбщегоНазначения.СтруктураПоРезультатуЗапроса(ДанныеДляПечати.РезультатПоТабличнойЧасти);
	
	ДанныеДополнительные = Новый Структура;
	ПараметрыПечати.Свойство("ДанныеПечати", ДанныеДополнительные); 
	
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПараметрыПечати.ПолныйПутьКМакету);
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка; 
		
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ДанныеШапки, ДанныеПечати);
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("РеестрНакладных", ДанныеШапки.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		КоличествоСтрок = СтрокаТовары.Количество(); 
		
		Если КоличествоСтрок = 0 Тогда
			Продолжить;	
		КонецЕсли;
			
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ИтоговыеСуммы = ИнициализироватьТаблицуИтогов();
		
		ВывестиШапку(ДанныеШапки, Макет, ТабличныйДокумент); 
		
		Пока СтрокаТовары.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, СтрокаТовары);
			ВывестиСтроки(ДанныеШапки, ДанныеСтроки, Макет, ТабличныйДокумент, ИтоговыеСуммы);
		КонецЦикла;
		
		ВывестиИтого(Макет, ТабличныйДокумент, ИтоговыеСуммы);
			
		// Выводим подвал документа
		ВывестиПодвал(ДанныеШапки, Макет, ТабличныйДокумент, ДанныеДополнительные);				
				
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ДанныеШапки.Ссылка);

	КонецЦикла; // Конец цикла обхода выборки "ДанныеПечати"

КонецПроцедуры

Процедура ВывестиШапку(ДанныеПечати, Макет, ТабличныйДокумент)
		
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ПереопределитьНаименованиеНоменклатуры(ДанныеПечати);
	
	ДанныеПечати.ДатаАкта = Формат(ДанныеПечати.ДатаАкта, "ДФ=dd.MM.yyyy; ДЛФ=D");
	
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);	
		
	ТабличныйДокумент.Вывести(ОбластьМакета);		
	
КонецПроцедуры

Процедура ВывестиСтроки(ДанныеПечати, СтрокаТовары, Макет, ТабличныйДокумент, ИтоговыеСуммы)
	
	ДанныеВзвешивания = гкс_ПриемкаНаПЛКСервер.ПоказанияВесовПоРегистрации(СтрокаТовары.ДокументРегистрации);
	
	Если ДанныеВзвешивания = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереопределитьНаименованиеТранспортногоСредства(СтрокаТовары);

	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
	   	
	ОбластьМакета.Параметры.ТранспортноеСредство 	= СтрокаТовары.ТранспортноеСредствоПредставление;
	ОбластьМакета.Параметры.МассаПоДокументам 		= СтрокаТовары.Нетто;
	ОбластьМакета.Параметры.МассаФактически 		= ДанныеВзвешивания.НеттоФакт;
	
	Отклонение = ДанныеВзвешивания.НеттоФакт - СтрокаТовары.Нетто;
	//ОтклонениеAbs = ?(Отклонение >=0, Отклонение, -Отклонение);
	//TODO: Временно. Нет обратной связи от ключевого по поводу вывода отрицательных значений.
	ОтклонениеAbs = - Отклонение;
	
	ОбластьМакета.Параметры.Излишек 		= Отклонение;
	ОбластьМакета.Параметры.НедостачаМасса 	= ОтклонениеAbs;
	ОбластьМакета.Параметры.Неоправданная 	= ОтклонениеAbs;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	НоваяСтрока = ИтоговыеСуммы.Добавить();
	НоваяСтрока.МассаПоДокументам 	= СтрокаТовары.Нетто;
	НоваяСтрока.МассаФактически 	= ДанныеВзвешивания.НеттоФакт;
	НоваяСтрока.Излишек 			= Отклонение;
	НоваяСтрока.НедостачаМасса 		= ОтклонениеAbs;
		
КонецПроцедуры

Процедура ВывестиИтого(МакетПечати, ТабличныйДокумент, ИтоговыеСуммы)
	
	ОбластьИтого = МакетПечати.ПолучитьОбласть("Итого");
	ОбластьИтого.Параметры.МассаПоДокументам = ИтоговыеСуммы.Итог("МассаПоДокументам");
	ОбластьИтого.Параметры.МассаФактически = ИтоговыеСуммы.Итог("МассаФактически");
	ОбластьИтого.Параметры.Излишек = ИтоговыеСуммы.Итог("Излишек");
	ОбластьИтого.Параметры.НедостачаМасса = ИтоговыеСуммы.Итог("НедостачаМасса");
	
	ТабличныйДокумент.Вывести(ОбластьИтого);
		
КонецПроцедуры 

Процедура ВывестиПодвал(ДанныеПечати, Макет, ТабличныйДокумент, ДанныеДополнительные)
		
	ОбластьМакета =	Макет.ПолучитьОбласть("Подвал");
	ПараметрыОбласти = ОбластьМакета.Параметры;
	ПараметрыОбласти.Заполнить(ДанныеПечати);
	ПараметрыОбласти.Заполнить(ДанныеДополнительные);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
КонецПроцедуры

Процедура ПереопределитьНаименованиеНоменклатуры(ДанныеПечати)
	
	Если ДанныеПечати.Свойство("ТоварНаименование") 
		И ДанныеПечати.Свойство("ТоварНаименованиеПолное") Тогда
		
		ДанныеПечати.ТоварНаименование = ?(ЗначениеЗаполнено(ДанныеПечати.ТоварНаименование), 
			ДанныеПечати.ТоварНаименование, ДанныеПечати.ТоварНаименованиеПолное); 
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПереопределитьНаименованиеТранспортногоСредства(ДанныеПечати)
	
	Если ДанныеПечати.Свойство("ТранспортноеСредствоПредставление") 
		И ДанныеПечати.Свойство("ПрицепПредставление") Тогда
		
		МассивТС = Новый Массив;
		МассивТС.Добавить(ДанныеПечати.ТранспортноеСредствоПредставление);
		Если ЗначениеЗаполнено(ДанныеПечати.ПрицепПредставление) Тогда
			МассивТС.Добавить(ДанныеПечати.ПрицепПредставление);		
		КонецЕсли; 
		
		ДанныеПечати.ТранспортноеСредствоПредставление = СтрСоединить(МассивТС, "/ ");		
	КонецЕсли;	
	
КонецПроцедуры

Функция ИнициализироватьТаблицуИтогов()
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("МассаПоДокументам", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("МассаФактически", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("Излишек", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("НедостачаМасса", Новый ОписаниеТипов("Число"));
		
	Возврат Результат;
КонецФункции	

#КонецОбласти

#КонецЕсли