#Если ТолстыйКлиентОбычноеПриложение Или Сервер Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДатаОбработки;
Перем ОбрабатыватьВходящиеСообщения;
Перем ОбрабатыватьИсходящиеСообщения;
Перем МенеджерСостоянийВходящихСообщений;
Перем МенеджерСостоянийИсходящихСообщений;
Перем СтатусЗакрытоВходящиеСообщения;
Перем СтатусЗакрытоИсходящиеСообщения;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура Обработать() Экспорт

	Если ОбрабатыватьВходящиеСообщения Тогда
		ОбработатьВходящиеСообщения();
	КонецЕсли;
	
	Если ОбрабатыватьИсходящиеСообщения Тогда
		ОбработатьИсходящиеСообщения();
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрыОбработки(ПараметрыОбработки) Экспорт
	
	Если ПараметрыОбработки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЕстьСвойствоОбъекта(ПараметрыОбработки, "ОбрабатыватьВходящиеСообщения") Тогда
		ОбрабатыватьВходящиеСообщения = ПараметрыОбработки.ОбрабатыватьВходящиеСообщения;
	КонецЕсли;
	
	Если ЕстьСвойствоОбъекта(ПараметрыОбработки, "ОбрабатыватьИсходящиеСообщения") Тогда
		ОбрабатыватьИсходящиеСообщения = ПараметрыОбработки.ОбрабатыватьИсходящиеСообщения;
	КонецЕсли;
	
КонецПроцедуры

Процедура Инициализировать() Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаОбработки) Тогда
		ДатаОбработки = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьСвойствоОбъекта(ОбъектПроверки, ИмяСвойства)

	Возврат гкс_ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ОбъектПроверки, ИмяСвойства);
	
КонецФункции

Процедура ОбработатьВходящиеСообщения()
	
	ПараметрыЗапроса = ПараметрыЗапросаОбработкаВходящихСообщений();
	Запрос = МенеджерСостоянийВходящихСообщений.ЗапросВсеСообщенияСоСтатусом(ПараметрыЗапроса);
	
	ЗакрытьСоообщения(Запрос, МенеджерСостоянийВходящихСообщений);
	
КонецПроцедуры

Процедура ОбработатьИсходящиеСообщения()
	
	ПараметрыЗапроса = ПараметрыЗапросаОбработкаИсходящихСообщений();
	Запрос = МенеджерСостоянийИсходящихСообщений.ЗапросВсеСообщенияСоСтатусом(ПараметрыЗапроса);
	
	ЗакрытьСоообщения(Запрос, МенеджерСостоянийИсходящихСообщений);
	
КонецПроцедуры

Функция ПараметрыЗапросаОбработкаИсходящихСообщений()
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Состояние", Перечисления.гкс_СостоянияИсходящихСообщенийRMQ.ОшибкаОбработкиПолучателем);
	ПараметрыЗапроса.Вставить("ДатаОтбораПоследнегоСостоянияВМиллисекундах", 
	                      гкс_ОбщегоНазначения.ДатаВУниверсальнуюДатуВМилисекундах(ДатаОтбораПоследнегоСостояния()));
	                      
	Возврат ПараметрыЗапроса;
	
КонецФункции

Функция ПараметрыЗапросаОбработкаВходящихСообщений()
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Состояние", Перечисления.гкс_СостоянияВходящихСообщенийRMQ.ОшибкаОбработки);
	ПараметрыЗапроса.Вставить("ДатаОтбораПоследнегоСостоянияВМиллисекундах", 
	                      гкс_ОбщегоНазначения.ДатаВУниверсальнуюДатуВМилисекундах(ДатаОтбораПоследнегоСостояния()));
	                      
	Возврат ПараметрыЗапроса;
	
КонецФункции

Функция ДатаОтбораПоследнегоСостояния()
	
	ЧислоДней = 
	гкс_ОчередьСообщенийRMQПовтИсп.НастройкаИнтеграционногоАдаптера("СрокХраненияСообщенийСОшибкамиОбработки");
	Если НЕ ЗначениеЗаполнено(ЧислоДней) Тогда
		ЧислоДней = 30;
	КонецЕсли;
		
	Возврат ДатаОбработки - ЧислоДней * гкс_ОбщегоНазначенияКлиентСервер.ЧислоСекундВСутках();	
	
КонецФункции

Процедура ЗакрытьСоообщения(Запрос, МенеджерСообщений)
	
	ЭтоОбработкаВходящихСообщений = Истина;
	Если ТипЗнч(МенеджерСообщений) = Тип("РегистрСведенийМенеджер.гкс_СостоянияИсходящихСообщений") Тогда
		ЭтоОбработкаВходящихСообщений = Ложь;	
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Пока НЕ РезультатЗапроса.Пустой() Цикл
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если ЭтоОбработкаВходящихСообщений Тогда
				МенеджерСообщений.УстановитьСостояниеСообщения(Выборка.Сообщение, 
				                                               СтатусЗакрытоВходящиеСообщения);
			Иначе
				МенеджерСообщений.УстановитьСостояниеСообщения(Выборка.Сообщение, 
				                                               Выборка.УчастникОбмена, 
				                                               СтатусЗакрытоИсходящиеСообщения,
				                                               ТекущаяУниверсальнаяДатаВМиллисекундах());	
			КонецЕсли;
		
		КонецЦикла;
		
		РезультатЗапроса = Запрос.Выполнить();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ОбрабатыватьВходящиеСообщения = Ложь;
ОбрабатыватьИсходящиеСообщения = Ложь;
МенеджерСостоянийВходящихСообщений = РегистрыСведений.гкс_СостоянияВходящихСообщений;
МенеджерСостоянийИсходящихСообщений = РегистрыСведений.гкс_СостоянияИсходящихСообщений;
СтатусЗакрытоВходящиеСообщения = Перечисления.гкс_СостоянияВходящихСообщенийRMQ.ОшибкаОбработкиЗакрыто; 
СтатусЗакрытоИсходящиеСообщения = Перечисления.гкс_СостоянияИсходящихСообщенийRMQ.ОшибкаОбработкиЗакрыто; 

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли