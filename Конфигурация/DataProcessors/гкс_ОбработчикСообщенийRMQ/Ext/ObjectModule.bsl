#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем ЭтоФайловаяБаза;
Перем РазмерПорцииОбработки;
Перем МенеджерОбработки;
Перем Загрузчик;
Перем ПотокСобытий;
Перем МенеджерОчередиВходящихСообщений;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Инициализирует обработчик параметрами инициализации, параметры перадеются в виде структуры
//
// Параметры:
//  ПараметрыИнициализации - Структура - структура параметров, где ключи - имена параметров, а значение - требуемые к 
//  установке значения.
//                         - Неопределено - инициализация будет проведена значенями по умолчанию
//
Процедура Инициализировать(Знач ПараметрыИнициализации = Неопределено) Экспорт
	
	РазмерПорцииОбработки = МенеджерОбработки.РазмерПорцииОбработки();
	ЭтоФайловаяБаза = гкс_ОбщегоНазначенияКлиентСервер.ИнформационнаяБазаФайловая();
	
	ИмяМетодаИнициализации = "гкс_ОбработчикСообщенийRMQОбъект.Инициализировать";
	
	Если ЗначениеЗаполнено(ПараметрыИнициализации) Тогда
	     
	    ТипСтруктура = Тип("Структура");
	    гкс_ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(ИмяМетодаИнициализации, 
	                                                       "Параметры", 
	                                                       ПараметрыИнициализации,
	                                                       ТипСтруктура);
	
		ПровестиИнициализациюПараметрами(ПараметрыИнициализации);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьСообщенияОчереди() Экспорт
			
	Запрос = ЗапросСообщенияИзОчередиВходящих();
	РезультатЗапроса = Запрос.Выполнить();	
	Если РезультатЗапроса.Пустой() Тогда	
		Возврат;		
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Если ЭтоФайловаяБаза Тогда		
		ОбработатьСообщенияОчередиНепосредственно(ВыборкаДетальныеЗаписи);		
	Иначе		
		ОбработатьСообщенияОчередиВФоне(ВыборкаДетальныеЗаписи);		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтрефейс

Процедура ОбработкаПакетаСообщенийRMQ(Знач ПакетСообщений) Экспорт
	
	Если ТипЗнч(ПакетСообщений) = Тип("СправочникСсылка.гкс_ВходящиеСообщенияRMQ") Тогда
		ОбработатьСообщениеОчереди(ПакетСообщений);	
	Иначе
		Для Каждого Сообщение Из ПакетСообщений Цикл	
			ОбработатьСообщениеОчереди(Сообщение);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьСообщениеОчереди(Сообщение) Экспорт
	
	Загрузчик.Инициализировать();
	Загрузчик.УстановитьСообщение(Сообщение);
	Загрузчик.ПринятьСообщениеВОбработку();
	Загрузчик.ОбработатьСообщение();
						
КонецПроцедуры

Функция РезультатОбработки() Экспорт
	
	Возврат Загрузчик.РезультатЗагрузки();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаОчередейСообщенийRMQ

Функция ЗапросСообщенияИзОчередиВходящих()
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("РазмерПорции", РазмерПорцииОбработки);
	ПараметрыЗапроса.Вставить("ПотокСобытий", ПотокСобытий);
	
	Возврат МенеджерОчередиВходящихСообщений.ЗапросСообщенияИзОчереди(ПараметрыЗапроса);
	
КонецФункции

Процедура ОбработатьСообщенияОчередиНепосредственно(Выборка)
		
	Пока Выборка.Следующий() Цикл
		
		Сообщение = Выборка.Сообщение;
		ОбработатьСообщениеОчереди(Сообщение);
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработатьСообщенияОчередиВФоне(Выборка) 
		
	ГруппыОбработки = МенеджерОбработки.СформироватьГруппыОбработкиСообщений(Выборка);
	
	Для Каждого ГруппаОбработки Из ГруппыОбработки Цикл		
		ОбработатьСообщенияГруппы(ГруппаОбработки);		
	КонецЦикла;
		
КонецПроцедуры

Процедура ОбработатьСообщенияГруппы(ГруппаОбработки)
	
	ИмяМетода = "гкс_ОчередьСообщенийRMQСлужебный.ОбработкаПакетаСообщенийRMQ";
	МассивЗаданий = Новый Массив;
	
	Для Каждого СообщениеГруппы Из ГруппаОбработки Цикл
		
		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(СообщениеГруппы.Сообщение);
		ОбработкаСообщения = ФоновыеЗадания.Выполнить(ИмяМетода, ПараметрыЗадания); 
		
		МассивЗаданий.Добавить(ОбработкаСообщения);
		
	КонецЦикла;
	
	Если МассивЗаданий.Количество() = 0 Тогда		
		Возврат;		
	КонецЕсли;
	
	ТаймаутОбработки = МенеджерОбработки.ТаймаутОбработки();
	
	ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий, ТаймаутОбработки);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ПровестиИнициализациюПараметрами(ПараметрыИнициализации)
	
	Если ПараметрыИнициализации.Свойство("ПотокСобытий") Тогда
		ПотокСобытий = ПараметрыИнициализации.ПотокСобытий;	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Инициализация

ЭтоФайловаяБаза = Ложь;
ПотокСобытий = Справочники.гкс_ПотокиСобытий.Основной;
МенеджерОбработки = Обработки.гкс_ОбработчикСообщенийRMQ;
Загрузчик = Обработки.гкс_ЗагрузчикСообщенийRMQ.Создать();
МенеджерОчередиВходящихСообщений = РегистрыСведений.гкс_ОчередьОбработкиВходящихСообщенийRMQ;

#КонецОбласти

#Иначе	
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли