#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует печатную форму АктЗабраковкиПартии объектов.
//
// Параметры:
//	МассивОбъектов        - Массив           - массив ссылок на объекты которые нужно распечатать,
//	ПараметрыПечати       - Структура        - структура дополнительных параметров печати,
//	КоллекцияПечатныхФорм - ТаблицаЗначений  - сформированные табличные документы,
//	ОбъектыПечати         - СписокЗначений   - список объектов печати,
//	ПараметрыВывода       - Структура        - параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = гкс_ОбщегоНазначенияПЛК.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	ТекстПредупреждения = НСтр("ru = 'Формирование печатной формы ""%1"" доступно только для документов ""%2"".'");
	ПараметрыПечати.Вставить("ТекстПредупреждения", ТекстПредупреждения);
	ПараметрыПечати.Вставить("КлючОбъекта", "Документ.гкс_ЛабораторныйАнализ");
	ПараметрыПечати.Вставить("СинонимЛабАнализа", Метаданные.Документы.гкс_ЛабораторныйАнализ.Синоним);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктЗабраковкиПартии_ru") Тогда
		
		ТабличныйДокументАктЗабраковки = СформироватьПечатнуюФормуАктЗабраковкиПартии(СтруктураТипов, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ПФ_MXL_АктЗабраковкиПартии_ru",
			НСтр("ru = 'Акт забраковки партии'"),
			ТабличныйДокументАктЗабраковки, , 
			"Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_АктЗабраковкиПартии_ru");
	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктОтбораПроб_ru") Тогда
		
		ТабличныйДокументАктОтбора = СформироватьПечатнуюФормуАктОтбораПроб(СтруктураТипов, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ПФ_MXL_АктОтбораПроб_ru",
			НСтр("ru = 'Акт отбора проб'"),
			ТабличныйДокументАктОтбора,	, 
			"Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_АктОтбораПроб_ru");
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЗПП47_ru") Тогда
		
		ТабличныйДокументЗПП47 = СформироватьПечатнуюФормуЗПП47(СтруктураТипов, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ПФ_MXL_ЗПП47_ru",
			НСтр("ru = 'Карточка анализа зерна (ЗПП-47)'"),
			ТабличныйДокументЗПП47,	, 
			"Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_ЗПП47_ru");
	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЗПП47_АЛЦ_ru") Тогда
		
		ТабличныйДокументЗПП47 = СформироватьПечатнуюФормуЗПП47АЛЦ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ПФ_MXL_ЗПП47_АЛЦ_ru",
			НСтр("ru = 'Карточка анализа зерна (ЗПП-47) АЛЦ'"),
			ТабличныйДокументЗПП47,	, 
			"Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_ЗПП47_АЛЦ_ru");
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЗПП42_ru") Тогда
		
		ТабличныйДокументЗПП42 = СформироватьПечатнуюФормуЗПП42(СтруктураТипов, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ПФ_MXL_ЗПП42_ru",
			НСтр("ru = 'Отраслевая форма (ЗПП-42)'"),
			ТабличныйДокументЗПП42, , 
			"Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_ЗПП42_ru"); 
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктОтбораПроб") Тогда
		
		ТабличныйДокументАктОтбораПроб = СформироватьПечатнуюФормуАктОтбораПробУниверсальный(СтруктураТипов, 
																							  ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ПФ_MXL_АктОтбораПроб",
			НСтр("ru = 'Акт отбора проб'"),
			ТабличныйДокументАктОтбораПроб, , 
			"Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_АктОтбораПроб"); 
			
	КонецЕсли;
	
КонецПроцедуры

#Область Печать

Функция СформироватьПечатнуюФормуАктЗабраковкиПартии(СтруктураТипов, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктЗабраковкиПартии";
	
	УстановитьПривилегированныйРежим(Истина);
	
	НомерДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		Если СтруктураОбъектов.Ключ <> ПараметрыПечати.КлючОбъекта Тогда 
			
			ТекстСообщения = 
			СтрШаблон(ПараметрыПечати.ТекстПредупреждения, "Акт забраковки партии", ПараметрыПечати.СинонимЛабАнализа);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		МенеджерОбъекта = Документы.гкс_ЛабораторныйАнализ;
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
			
			НомерДокумента = НомерДокумента + 1;
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатныхФормЛабораторногоАнализа(ДокументОснование);
			Если НЕ ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументАктЗабраковкиПартии(ТабличныйДокумент, ДанныеДляПечати, ПараметрыПечати);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАктОтбораПроб(СтруктураТипов, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОтбораПроб";
	
	УстановитьПривилегированныйРежим(Истина);
	
	НомерДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		Если СтруктураОбъектов.Ключ <> ПараметрыПечати.КлючОбъекта Тогда 
			
			ТекстСообщения = 
			СтрШаблон(ПараметрыПечати.ТекстПредупреждения, "Акт отбора проб", ПараметрыПечати.СинонимЛабАнализа);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		МенеджерОбъекта = Документы.гкс_ЛабораторныйАнализ;
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
			
			НомерДокумента = НомерДокумента + 1;
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатныхФормЛабораторногоАнализа(ДокументОснование);
			Если НЕ ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументАктОтбораПроб(ТабличныйДокумент, ДанныеДляПечати, ПараметрыПечати);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ печатной формы ЗПП-47.
//
// Параметры:
//	СтруктураТипов  - Соответствие   - Соотвествие типов ссылкам
//										Ключ - полное имя типа ссылки.
//	        							Значение - Массив - ссылки на объекты которые нужно распечатать.
//	ПараметрыПечати - Структура      - структура дополнительных параметров печати.
//
// Возвращаемое значение:
//	ТабличныйДокумент - печатная форма ЗПП-47 документов, которые нужно распечатать.
//
Функция СформироватьПечатнуюФормуЗПП47(СтруктураТипов, ПараметрыПечати) Экспорт
	
	НомерДокумента = 0;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗПП47";
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		Если СтруктураОбъектов.Ключ <> ПараметрыПечати.КлючОбъекта Тогда
			
			ТекстСообщения = 
			СтрШаблон(ПараметрыПечати.ТекстПредупреждения, "ЗПП-47", ПараметрыПечати.СинонимЛабАнализа);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
			
			ЭтоЕдиничнаяПроба = Не ЗначениеЗаполнено(ДокументОснование.гкс_ДокументРегистрации) 
			Или ТипЗнч(ДокументОснование.гкс_ДокументРегистрации) <> Тип("ДокументСсылка.гкс_ФормированиеНомераПробы");
				
			Если ЭтоЕдиничнаяПроба Тогда
				// Проба Единичная - для этой пробы в Лаб анализе - документ "РегистрацияНаПЛК" и ЗПП-47 не печатается
				Продолжить;
			КонецЕсли; 
			
			НомерДокумента = НомерДокумента + 1;
			
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыЗПП47(ПараметрыПечати, ДокументОснование);
			
			Если НЕ ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументЗПП47(ТабличныйДокумент, ДанныеДляПечати, ПараметрыПечати);
			КонецЕсли;
		КонецЦикла;
				
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ печатной формы ЗПП-42.
//
// Параметры:
//	СтруктураТипов  - Соответствие   - Соотвествие типов ссылкам
//										Ключ - полное имя типа ссылки.
//	        							Значение - Массив - ссылки на объекты которые нужно распечатать.
//	ПараметрыПечати - Структура      - структура дополнительных параметров печати.
//
// Возвращаемое значение:
//	ТабличныйДокумент - печатная форма ЗПП-42 документов, которые нужно распечатать.
//
Функция СформироватьПечатнуюФормуЗПП42(СтруктураТипов, ПараметрыПечати) Экспорт
	
	НомерДокумента = 0;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗПП42";
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		Если СтруктураОбъектов.Ключ <> ПараметрыПечати.КлючОбъекта Тогда
			
			ТекстСообщения = 
			СтрШаблон(ПараметрыПечати.ТекстПредупреждения, "ЗПП-42", ПараметрыПечати.СинонимЛабАнализа);			
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
			
			НомерДокумента = НомерДокумента + 1;
			
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыЗПП42(ДокументОснование);
			
			Если Не ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументЗПП42(ТабличныйДокумент, ДанныеДляПечати);
			КонецЕсли;
		КонецЦикла;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
				
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАктОтбораПробУниверсальный(СтруктураТипов, ПараметрыПечати)   
	
	НомерДокумента = 0;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;   
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОтбораПробУниверсальный";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл      
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
				
			НомерДокумента = НомерДокумента + 1;
			
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
				
			ДанныеДляПечати = ПолучитьДанныеДляПечатиАктаОтбораПроб(ДокументОснование);
			
			Если Не ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументПФ_MXL_АктОтбораПроб(ТабличныйДокумент, ДанныеДляПечати, ПараметрыПечати);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
		
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ печатной формы ЗПП-47 АЛЦ.
//
// Параметры:
// МассивОбъектов - Массив из ДокументСсылка.гкс_ЛабораторныйАнализ - ссылки на объекты, которые нужно распечатать
// ОбъектыПечати - СписокЗначений - значение - ссылка на объект
//
// Возвращаемое значение:
// ТабличныйДокумент - печатная форма ЗПП-47 документов, которые нужно распечатать.
//
Функция СформироватьПечатнуюФормуЗПП47АЛЦ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗПП47";
	
	ОформлениеТабличногоДокумента(ТабличныйДокумент);
	
	ЗаполнитьТабличныйДокументЗПП47АЛЦ(ТабличныйДокумент, МассивОбъектов, ОбъектыПечати, ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьТабличныйДокументАктЗабраковкиПартии(ТабличныйДокумент, ДанныеДляПечати, ПараметрыПечати)
												
	Макет = УправлениеПечатью.МакетПечатнойФормы(
		"Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_АктЗабраковкиПартии_ru");
		
	ЗаполнитьТабличныйДокументПоМакету(ТабличныйДокумент, Макет, ДанныеДляПечати, 
											"АктЗабраковкиПартии", ПараметрыПечати);
				
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументАктОтбораПроб(ТабличныйДокумент, ДанныеДляПечати, ПараметрыПечати)
												
	Макет = УправлениеПечатью.МакетПечатнойФормы(
		"Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_АктОтбораПроб_ru");
		
	ЗаполнитьТабличныйДокументПоМакету(ТабличныйДокумент, Макет, ДанныеДляПечати, "АктОтбораПроб", ПараметрыПечати);
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументПоМакету(ТабличныйДокумент, Макет, ДанныеДляПечати, 
												ИмяМакета, ПараметрыПечати = Неопределено)
	
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;

	ВыборкаПоШапке = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоШапке.Следующий();
	
	ОбластьШапка = Макет.ПолучитьОбласть("ЗаголовокЛиста");
	ОбластьШапкаШтрихкод = Макет.ПолучитьОбласть("ШапкаШтрихкод");
	ОбластьОсновнойБлок = Макет.ПолучитьОбласть("Основной");
	
	ОбластьПараметры = ОбластьШапка.Параметры;
	ОбластьПараметры.ПредставлениеОрганизации = ВыборкаПоШапке.ПредставлениеОрганизации;	
	ОбластьПараметры.АдресТелефон = ВыборкаПоШапке.ОрганизацияАдрес + " " + ВыборкаПоШапке.ОрганизацияТелефоны;
	ОбластьПараметры.ЭлектроннаяПочта = "E-mail: " + ВыборкаПоШапке.ОрганизацияЭлектроннаяПочта;
	ОбластьПараметры.КодОГРН = ВыборкаПоШапке.ОГРН;
	ОбластьПараметры.ИНН = ВыборкаПоШапке.ИНН;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "Подразделение");
	ОбластьПараметры.ПодразделениеПредставление = Строка(Подразделение);
		
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ЗаполнитьШтрихкод(ОбластьШапкаШтрихкод.Рисунки.КартинкаШтрихкода, ВыборкаПоШапке.НомерПробы);
	ТабличныйДокумент.Вывести(ОбластьШапкаШтрихкод);
	
	ОбластьПараметры 					= ОбластьОсновнойБлок.Параметры;
	ОбластьПараметры.ДатаАкта 			= Формат(ВыборкаПоШапке.Дата, НСтр("ru='ДФ=''дд ММММ гггг ""г.""'''"));
	ОбластьПараметры.Номенклатура 		= ВыборкаПоШапке.Номенклатура;
	ОбластьПараметры.Грузоотправитель 	= ВыборкаПоШапке.ОтправительПолучатель;
	ОбластьПараметры.Транспорт 			= ВыборкаПоШапке.ТранспортноеСредство;
	ОбластьПараметры.Водитель 			= ВыборкаПоШапке.Водитель;
	
	ЕстьПараметрыПечати = ТипЗнч(ПараметрыПечати) = Тип("Структура");
	
	Если ЕстьПараметрыПечати Тогда
		ОбластьПараметры.Подписант 			= ПараметрыПечати.ДанныеПечати.Подписант;
	КонецЕсли;
	
	Если ИмяМакета = "АктОтбораПроб" Тогда
		ОбластьПараметры.ГОСТ 				= ВыборкаПоШапке.ГОСТ;
		Если ЕстьПараметрыПечати Тогда
			ОбластьПараметры.НомерПломбы 	= ПараметрыПечати.ДанныеПечати.НомерПломбы;
		КонецЕсли;
		ОбластьПараметры.ДатаВремяОтбора 	= Формат(ВыборкаПоШапке.Дата, "Л=ru");
		ОбластьПараметры.ОбъемПробы 		= Формат(ВыборкаПоШапке.ОбъемПробы, "Л=ru; ЧДЦ=1") + " кг.";
	Иначе
		ОбластьПараметры.Заявитель 			= Строка(ВыборкаПоШапке.Собственник);
		ОбластьПараметры.ДатаВремяОтбора 	= Формат(ВыборкаПоШапке.МестнаяДата, "Л=ru");
		ОбластьПараметры.Номер 				= ВыборкаПоШапке.Номер;
		ОбластьПараметры.ЧислоДата 			= Формат(ВыборкаПоШапке.МестнаяДата, "ДФ=дд");
		ОбластьПараметры.МесяцДата 			= Сред(Формат(ВыборкаПоШапке.МестнаяДата, "ДФ=ddMMMM"),3);
		ОбластьПараметры.ГодДата 			= Формат(ВыборкаПоШапке.МестнаяДата, "ДФ=гггг");
		Если ЕстьПараметрыПечати Тогда
			ОбластьПараметры.ДолжностьПодписанта = ПараметрыПечати.ДанныеПечати.ДолжностьПодписанта;
		КонецЕсли;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьОсновнойБлок);
	
КонецПроцедуры

// Заполняет табличный документ печатной формы ЗПП-47 данными документа, которого нужно распечатать.
// Параметры:
// 	ТабличныйДокумент - ТабличныйДокумент
// 	ДанныеДляПечати - Структура
//	ОбъектыПечати - СписокЗначений - список объектов печати
//
Процедура ЗаполнитьТабличныйДокументЗПП47(ТабличныйДокумент, ДанныеДляПечати, ПараметрыПечати)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_ЗПП47_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;

	ВыборкаПоШапке = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаКачественныеПоказатели = ДанныеДляПечати.РезультатКачественныеПоказатели.Выбрать();
	ТаблицаПоРегистрациям = ДанныеДляПечати.РезультатПоРегистрациям.Выгрузить();
	ВыборкаНормативнаяСертификация = ДанныеДляПечати.РезультатПоНормативнойСертификации.Выбрать();
	
	РеквизитыЛицевойСтороны = "ТипАнализа, Номер,ПредставлениеОрганизации, КодПоОКПО, Номенклатура,
							|НомерПробы, МестоОтбораПробы, МассаПробы, Ответственный, ГОСТОтбораПроб,
							| СостояниеТранспорта, ГодУрожая";
	
	РеквизитыОборотнойСтороны = "Номенклатура, Происхождение";
	
	РеквизитыЛицеваяСторона = Новый Структура(РеквизитыЛицевойСтороны);
	РеквизитыОборотнаяСторона = Новый Структура(РеквизитыОборотнойСтороны);
	
	ВыборкаПоШапке.Следующий();
		
	ЗаполнитьЗначенияСвойств(РеквизитыЛицеваяСторона, ВыборкаПоШапке);
	ЗаполнитьЗначенияСвойств(РеквизитыОборотнаяСторона, ВыборкаПоШапке);
	
	РеквизитыЛицеваяСторона.Вставить("ЛицоСПравомПодписи", ПараметрыПечати.ДанныеПечати.ЛицоСПравомПодписи);  
	ДолжностьЛицоСПравомПодписи = ПараметрыПечати.ДанныеПечати.ЛицоСПравомПодписи.Должность;
	РеквизитыЛицеваяСторона.Вставить("ДолжностьЛицоСПравомПодписи", ДолжностьЛицоСПравомПодписи);
	РеквизитыЛицеваяСторона.Вставить("ФИОЛицоСПравомПодписи", ПараметрыПечати.ДанныеПечати.ЛицоСПравомПодписи);      
	РеквизитыОборотнаяСторона.Вставить("ДолжностьЛицоСПравомПодписи", ДолжностьЛицоСПравомПодписи);
	РеквизитыОборотнаяСторона.Вставить("ФИОЛицоСПравомПодписи", ПараметрыПечати.ДанныеПечати.ЛицоСПравомПодписи);
	
	РеквизитыЛицеваяСторона.Вставить("Дата", Формат(ВыборкаПоШапке.Дата, НСтр("ru='ДФ=''дд ММММ гггг ""г.""'''")));
	РеквизитыЛицеваяСторона.ГодУрожая = СтрЗаменить(Строка(РеквизитыЛицеваяСторона.ГодУрожая), Символы.НПП, "");
	
	Если ЗначениеЗаполнено(ТаблицаПоРегистрациям) Тогда
								
		РеквизитыЛицеваяСторона.Вставить("Получатель", ТаблицаПоРегистрациям[0].ПредставлениеПолучателя);
		РеквизитыЛицеваяСторона.Вставить("Отправитель", ТаблицаПоРегистрациям[0].Контрагент);												
		
		// вывод номеров ТТН
		МассивТТН = Новый Массив;
		Для Каждого  СтрокаРегистрации Из ТаблицаПоРегистрациям Цикл
			НомерДатаТТН = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '№%1 от %2'"), 
							СтрокаРегистрации.НомерДокументаПоставщика, 
							Формат(СтрокаРегистрации.ДатаДокументаПоставщика, "Л=ru; ДЛФ=D"));
			МассивТТН.Добавить(НомерДатаТТН);	
		КонецЦикла;
		
		НомераДатыТТН = Новый Массив;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(НомераДатыТТН, МассивТТН, Истина);
		
		РеквизитыЛицеваяСторона.Вставить("НомерДатаТТН", СтрСоединить(НомераДатыТТН, ","));
		
		// масса партии
		РеквизитыЛицеваяСторона.Вставить("МассаПартии", ТаблицаПоРегистрациям.Итог("ВесНетто"));
		
		// вывод транспортных средства
		МассивТС = ТаблицаПоРегистрациям.ВыгрузитьКолонку("НомерТранспортногоСредства");
		МассивТСБезПовтора = Новый Массив;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивТСБезПовтора, МассивТС, Истина); 
		РеквизитыЛицеваяСторона.Вставить("НомерТС", СтрСоединить(МассивТСБезПовтора, ","));
		
		РеквизитыЛицеваяСторона.Вставить("СтанцияОтправления", ТаблицаПоРегистрациям[0].ПунктПогрузки);

	КонецЕсли;
	
	ЗаполнитьРеквизитыКачества(РеквизитыЛицеваяСторона, ВыборкаКачественныеПоказатели);
	ЗаполнитьРеквизитыКачества(РеквизитыОборотнаяСторона, ВыборкаКачественныеПоказатели);
	
	ВыборкаНормативнаяСертификация.Следующий();
	РеквизитыОборотнаяСторона.Вставить("ГОСТ_ТУ", ВыборкаНормативнаяСертификация.ГОСТ);
		
	Область = Макет.ПолучитьОбласть("ЛицеваяСторона");
	Область.Параметры.Заполнить(РеквизитыЛицеваяСторона);
	ТабличныйДокумент.Вывести(Область);
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	Область = Макет.ПолучитьОбласть("ОборотнаяСторона");
	Область.Параметры.Заполнить(РеквизитыОборотнаяСторона);
	ТабличныйДокумент.Вывести(Область);
		
КонецПроцедуры  

Функция ДополнительныеПараметрыСорнаяПримесь()                    
	
	СтруктураНаименованийПраметров = Новый Структура;   
	
	СтруктураНаименованийПраметров.Вставить("СорнаяПримесьПоказатель1", "СорнаяПримесьЗначение1");
	СтруктураНаименованийПраметров.Вставить("СорнаяПримесьПоказатель2", "СорнаяПримесьЗначение2");
	СтруктураНаименованийПраметров.Вставить("СорнаяПримесьПоказатель3", "СорнаяПримесьЗначение3");
	
	ТаблицаЗначенийНаименованиеПараметров = Новый ТаблицаЗначений;              
	
	ТаблицаЗначенийНаименованиеПараметров.Колонки.Добавить("НаименованиеПараметраПоказателя");
	ТаблицаЗначенийНаименованиеПараметров.Колонки.Добавить("НаименованиеПараметраЗначения");  
	
	Для Каждого Параметр Из СтруктураНаименованийПраметров Цикл
		
		СтрокаТЗ = ТаблицаЗначенийНаименованиеПараметров.Добавить();
		СтрокаТЗ.НаименованиеПараметраПоказателя = Параметр.Ключ;
		СтрокаТЗ.НаименованиеПараметраЗначения   = Параметр.Значение;
		
	КонецЦикла;
	
	Возврат ТаблицаЗначенийНаименованиеПараметров;
	
КонецФункции      

Функция СоответствиеНаименованийДополнительныхПараметров()
	
	СоответствиеДополнительныхПараметров = Новый Соответствие;  
	
	СправочникПоказатели = Справочники.гкс_ПоказателиАнализовНоменклатуры;
	
	СоответствиеДополнительныхПараметров.Вставить(СправочникПоказатели.СорнаяПримесьОвсюгПроцент, "Овсюг");
	СоответствиеДополнительныхПараметров.Вставить(СправочникПоказатели.Амброзия, "Амброзия");
	СоответствиеДополнительныхПараметров.Вставить(СправочникПоказатели.Подмаренник, "Подмаренник");
	
	Возврат СоответствиеДополнительныхПараметров;
	
КонецФункции

Процедура ЗаполнитьРеквизитыКачества(СтруктураРеквизитов, ВыборкаКачественныеПоказатели)                                   
	
	НомерДополнительногоПараметра = 0;
	ТЗНаименованияДополнительныхПараметров = ДополнительныеПараметрыСорнаяПримесь(); 
	СоответствиеДополнительныхПараметров = СоответствиеНаименованийДополнительныхПараметров();
	                                                                                
	ВыборкаКачественныеПоказатели.Сбросить();
	Пока ВыборкаКачественныеПоказатели.Следующий() Цикл
		
		Показатель = ВыборкаКачественныеПоказатели.Показатель;
		Значение   = ВыборкаКачественныеПоказатели.Значение;
		СоответствуетНормативу = ВыборкаКачественныеПоказатели.СоответствуетНормативу;
		
		Если Показатель.Предопределенный Тогда		
			ЗначениеПоказателя = ВыборкаКачественныеПоказатели.Значение;
			     
			Если Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Цвет
				ИЛИ Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Запах
				ИЛИ Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.СостояниеЗерна Тогда
				
				ЗначениеПоказателя = ?(ЗначениеЗаполнено(ЗначениеПоказателя),
									НСтр("ru = 'Не соответствует'"),
									НСтр("ru = 'Соответствует'"));	
					
			ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.ЗараженностьВредителями Тогда

				ЗначениеПоказателя = ?(ЗначениеЗаполнено(ЗначениеПоказателя),
									НСтр("ru = 'Обнаружена'"),
									НСтр("ru = 'не обнаружена'"));
									
			ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Однородность Тогда

				ЗначениеПоказателя = ?(ЗначениеЗаполнено(ЗначениеПоказателя),
									НСтр("ru = 'Не соответствует'"),
									НСтр("ru = 'Соответствует'"));						
									
			ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.ГМО Тогда
				
				ЗначениеПоказателя = ?(ЗначениеЗаполнено(ЗначениеПоказателя) И СоответствуетНормативу,
									Нстр("ru = 'ГМО не обнаружено'"),
									Нстр("ru = """));        
									
			ИначеЕсли ПечататьДополнительныеПоказатели(Показатель) Тогда
				  
				  Если НомерДополнительногоПараметра + 1 > ТЗНаименованияДополнительныхПараметров.Количество() Тогда
				      Продолжить;	  
				  КонецЕсли;
				  
				  ТЗПараметров = ТЗНаименованияДополнительныхПараметров[НомерДополнительногоПараметра];
				  
				  СтруктураРеквизитов.Вставить(ТЗПараметров.НаименованиеПараметраПоказателя, 
				  							    СоответствиеДополнительныхПараметров[Показатель]); 
				  СтруктураРеквизитов.Вставить(ТЗПараметров.НаименованиеПараметраЗначения, ЗначениеПоказателя); 
				  НомерДополнительногоПараметра = НомерДополнительногоПараметра + 1;   
				  Продолжить;
				  
			ИначеЕсли ПечататьЗначениеПоказателя(Показатель) Тогда
				  ЗначениеПоказателя = ?(ЗначениеЗаполнено(ЗначениеПоказателя), Значение, "");
			КонецЕсли;                                                                  	
						
			СтруктураРеквизитов.Вставить(Показатель.ИмяПредопределенныхДанных, ЗначениеПоказателя);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПечататьЗначениеПоказателя(Показатель)

	Возврат Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.СорнаяПримесьОвсюгПроцент 
	    ИЛИ Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Амброзия
	    ИЛИ Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Подмаренник
	    ИЛИ Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.ЗерноваяПримесьПроросшиеЗернаПроцент
	    ИЛИ Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.СеменаПодсолнечника; 

КонецФункции

Функция ПечататьДополнительныеПоказатели(Показатель)
	
	Возврат Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.СорнаяПримесьОвсюгПроцент
		ИЛИ Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Амброзия
		ИЛИ Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Подмаренник	
		
КонецФункции

Процедура ЗаполнитьШтрихкод(Штрихкод, ДанныеШтрихкода)
	
	КоличествоМиллиметровВПикселе = гкс_ОбщегоНазначенияПЛККлиентСервер.КоличествоМиллиметровВПикселе();
		
	ПараметрыШтрихкода = Новый Структура;
	ПараметрыШтрихкода.Вставить("Ширина", Окр(Штрихкод.Ширина / КоличествоМиллиметровВПикселе));
	ПараметрыШтрихкода.Вставить("Высота", Окр(Штрихкод.Высота / КоличествоМиллиметровВПикселе));
	ПараметрыШтрихкода.Вставить("Штрихкод", ДанныеШтрихкода);
	ПараметрыШтрихкода.Вставить("ТипВходныхДанных", 0); // Штрихкод - это строка
	ПараметрыШтрихкода.Вставить("ТипКода", 3); // Code128
	ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
	ПараметрыШтрихкода.Вставить("РазмерШрифта", 12);
	
	Штрихкод.Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
	
КонецПроцедуры

// Заполняет табличный документ печатной формы ЗПП-42 данными документа, которого нужно распечатать.
// Параметры:
// 	ТабличныйДокумент - ТабличныйДокумент
// 	ДанныеДляПечати - Структура
//
Процедура ЗаполнитьТабличныйДокументЗПП42(ТабличныйДокумент, ДанныеДляПечати)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_ЗПП42_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;

	ВыборкаПоШапке = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаКачественныеПоказатели = ДанныеДляПечати.РезультатКачественныеПоказатели.Выбрать();
	
	ИмяРеквизитыШапки = "ПредставлениеОрганизации, Номер, Дата, Отправитель, ПунктПогрузки, Вагон,
							|НакладнаяНомер, Вес, ПунктРазгрузки, Получатель, Номенклатура";
							
	ИмяРеквизитыПоказатели = "ПроцентКлоп, ЗаражениеВред, Протеин, КолКлейковина, Влажность, ПримесиМинеральная,
							|ПримесиВредная, ПримесиСорная, ПримесиБитые, ПримесиПроросшие, ПримесиМасличная";
	
	РеквизитыОбластиШапка = Новый Структура(ИмяРеквизитыШапки);
	РеквизитыОбластиПоказатели = Новый Структура(ИмяРеквизитыПоказатели);
		
	ВыборкаПоШапке.Следующий();
		
	ЗаполнитьЗначенияСвойств(РеквизитыОбластиШапка, ВыборкаПоШапке);
		
	РеквизитыОбластиШапка.Вставить("Дата", Формат(ВыборкаПоШапке.Дата, НСтр("ru='ДФ=''дд ММММ гггг ""г.""'''")));
	
	Пока ВыборкаКачественныеПоказатели.Следующий() Цикл
		
		Показатель = ВыборкаКачественныеПоказатели.Показатель;
		
		Если Не Показатель.Предопределенный Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеПоказателя = ВыборкаКачественныеПоказатели.Значение;		
		ЗаполнитьКолонкуПоказателиЗПП42(Показатель, РеквизитыОбластиПоказатели, ЗначениеПоказателя);
		
	КонецЦикла;
		
	Область = Макет.ПолучитьОбласть("ОбластьОсновная");
	Область.Параметры.Заполнить(РеквизитыОбластиШапка);
	Область.Параметры.Заполнить(РеквизитыОбластиПоказатели);
	ТабличныйДокумент.Вывести(Область);
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
КонецПроцедуры

Процедура ЗаполнитьКолонкуПоказателиЗПП42(Показатель, РеквизитыОбластиПоказатели, ЗначениеПоказателя)
	
	Если Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.МассоваяДоляМасла Тогда
		РеквизитыОбластиПоказатели.ПроцентКлоп = ЗначениеПоказателя;
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.ЗараженностьВредителями Тогда
		РеквизитыОбластиПоказатели.ЗаражениеВред = ЗначениеПоказателя;			
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Протеин Тогда
		РеквизитыОбластиПоказатели.Протеин = ЗначениеПоказателя;			
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.Клейковина Тогда
		РеквизитыОбластиПоказатели.КолКлейковина = ЗначениеПоказателя;
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.ВлажностьЗерна Тогда
		РеквизитыОбластиПоказатели.Влажность = ЗначениеПоказателя;			
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.СорнаяПримесьМинеральнаяПроцент Тогда
		РеквизитыОбластиПоказатели.ПримесиМинеральная = ЗначениеПоказателя;
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.ВреднаяВсегоПроцент Тогда
		РеквизитыОбластиПоказатели.ПримесиВредная = ЗначениеПоказателя;
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.СорнаяПримесь Тогда
		РеквизитыОбластиПоказатели.ПримесиСорная = ЗначениеПоказателя;			
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.ЗерноваяПримесьБитыеЗернаГр Тогда
		РеквизитыОбластиПоказатели.ПримесиБитые = ЗначениеПоказателя;
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.ЗерноваяПримесьПроросшиеЗернаПроцент Тогда
		РеквизитыОбластиПоказатели.ПримесиПроросшие = ЗначениеПоказателя;			
	ИначеЕсли Показатель = Справочники.гкс_ПоказателиАнализовНоменклатуры.МасличнаяПримесь Тогда
		РеквизитыОбластиПоказатели.ПримесиМасличная = ЗначениеПоказателя;
	КонецЕсли;
			
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументПФ_MXL_АктОтбораПроб(ТабличныйДокумент, ДанныеДляПечати, ПараметрыПечати)
	
	ЛевыйОтступ = 15;
	ПравыйОтступ = 5;
	
	ТабличныйДокумент.ПолеСлева = ЛевыйОтступ;
	ТабличныйДокумент.ПолеСправа = ПравыйОтступ;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_АктоОтбораПроб";
	
	Макет = ПолучитьМакет("ПФ_MXL_АктОтбораПроб");
	ОбластьШапка    = Макет.ПолучитьОбласть("Шапка");   
	ОбластьШапкаТС  = Макет.ПолучитьОбласть("ШапкаТС");
	ОбластьОсновное = Макет.ПолучитьОбласть("Основное");     
	ОбластьКомпозит = Макет.ПолучитьОбласть("Композит");
	ОбластьОтметкиОбразца = Макет.ПолучитьОбласть("ОтметкиОбразца");	
	ОбластьПломбы = Макет.ПолучитьОбласть("Пломбы"); 
	ОбластьОсновноеПодвал = Макет.ПолучитьОбласть("ОсновноеПодвал");
	ОбластьПодвал   = Макет.ПолучитьОбласть("Подвал"); 
	ОбластьПодвалЭкземплярАкта = Макет.ПолучитьОбласть("ПодвалЭкземплярАкта");
	ОбластьПодвалЛаборатория   = Макет.ПолучитьОбласть("ПодвалЛаборатория");
	ПараметрыДляПечати = ПараметрыПечати.ДанныеПечати;
	
	ВыборкаШапка 	  = ДанныеДляПечати.Шапка.Выбрать();
	ВыборкаПоказатели = ДанныеДляПечати.Показатели.Выбрать();
	ВыборкаТранспортныеСредства = ДанныеДляПечати.ТранспортныеСредства.Выбрать();
	
	ВыводитьОбластьПломбы = Ложь;
	ВыводитьКомпозит = Ложь;   
	НесколькоТС = Ложь;
		
	ВыборкаШапка.Следующий();       
		
	ОбластьШапка.Параметры.Заполнить(ВыборкаШапка);
	ОбластьШапка.Параметры.ДатаВремяОтбора = ВыборкаШапка.Дата;           
	ОбластьШапка.Параметры.Дата = Формат(ВыборкаШапка.Дата, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.Грузоотправитель = 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаШапка.ОтправительПолучатель, "НаименованиеПолное");        
		
	ОбластьОсновное.Параметры.Заполнить(ВыборкаШапка);
	
	Показатели = "";    
	КоличествоПоказателей = ВыборкаПоказатели.Количество();
	НомерТекущегоПоказателя = 0;
	
	Пока ВыборкаПоказатели.Следующий() Цикл
		НомерТекущегоПоказателя = НомерТекущегоПоказателя + 1;
		Показатели = Показатели + Строка(ВыборкаПоказатели.Показатель);
		Если КоличествоПоказателей <> НомерТекущегоПоказателя Тогда
			Показатели = Показатели + "; ";
		КонецЕсли;
	КонецЦикла;                                    
	
	ОбластьОсновноеПодвал.Параметры.ПоказателиАнализов = Показатели;
	
	ВыводитьОбластьПломбы = ВыводитьПломбы(ВыборкаШапка.ВидПеревозки, ВыборкаШапка.ТипПробы);
	
	ЗаполнитьШтрихкод(ОбластьШапка.Рисунки.КартинкаШтрихкода, ВыборкаШапка.НомерПробы);      
	
	ЭтоКомпозитнаяПроба = ВыборкаШапка.ТипПробы = Перечисления.гкс_ТипыПроб.Композитная ;
	Если ЭтоКомпозитнаяПроба 
	   И ЭтоФормированиеНомераПробы(ВыборкаШапка) Тогда
	   
		ВыводитьКомпозит = Истина;
	   
	КонецЕсли;         
	
	ТранспортныеСредства = Новый Массив;
	
	Пока ВыборкаТранспортныеСредства.Следующий() Цикл
		ТранспортныеСредства.Добавить(ВыборкаТранспортныеСредства.ТранспортноеСредство);
	КонецЦикла;   

	ОбластьШапка.Параметры.Организация = 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыДляПечати.Контрагент, "НаименованиеПолное");
	ОбластьШапка.Параметры.Адрес = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыДляПечати.Контрагент, "Адрес"); 
	ОбластьШапка.Параметры.ИНН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыДляПечати.Контрагент, "ИНН");
	ОбластьШапка.Параметры.Подразделение = ПараметрыДляПечати.Подразделение;        
	
	ЗаполнитьТранспортныеСредства(ОбластьШапка, ОбластьШапкаТС, ВыборкаШапка, ТранспортныеСредства, НесколькоТС);
	
	ОбластьПодвал.Параметры.Представитель = ПараметрыДляПечати.Подразделение; 
	
	Если ЗначениеЗаполнено(ПараметрыДляПечати.Подписант) Тогда
		ПодписантДанные = 
			ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыДляПечати.Подписант, "Наименование, Должность");	
		ОбластьПодвал.Параметры.ПодписантДолжность = ПодписантДанные.Должность;
		ОбластьПодвал.Параметры.ПодписантФИО = ПодписантДанные.Наименование;
	КонецЕсли;		
		
	ТабличныйДокумент.Вывести(ОбластьШапка); 
	Если НесколькоТС Тогда
		ТабличныйДокумент.Вывести(ОбластьШапкаТС);
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьОсновное);   
	Если ВыводитьКомпозит Тогда
		ТабличныйДокумент.Вывести(ОбластьКомпозит); 	                                         
	КонецЕсли;          
	ТабличныйДокумент.Вывести(ОбластьОтметкиОбразца);
	Если ВыводитьОбластьПломбы Тогда
		ТабличныйДокумент.Вывести(ОбластьПломбы);        
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьОсновноеПодвал);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	Если НЕ ЭтоКомпозитнаяПроба Тогда 
		ТабличныйДокумент.Вывести(ОбластьПодвалЭкземплярАкта);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыДляПечати.КонтрагентЛаборатории) Тогда              
		ОбластьПодвалЛаборатория.Параметры.КонтрагентЛаборатории =
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыДляПечати.КонтрагентЛаборатории, "НаименованиеПолное");
		Если ЗначениеЗаполнено(ПараметрыДляПечати.ПредставительЛаборатории) Тогда
			ПредставительДанные = 
				ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыДляПечати.ПредставительЛаборатории, "Наименование, Должность");	
			ОбластьПодвалЛаборатория.Параметры.ПредставительЛабораторииДолжность = ПредставительДанные.Должность;
			ОбластьПодвалЛаборатория.Параметры.ПредставительЛабораторииФИО = ПредставительДанные.Наименование;
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьПодвалЛаборатория);   
	КонецЕсли;	
	
	ТабличныйДокумент.АвтоМасштаб = Истина; 
		
КонецПроцедуры

Функция ЭтоФормированиеНомераПробы(ВыборкаШапка)
	
	Возврат ТипЗнч(ВыборкаШапка.Ссылка) = Тип("ДокументСсылка.гкс_ФормированиеНомераПробы");	

КонецФункции

Процедура ЗаполнитьТранспортныеСредства(ОбластьШапка, ОбластьШапкаТС, ВыборкаШапка, ТранспортныеСредства, НесколькоТС)
	
	Если ЭтоФормированиеНомераПробы(ВыборкаШапка) Тогда
	
		КоличествоТС = ТранспортныеСредства.Количество();       
		Если КоличествоТС = 1 Тогда
			ОбластьШапка.Параметры.Транспорт = ТранспортныеСредства[0];
		ИначеЕсли КоличествоТС <> 0 Тогда         
			НесколькоТС = Истина;
			СтрокаТС = "";
			Для Каждого ТС Из ТранспортныеСредства Цикл
				СтрокаТС = СтрШаблон("%1%2%3", СтрокаТС, ТС, Символы.ПС); 
			КонецЦикла;
			ОбластьШапкаТС.Параметры.ТранспортныеСредства = СтрокаТС;
		Иначе
			ОбластьШапка.Параметры.Транспорт = "";
		КонецЕсли; 
		
	Иначе
		
		ОбластьШапка.Параметры.Транспорт = ВыборкаШапка.ТранспортноеСредство;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатиАктаОтбораПроб(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;     
	Запрос.Текст = ТекстЗапросаАктОтбораПроб();   
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	НомераТаблиц = НомераТаблицАктОтбораПроб();
	РезультатыЗапросов = Запрос.ВыполнитьПакет();     
		
	Результат = Новый Структура();
	Результат.Вставить("Шапка", РезультатыЗапросов[НомераТаблиц.Шапка]);
	Результат.Вставить("Показатели", РезультатыЗапросов[НомераТаблиц.Показатели]);
	Результат.Вставить("ТранспортныеСредства", РезультатыЗапросов[НомераТаблиц.ТранспортныеСредства]);
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаАктОтбораПроб()
	                               
	Возврат
	"ВЫБРАТЬ
	|	ЛабораторныйАнализ.Ссылка КАК Ссылка,
	|	ЛабораторныйАнализ.Организация КАК Организация,
	|	ЛабораторныйАнализ.Номенклатура КАК Номенклатура,
	|	ЛабораторныйАнализ.Дата КАК Дата,
	|	ЕСТЬNULL(РегистрацияНаПЛК.ОтправительПолучатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК
	|		ОтправительПолучатель,
	|	ЕСТЬNULL(РегистрацияНаПЛК.ТранспортноеСредство, """") КАК ТранспортноеСредство,
	|	ЕСТЬNULL(ТранспортныеСредства.НомерТранспортногоСредства, """") КАК НомерТС,
	|	ЛабораторныйАнализ.КоличествоОбразцов КАК КоличествоПроб,
	|	ВЫБОР
	|		КОГДА
	|			ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества = ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.Приемка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.гкс_ТипыПроб.Единичная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.гкс_ТипыПроб.Композитная)
	|	КОНЕЦ КАК ТипПробы,
	|	ЛабораторныйАнализ.гкс_ВидПеревозки КАК ВидПеревозки,
	|	ЛабораторныйАнализ.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ЛабораторныйАнализ.НомерПробы КАК НомерПробы,
	|	ВЫБОР
	|		КОГДА
	|			ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества = ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.Приемка)
	|			ТОГДА ЕСТЬNULL(РегистрацияНаПЛК.Водитель, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Водитель
	|ПОМЕСТИТЬ ВТШапка
	|ИЗ
	|	Документ.гкс_ЛабораторныйАнализ КАК ЛабораторныйАнализ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК РегистрацияНаПЛК
	|		ПО ЛабораторныйАнализ.гкс_ДокументРегистрации = РегистрацияНаПЛК.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТранспортныеСредства КАК ТранспортныеСредства
	|		ПО РегистрацияНаПЛК.ТранспортноеСредство = ТранспортныеСредства.Ссылка
	|ГДЕ
	|	ЛабораторныйАнализ.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФормированиеНомераПробы.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	ЕСТЬNULL(РегистрацияНаПЛК.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|	ФормированиеНомераПробы.Дата,
	|	ЕСТЬNULL(РегистрацияНаПЛК.ОтправительПолучатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	|	ЕСТЬNULL(РегистрацияНаПЛК.ТранспортноеСредство, """"),
	|	ЕСТЬNULL(СправочникТранспортныеСредства.НомерТранспортногоСредства, """"),
	|	0,
	|	ФормированиеНомераПробы.ТипПробы,
	|	ЕСТЬNULL(РегистрацияНаПЛК.ВидПеревозки, ЗНАЧЕНИЕ(Перечисление.гкс_ТипыТранспортныхСредствДоставки.ПустаяССылка)),
	|	ФормированиеНомераПробы.ТочкаМаршрута,
	|	ФормированиеНомераПробы.НомерПробы,
	|	""""
	|ИЗ
	|	Документ.гкс_ФормированиеНомераПробы КАК ФормированиеНомераПробы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ФормированиеНомераПробы.СписокРегистраций КАК ФормированиеНомераПробыСписокРегистраций
	|		ПО ФормированиеНомераПробыСписокРегистраций.Ссылка = ФормированиеНомераПробы.Ссылка
	|		И ФормированиеНомераПробыСписокРегистраций.НомерСтроки = 1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК РегистрацияНаПЛК
	|		ПО ФормированиеНомераПробыСписокРегистраций.ДокументРегистрации = РегистрацияНаПЛК.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_СвязьРегистрацииИТранспортногоДокумента КАК
	|			СвязьРегистрацииИТранспортногоДокумента
	|		ПО РегистрацияНаПЛК.Ссылка = СвязьРегистрацииИТранспортногоДокумента.ДокументРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ТранспортныйДокумент КАК ГКСТранспортныйДокумент
	|		ПО СвязьРегистрацииИТранспортногоДокумента.ТранспортныйДокумент = ГКСТранспортныйДокумент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТранспортныеСредства КАК СправочникТранспортныеСредства
	|		ПО РегистрацияНаПЛК.ТранспортноеСредство = СправочникТранспортныеСредства.Ссылка
	|ГДЕ
	|	ФормированиеНомераПробы.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТШапка.Ссылка КАК Ссылка,
	|	ВТШапка.Организация КАК Организация,
	|	ВТШапка.Номенклатура КАК Номенклатура,
	|	ВТШапка.Дата КАК Дата,
	|	ВТШапка.ОтправительПолучатель КАК ОтправительПолучатель,
	|	ВТШапка.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВТШапка.НомерТС КАК НомерТС,
	|	ЕСТЬNULL(НастройкиПечатиФормированияПроб.ОбъемПробы, """") КАК ОбъемПробы,
	|	ЕСТЬNULL(НастройкиПечатиФормированияПроб.ГОСТ, """") КАК ГОСТ,
	|	ВТШапка.КоличествоПроб КАК КоличествоПроб,
	|	ВТШапка.ВидПеревозки КАК ВидПеревозки,
	|	ВТШапка.ТипПробы КАК ТипПробы,
	|	ЕСТЬNULL(СпрНоменклатура.НаименованиеПолное, """") КАК НоменклатураНаименование,
	|	ВТШапка.НомерПробы КАК НомерПробы,
	|	ВТШапка.Водитель КАК Водитель
	|ИЗ
	|	ВТШапка КАК ВТШапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_НастройкиПечатиФормированияПроб КАК НастройкиПечатиФормированияПроб
	|		ПО ВТШапка.Номенклатура = НастройкиПечатиФормированияПроб.Номенклатура
	|		И ВТШапка.ТипПробы = НастройкиПечатиФормированияПроб.ТипПробы
	|		И ВТШапка.ВидПеревозки = НастройкиПечатиФормированияПроб.ВидПеревозки
	|		И ВТШапка.ТочкаМаршрута = НастройкиПечатиФормированияПроб.ТочкаМаршрута
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ВТШапка.Номенклатура = СпрНоменклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛабораторныйАнализКачественныеПоказатели.Ссылка КАК Ссылка,
	|	ЛабораторныйАнализКачественныеПоказатели.Показатель КАК Показатель
	|ИЗ
	|	Документ.гкс_ЛабораторныйАнализ.КачественныеПоказатели КАК ЛабораторныйАнализКачественныеПоказатели
	|ГДЕ
	|	ЛабораторныйАнализКачественныеПоказатели.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФормированиеНомераПробыСписокРегистраций.Ссылка,
	|	ЕСТЬNULL(ЛабораторныйАнализКачественныеПоказатели.Показатель,
	|		ЗНАЧЕНИЕ(Справочник.гкс_ПоказателиАнализовНоменклатуры.ПустаяСсылка))
	|ИЗ
	|	Документ.гкс_ФормированиеНомераПробы.СписокРегистраций КАК ФормированиеНомераПробыСписокРегистраций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_ФормированиеНомераПробы КАК ФормированиеНомераПробы
	|		ПО ФормированиеНомераПробыСписокРегистраций.Ссылка = ФормированиеНомераПробы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ЛабораторныйАнализ КАК ЛабораторныйАнализ
	|		ПО ФормированиеНомераПробыСписокРегистраций.ДокументРегистрации = ЛабораторныйАнализ.гкс_ДокументРегистрации
	|		И ФормированиеНомераПробыСписокРегистраций.НомерСтроки = 1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ЛабораторныйАнализ.КачественныеПоказатели КАК ЛабораторныйАнализКачественныеПоказатели
	|		ПО ЛабораторныйАнализ.Ссылка = ЛабораторныйАнализКачественныеПоказатели.Ссылка
	|ГДЕ
	|	ФормированиеНомераПробыСписокРегистраций.Ссылка = &ДокументОснование
	|	И ФормированиеНомераПробы.ТипПробы = ЗНАЧЕНИЕ(Перечисление.гкс_ТипыПроб.Единичная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ФормированиеНомераПробы.Ссылка,
	|	ЕСТЬNULL(ЛабораторныйАнализКачественныеПоказатели.Показатель,
	|		ЗНАЧЕНИЕ(Справочник.гкс_ПоказателиАнализовНоменклатуры.ПустаяСсылка))
	|ИЗ
	|	Документ.гкс_ФормированиеНомераПробы КАК ФормированиеНомераПробы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ЛабораторныйАнализ КАК ЛабораторныйАнализ
	|		ПО ФормированиеНомераПробы.Ссылка = ЛабораторныйАнализ.гкс_ДокументРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ЛабораторныйАнализ.КачественныеПоказатели КАК ЛабораторныйАнализКачественныеПоказатели
	|		ПО ЛабораторныйАнализ.Ссылка = ЛабораторныйАнализКачественныеПоказатели.Ссылка
	|ГДЕ
	|	ФормированиеНомераПробы.Ссылка = &ДокументОснование
	|	И ФормированиеНомераПробы.ТипПробы = ЗНАЧЕНИЕ(Перечисление.гкс_ТипыПроб.Композитная)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФормированиеНомераПробы.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(РегистрацияНаПЛК.ТранспортноеСредство, """") КАК ТранспортноеСредство
	|ИЗ
	|	Документ.гкс_ФормированиеНомераПробы КАК ФормированиеНомераПробы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ФормированиеНомераПробы.СписокРегистраций КАК ФормированиеНомераПробыСписокРегистраций
	|		ПО ФормированиеНомераПробыСписокРегистраций.Ссылка = ФормированиеНомераПробы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК РегистрацияНаПЛК
	|		ПО ФормированиеНомераПробыСписокРегистраций.ДокументРегистрации = РегистрацияНаПЛК.Ссылка
	|ГДЕ
	|	ФормированиеНомераПробы.Ссылка = &ДокументОснование";
	
КонецФункции

Функция НомераТаблицАктОтбораПроб()
	
	НомераТаблиц = Новый Структура;                             
	НомераТаблиц.Вставить("ВТШапка", НомераТаблиц.Количество());  
	НомераТаблиц.Вставить("Шапка", НомераТаблиц.Количество());  
	НомераТаблиц.Вставить("Показатели", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТранспортныеСредства", НомераТаблиц.Количество());
	
	Возврат НомераТаблиц;
	
КонецФункции

Функция ВыводитьПломбы(ВидПеревозки, ТипПробы) 
	Возврат
		ТипПробы = Перечисления.гкс_ТипыПроб.Единичная
		И ВидПеревозки = Перечисления.гкс_ТипыТранспортныхСредствДоставки.Автомобиль;
КонецФункции

#Область ПечатнаяФормаЗПП47АЛЦ

Процедура ОформлениеТабличногоДокумента(ТабДокумент)     
	
	ТабДокумент.АвтоМасштаб = Истина; 
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Отступ10 = 10;
	Отступ20 = 20;
	
	ТабДокумент.ПолеСверху 	= Отступ10;
	ТабДокумент.ПолеСлева 	= Отступ20;
	ТабДокумент.ПолеСнизу 	= Отступ10;
	ТабДокумент.ПолеСправа 	= Отступ10;

КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументЗПП47АЛЦ(ТабличныйДокумент, МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ДатаПечати = ДатаПечатиДокумента(МассивОбъектов);
	
	РезультатЗапроса = РезультатыЗапросаДляПечатныхФорм(МассивОбъектов, ДатаПечати);	
	ПоказателиАнализа 	= ПоказателиАнализаЗПП47АЛЦ();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.ПФ_MXL_ЗПП47_АЛЦ");
	
	ВыборкаОсновная = РезультатЗапроса.ВыборкаОсновная;
	Пока ВыборкаОсновная.Следующий() Цикл  
		
		НомерСтрокиНачало 	= ТабличныйДокумент.ВысотаТаблицы + 1;	
		ОбластьЛицевая 		= Макет.ПолучитьОбласть("ЛицеваяСторона");
		ОбластьШапкаОборотнаяСторона 	= Макет.ПолучитьОбласть("ОбластьШапкаОборотнаяСторона");
		ОбластьПодвалОборотнаяСторона 	= Макет.ПолучитьОбласть("ОбластьПодвалОборотнаяСторона");
		
		
		ВыборкаШапка 		= ВыборкаОсновная.Выбрать();
		ВыборкаПоказатели 	= РезультатЗапроса.ВыборкаПоказатели;
		ВыборкаПоказатели.Сбросить();
		
		ЛабАнализ = ВыборкаОсновная.ЛабАнализ;
		ЛицоСПравомПодписи = ПараметрыПечати.ДанныеПечати.ЛицоСПравомПодписи;
		ДолжностьЛицоСПравомПодписи = ПараметрыПечати.ДанныеПечати.ЛицоСПравомПодписи.Должность;
		
		ОбластьЛицевая.Параметры.ЛицоСПравомПодписи = ЛицоСПравомПодписи;
		
		ОбластьШапкаОборотнаяСторона.Параметры.Гост = 
			СтрЗаменить(ОбластьШапкаОборотнаяСторона.Параметры.ГОСТ, "ГОСТ", "");
		ОбластьЛицевая.Параметры.ГОСТПробы = 
			СтрЗаменить(ОбластьЛицевая.Параметры.ГОСТПробы, "ГОСТ", "");
		ОбластьЛицевая.Параметры.Дата = Формат(ОбластьЛицевая.Параметры.Дата, "ДЛФ=Д");
			
		ОбластьЛицевая.Параметры.ТранспортныеСредства = СформироватьСписокНомеров(
			ЛабАнализ, РезультатЗапроса.ВыборкаТС);
		      
		Пока ВыборкаШапка.Следующий() Цикл
						 
			ОбластьЛицевая.Параметры.Заполнить(ВыборкаШапка);
			ОбластьЛицевая.Параметры.ПредставлениеДолжностиДляПечати = ДолжностьЛицоСПравомПодписи;
			ОбластьЛицевая.Параметры.РабочееНаименование = ЛицоСПравомПодписи;	
		
			ОбластьШапкаОборотнаяСторона.Параметры.Заполнить(ВыборкаШапка);
			ОбластьПодвалОборотнаяСторона.Параметры.ПредставлениеДолжностиДляПечати = ДолжностьЛицоСПравомПодписи;
			ОбластьПодвалОборотнаяСторона.Параметры.РабочееНаименование = ЛицоСПравомПодписи;
			Если ЗначениеЗаполнено(ВыборкаШапка.Отправитель) Тогда  
				ОбластьШапкаОборотнаяСторона.Параметры.Происхождение = РегионКонтрагента(
					ВыборкаШапка.Отправитель, ДатаПечати);	                                                      
			КонецЕсли;		
			
			ЗаполнитьПараметрыПоказателей(ОбластьЛицевая, ЛабАнализ, 
											ВыборкаПоказатели, ПоказателиАнализа);
			ЗаполнитьПараметрыПоказателей(ОбластьШапкаОборотнаяСторона, ЛабАнализ, 
											ВыборкаПоказатели, ПоказателиАнализа);
			ЗаполнитьПараметрыПоказателей(ОбластьПодвалОборотнаяСторона, ЛабАнализ, 
											ВыборкаПоказатели, ПоказателиАнализа);
			ТДОбластьПоказатлелей = Новый ТабличныйДокумент;
			ЗаполнитьПараметрыПоказателейЗПП47АЛЦ(Макет, ЛабАнализ, ВыборкаПоказатели, 
												ПоказателиАнализа, ТДОбластьПоказатлелей);
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьЛицевая);                         
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ТабличныйДокумент.Вывести(ОбластьШапкаОборотнаяСторона);
		ТабличныйДокумент.Вывести(ТДОбластьПоказатлелей);	
        ТабличныйДокумент.Вывести(ОбластьПодвалОборотнаяСторона);              
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();       
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ЛабАнализ); 
		
	КонецЦикла;
 			
КонецПроцедуры

Функция ДатаПечатиДокумента(МассивОбъектов)
	
	ДатаПечати = ТекущаяДатаСеанса();   
	
	Если МассивОбъектов.Количество() > 0  Тогда
		ДатаПечати = НачалоДня(МассивОбъектов[0].Дата);
	КонецЕсли;

	Возврат ДатаПечати;
	
КонецФункции

Функция РезультатыЗапросаДляПечатныхФорм(МассивОбъектов, ДатаПечати)
	
	Запрос 	= Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗПП();	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПустаяСтрока", "");  
	Запрос.УстановитьПараметр("КонтрагентПустаяСсылка", 
		Справочники.Контрагенты.ПустаяСсылка());  
	Запрос.УстановитьПараметр("ДатаПечати", НачалоДня(ДатаПечати));  
		
  	РезультатыЗапросов 	  	= Запрос.ВыполнитьПакет();	
	Шапка 				  	= 2;
	Анализы				  	= 3;	
	ТранспортныеСредства 	= 4;
	
	СтруктураРезультата = Новый Структура;
	
	СтруктураРезультата.Вставить("ВыборкаОсновная",
		РезультатыЗапросов[Шапка].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
	СтруктураРезультата.Вставить("ВыборкаПоказатели", 
		РезультатыЗапросов[Анализы].Выбрать());
	СтруктураРезультата.Вставить("ВыборкаТС",
		РезультатыЗапросов[ТранспортныеСредства].Выгрузить());

	Возврат СтруктураРезультата; 
	
КонецФункции

Функция ТекстЗапросаЗПП()
		
	Возврат "ВЫБРАТЬ
	|	ЛабораторныйАнализ.Ссылка КАК ЛабАнализ,
	|	ЛабораторныйАнализ.Номенклатура КАК Номенклатура,
	|	ЛабораторныйАнализ.гкс_ДокументРегистрации КАК ДокументРегистрации,
	|	ЕСТЬNULL(НастройкиПечатиФормированияПроб.ГОСТ, """") КАК ГОСТ,
	|	ЕСТЬNULL(НастройкиПечатиФормированияПроб.ОбъемПробы, 0) * 1000 КАК МассаПробы
	|ПОМЕСТИТЬ ВТ_ГостыОтбораПроб
	|ИЗ
	|	Документ.гкс_ЛабораторныйАнализ КАК ЛабораторныйАнализ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_НастройкиПечатиФормированияПроб КАК НастройкиПечатиФормированияПроб
	|		ПО ЛабораторныйАнализ.Номенклатура = НастройкиПечатиФормированияПроб.Номенклатура
	|		И ЛабораторныйАнализ.ТочкаМаршрута = НастройкиПечатиФормированияПроб.ТочкаМаршрута
	|		И ЛабораторныйАнализ.гкс_ВидПеревозки = НастройкиПечатиФормированияПроб.ВидПеревозки
	|		И ВЫБОР
	|			КОГДА
	|				ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества = ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.Приемка)
	|				ТОГДА НастройкиПечатиФормированияПроб.ТипПробы = ЗНАЧЕНИЕ(Перечисление.гкс_ТипыПроб.Единичная)
	|			КОГДА
	|				ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества = ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.ПриемкаКомпозит)
	|				ТОГДА НастройкиПечатиФормированияПроб.ТипПробы = ЗНАЧЕНИЕ(Перечисление.гкс_ТипыПроб.Композитная)
	|		КОНЕЦ
	|ГДЕ
	|	ЛабораторныйАнализ.Ссылка В (&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НормативыСертификации.Организация КАК Организация,
	|	НормативыСертификации.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(НормативыСертификации.ГОСТ) КАК ГОСТ
	|ПОМЕСТИТЬ ВТ_НормативыСертификации
	|ИЗ
	|	РегистрСведений.гкс_РезультатыНормативнойСертификацииНоменклатуры.СрезПоследних(&ДатаПечати, Номенклатура В
	|		(ВЫБРАТЬ
	|			Таблица.Номенклатура
	|		ИЗ
	|			ВТ_ГостыОтбораПроб КАК Таблица)
	|	И
	|		гкс_НазначениеИспользованияКачества = ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.ПриемкаКомпозит)) КАК
	|		НормативыСертификации
	|СГРУППИРОВАТЬ ПО
	|	НормативыСертификации.Организация,
	|	НормативыСертификации.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЛабораторныйАнализ.Ссылка КАК ЛабАнализ,
	|	ЛабораторныйАнализ.Организация КАК Организация,
	|	ЛабораторныйАнализ.Номер КАК Номер,
	|	ЛабораторныйАнализ.Дата КАК Дата,
	|	ЛабораторныйАнализ.Номенклатура КАК Номенклатура,
	|	ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества КАК НазначениеИспользованияКачества,
	|	ЛабораторныйАнализ.ГодУрожая КАК ГодУрожая,
	|	ЛабораторныйАнализ.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ЛабораторныйАнализ.гкс_СостояниеТранспортногоСредства КАК СостояниеТранспортногоСредства,
	|	ЛабораторныйАнализ.Примечание КАК Комментарий,
	|	ЗНАЧЕНИЕ(Справочник.гкс_ТочкиМаршрута.ПустаяСсылка) КАК ПунктВыгрузки,
	|	ЛабораторныйАнализ.гкс_ДатаПолученияАнализа КАК ДатаПолученияАнализа,
	|	ЛабораторныйАнализ.НомерПробы КАК НомерПробы,
	|	ЛабораторныйАнализ.Ответственный КАК Ответственный,
	|	&КонтрагентПустаяСсылка КАК Отправитель,
	|	&КонтрагентПустаяСсылка КАК Получатель,
	|	ЕСТЬNULL(Организации.НаименованиеСокращенное, &ПустаяСтрока) КАК ОрганизацияПредставление,
	|	ЕСТЬNULL(Организации.КодПоОКПО, &ПустаяСтрока) КАК КодпоОКПО,
	|	ЕСТЬNULL(ВТ_НормативыСертификации.ГОСТ, &ПустаяСтрока) КАК ГОСТ,
	|	ЕСТЬNULL(ГостыОтбораПроб.ГОСТ, &ПустаяСтрока) КАК ГОСТПробы,
	|	ЕСТЬNULL(ГостыОтбораПроб.МассаПробы, 0) * 1000 КАК МассаПробы,
	|	ЕСТЬNULL(СпрНоменклатура.НаименованиеПолное, &ПустаяСтрока) КАК НоменклатураНаименование,
	|	&КонтрагентПустаяСсылка КАК ОтправительНаименование,
	|	&КонтрагентПустаяСсылка КАК ПолучательНаименование,
	|	ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества КАК ТипАнализа
	|ИЗ
	|	Документ.гкс_ЛабораторныйАнализ КАК ЛабораторныйАнализ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ГостыОтбораПроб КАК ЛабАнализыОтбор
	|		ПО ЛабораторныйАнализ.Ссылка = ЛабАнализыОтбор.ЛабАнализ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО Организации.КонтрагентОрганизации = Контрагенты.Ссылка
	|		ПО ЛабораторныйАнализ.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НормативыСертификации КАК ВТ_НормативыСертификации
	|		ПО ЛабораторныйАнализ.Организация = ВТ_НормативыСертификации.Организация
	|		И ЛабораторныйАнализ.Номенклатура = ВТ_НормативыСертификации.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГостыОтбораПроб КАК ГостыОтбораПроб
	|		ПО ЛабораторныйАнализ.Номенклатура = ГостыОтбораПроб.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ЛабораторныйАнализ.Номенклатура = СпрНоменклатура.Ссылка
	|ИТОГИ
	|ПО
	|	ЛабАнализ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЛабАнализПоказатели.Показатель КАК Показатель,
	|	ЛабАнализПоказатели.СоответствуетНормативу КАК СоответствуетНормативу,
	|	ВЫБОР
	|		КОГДА ЛабАнализПоказатели.Значение > 0
	|			ТОГДА ЛабАнализПоказатели.Значение
	|		ИНАЧЕ ЛабАнализПоказатели.гкс_Примечание
	|	КОНЕЦ КАК Значение,
	|	ЛабАнализПоказатели.Ссылка КАК ЛабАнализ,
	|	ЕСТЬNULL(ПоказателиАнализовНоменклатуры.ТипПоказателя,
	|		ЗНАЧЕНИЕ(Перечисление.гкс_ТипыПоказателейАнализовНоменклатуры.ПустаяСсылка)) КАК ТипПоказателя
	|ИЗ
	|	Документ.гкс_ЛабораторныйАнализ.КачественныеПоказатели КАК ЛабАнализПоказатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ГостыОтбораПроб КАК ЛабАнализыОтбор
	|		ПО ЛабАнализПоказатели.Ссылка = ЛабАнализыОтбор.ЛабАнализ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гкс_ПоказателиАнализовНоменклатуры КАК ПоказателиАнализовНоменклатуры
	|		ПО ЛабАнализПоказатели.Показатель = ПоказателиАнализовНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_ГостыОтбораПроб.ЛабАнализ КАК ЛабАнализ,
	|	ЕСТЬNULL(СправочникТранспортныеСредства.НомерТранспортногоСредства, """") КАК Номер
	|ИЗ
	|	ВТ_ГостыОтбораПроб КАК ВТ_ГостыОтбораПроб
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК РегистрацияНаПЛК
	|		ПО ВТ_ГостыОтбораПроб.ДокументРегистрации = РегистрацияНаПЛК.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТранспортныеСредства КАК СправочникТранспортныеСредства
	|		ПО РегистрацияНаПЛК.ТранспортноеСредство = СправочникТранспортныеСредства.Ссылка";
		
КонецФункции

Функция ПоказателиАнализаЗПП47АЛЦ()
	
	ПоказателиАнализовНоменклатуры = Справочники.гкс_ПоказателиАнализовНоменклатуры;
	
	СоответствиеПоказателей = Новый Соответствие;
	СоответствиеПоказателей.Вставить(                                                                       
		ПоказателиАнализовНоменклатуры.ЗараженностьВредителями, 				"ЗараженностьВредителями");	
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ВлажностьЗерна, 							"ВлажностьЗерна");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.СорнаяПримесь, 							"СорнаяПримесь");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ЗерноваяПримесь, 						"ЗерноваяПримесь");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.Цвет, 									"Цвет");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.Запах, 									"Запах");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.Однородность, 							"Однородность");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.СостояниеЗерна, 							"Состояние");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.СеменаПодсолнечника, 					"СеменаПодсолнечникаПроцент");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ПрочиеМасличныеКультурыПроцент, 			"ПрочиеМасличныеКультурыПроцент");												 
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ГМО, 									"ГМО");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.СорнаяПримесьМинеральнаяПроцент, 		"МинеральнаяПримесь");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.СорнаяПримесьОрганическаяПроцент, 		"ОрганическаяПримесь");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.СорнаяПримесьСорныеСеменаПроцент, 		"СорныеСемена");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.СорнаяПримесьИспорченныеЗернаПроцент, 	"ИспорченныеСемена");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.СорнаяПримесьПроходПроцент, 				"ПроходЧз");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ЗерноваяПримесьБитыеЗернаПроцент, 		"БитыеЗерна");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ЗерноваяПримесьИзъеденныеЗернаПроцент, 	"ИзъеденныеЗерна");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ЗерноваяПримесьЩуплыеЗернаПроцент, 		"ЩуплыеЗерна");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ЗерноваяПримесьПроросшиеЗернаПроцент, 	"ПроросшиеЗерна");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ВреднаяВсегоПроцент, 					"ВреднаяПримесь");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ВреднаяВТомЧислеСпорыньяПроцент, 		"Спорынья");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ВреднаяВТомЧислеГоловняПроцент, 			"Головня");
	СоответствиеПоказателей.Вставить(
		ПоказателиАнализовНоменклатуры.ЗерноваяПримесьИзъеденныеЗернаПроцент, 	"ИзъеденныеЗерна");
	
	Возврат СоответствиеПоказателей;
	
КонецФункции

Функция СформироватьСписокНомеров(ЛабАнализ, ТаблицаДанных) 
	
	Отбор = Новый Структура;
	Отбор.Вставить("ЛабАнализ", ЛабАнализ);
	
	МассивСтрок = ТаблицаДанных.НайтиСтроки(Отбор); 
	
	Если МассивСтрок.Количество() = 0 Тогда
		Стр = "";
	Иначе                                    
		Таб = ТаблицаДанных.Скопировать(МассивСтрок, "Номер");
		МассивНомеров = Таб.ВыгрузитьКолонку("Номер");
		Стр = СтрСоединить(МассивНомеров, ",");
	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции

Функция РегионКонтрагента(Отправитель, Дата)
	
	АдресКонтрагента = Справочники.Контрагенты.АдресКонтрагентыПоВидуКонтактнойИнформации(
		Отправитель, Дата, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);		
		
	Возврат АдресКонтрагента.Регион;

КонецФункции

Процедура ЗаполнитьПараметрыПоказателей(ОбластьТаблица, ДокументСсылка, ВыборкаПоказатели, ПоказателиАнализа)

	Для Каждого Показатель Из ПоказателиАнализа Цикл
		
		ВыборкаПоказатели.Сбросить();
		ИмяПараметраМакета = Показатель.Значение;
		
		СтруктураПоиска = Новый Структура("ЛабАнализ, Показатель", ДокументСсылка, Показатель.Ключ);
		ЕстьСвойство = ОбщегоНазначенияКлиентСервер.
						ЕстьРеквизитИлиСвойствоОбъекта(ОбластьТаблица.Параметры, ИмяПараметраМакета);
		
		Если ВыборкаПоказатели.НайтиСледующий(СтруктураПоиска)
			И ЕстьСвойство Тогда  	
			Если Показатель.Значение = "ГМО" И ВыборкаПоказатели.СоответствуетНормативу Тогда

				ОбластьТаблица.Параметры[ИмяПараметраМакета] = "ГМО не обнаружено";
				
				Продолжить;
			КонецЕсли;
			
			ОбластьТаблица.Параметры[ИмяПараметраМакета] = ВыборкаПоказатели.Значение;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьПараметрыПоказателейЗПП47АЛЦ(Макет, ДокументСсылка, ВыборкаПоказатели, ПоказателиАнализа, ТДОбластьПоказатлелей)
	
	ОбластьСорнаяПримесь			= Макет.ПолучитьОбласть("ОбластьСорнаяПримесь|ОбластьПоказателиЛево");
	ОбластьПоказательСорнаяПримесь	= Макет.ПолучитьОбласть("ОбластьПоказательСорнаяПримесь|ОбластьПоказателиЛево");
	ОбластьВреднаяПримесь			= Макет.ПолучитьОбласть("ОбластьВреднаяПримесь|ОбластьПоказателиПраво");
	ОбластьПоказательВреднаяПримесь = Макет.ПолучитьОбласть("ОбластьПоказательВреднаяПримесь|ОбластьПоказателиПраво");
	ОбластьЗерноваяПримесь			= Макет.ПолучитьОбласть("ОбластьЗерноваяПримесь|ОбластьПоказателиЛево");
	ОбластьПоказательЗерноваяПримесь = Макет.ПолучитьОбласть("ОбластьПоказательЗерноваяПримесь|ОбластьПоказателиЛево");
	ОбластьЗернаДругихКультур		= Макет.ПолучитьОбласть("ОбластьЗернаДругихКультур|ОбластьПоказателиПраво");
	ОбластьПоказательЗернаДругихКультур 
		= Макет.ПолучитьОбласть("ОбластьПоказательЗернаДругихКультур|ОбластьПоказателиПраво");
	
	ЗаполнитьПараметрыПоказателей(ОбластьСорнаяПримесь, ДокументСсылка, 
											ВыборкаПоказатели, ПоказателиАнализа);
	ЗаполнитьПараметрыПоказателей(ОбластьВреднаяПримесь, ДокументСсылка, 
											ВыборкаПоказатели, ПоказателиАнализа);
	ЗаполнитьПараметрыПоказателей(ОбластьЗерноваяПримесь, ДокументСсылка, 
											ВыборкаПоказатели, ПоказателиАнализа);
	ЗаполнитьПараметрыПоказателей(ОбластьЗернаДругихКультур, ДокументСсылка, 
											ВыборкаПоказатели, ПоказателиАнализа);
	
	СорнаяПримесь 		= Перечисления.гкс_ТипыПоказателейАнализовНоменклатуры.СорнаяПримесь;
	ВреднаяПримесь 		= Перечисления.гкс_ТипыПоказателейАнализовНоменклатуры.ВреднаяПримесь;
	ЗерноваяПримесь 	= Перечисления.гкс_ТипыПоказателейАнализовНоменклатуры.ЗерноваяПримесь;
	ЗернаДругихКультур 	= Перечисления.гкс_ТипыПоказателейАнализовНоменклатуры.ЗернаДругихКультур;
	
	ТДСорнаяПримесь 		= Новый ТабличныйДокумент;
	ТДВреднаяПримесь 		= Новый ТабличныйДокумент;
	ТДЗерноваяПримесь 		= Новый ТабличныйДокумент;
	ТДВЗернаДругихКультур 	= Новый ТабличныйДокумент;
	
	ТДСорнаяПримесь.Вывести(ОбластьСорнаяПримесь);
	ТДВреднаяПримесь.Вывести(ОбластьВреднаяПримесь);
	ТДЗерноваяПримесь.Вывести(ОбластьЗерноваяПримесь);
	ТДВЗернаДругихКультур.Вывести(ОбластьЗернаДругихКультур);
	
	Пока ВыборкаПоказатели.Следующий() Цикл
		
		Если ВыборкаПоказатели.ЛабАнализ = ДокументСсылка Тогда
			Если ВыборкаПоказатели.ТипПоказателя = СорнаяПримесь Тогда
				ОбластьПоказательСорнаяПримесь.Параметры.ДопПоказатель 			= ВыборкаПоказатели.Показатель;
				ОбластьПоказательСорнаяПримесь.Параметры.ДопПоказательЗначение 	= ВыборкаПоказатели.Значение;
		
				ТДСорнаяПримесь.Вывести(ОбластьПоказательСорнаяПримесь);
			КонецЕсли;
			Если ВыборкаПоказатели.ТипПоказателя = ВреднаяПримесь Тогда
				ОбластьПоказательВреднаяПримесь.Параметры.ДопПоказатель 		= ВыборкаПоказатели.Показатель;
				ОбластьПоказательВреднаяПримесь.Параметры.ДопПоказательЗначение = ВыборкаПоказатели.Значение;
		
				ТДВреднаяПримесь.Вывести(ОбластьПоказательВреднаяПримесь);
			КонецЕсли;
			Если ВыборкаПоказатели.ТипПоказателя = ЗерноваяПримесь Тогда
				ОбластьПоказательЗерноваяПримесь.Параметры.ДопПоказатель 			= ВыборкаПоказатели.Показатель;
				ОбластьПоказательЗерноваяПримесь.Параметры.ДопПоказательЗначение 	= ВыборкаПоказатели.Значение;
		
				ТДЗерноваяПримесь.Вывести(ОбластьПоказательЗерноваяПримесь);
			КонецЕсли;
			Если ВыборкаПоказатели.ТипПоказателя = ЗернаДругихКультур Тогда
				ОбластьПоказательЗернаДругихКультур.Параметры.ДопПоказатель 		= ВыборкаПоказатели.Показатель;
				ОбластьПоказательЗернаДругихКультур.Параметры.ДопПоказательЗначение = ВыборкаПоказатели.Значение;
		
				ТДВЗернаДругихКультур.Вывести(ОбластьПоказательЗернаДругихКультур);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ТДОбластьПоказатлелей1 = Новый ТабличныйДокумент;
	ТДОбластьПоказатлелей2 = Новый ТабличныйДокумент;
	
	ТДОбластьПоказатлелей1.Присоединить(ТДСорнаяПримесь);
	ТДОбластьПоказатлелей1.Присоединить(ТДВреднаяПримесь);
	ТДОбластьПоказатлелей2.Присоединить(ТДЗерноваяПримесь);
	ТДОбластьПоказатлелей2.Присоединить(ТДВЗернаДругихКультур);
	
	ТДОбластьПоказатлелей.Вывести(ТДОбластьПоказатлелей1);
	ТДОбластьПоказатлелей.Вывести(ТДОбластьПоказатлелей2);
	
КонецПроцедуры

#КонецОбласти
	
#КонецОбласти

#КонецЕсли
