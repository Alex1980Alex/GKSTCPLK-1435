
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьФорму();
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	УстановитьВидимостьДоступностьКомандФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИнициализироватьФормуНаКлиенте();
	ИнициализироватьЭлементыФормы();
	
	УстановитьЗаголовокКнопкиЗакрытьФорму();
	УстановитьЗаголовокКнопкиПоказатьСкрытьСлужебныеПакетыФабрик();
	УстановитьЗаголовокОписанияМоделиПриОтрытии();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МодельВСтрокеПриИзменении(Элемент)
	УстановитьЗаголовокОписанияМоделиПриИзменении();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура СуществующиеФабрикиXDTOВыбраноПриИзменении(Элемент)
	
	ДобавитьИзменитьЭлементВСписокВыбораОсновногоПространстваИмен();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьМодель(Команда)
	Элементы.ПоказатьМодель.Пометка = НЕ Элементы.ПоказатьМодель.Пометка;
	УстановитьОтобржениеМоделиИИзменитьЗаголовокКнопки(Элементы.ПоказатьМодель.Пометка);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьМодельВСправочник(Команда)
	
	Если НЕ ЗначениеЗаполнено(ПространствоИмен) Тогда
		ВызватьИсключение НСтр("ru='Не заполнено основное пространстов имен'");
	КонецЕсли;
	
	СохранитьМодельВСправочникНаСервере();
	УстановитьЗаголовокОписанияМоделиПослеСохранения();

КонецПроцедуры

&НаКлиенте
Процедура СформироватьМодель(Команда)
	
	СформироватьМодельНаСервере();
	ПерейтиНаСтраницуОписанияМодели();
	УстановитьЗаголовокОписанияМоделиПослеФормирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	ВозвращаемоеЗначение = Неопределено;
	Если ПереноситьСсылкуНаМодель Тогда
		ВозвращаемоеЗначение = МодельСсылка;
	ИначеЕсли ПереноситьТекстовоеСодержимое Тогда
		ВозвращаемоеЗначение = МодельВСтроке;
	КонецЕсли;
	
	ЭтотОбъект.Закрыть(ВозвращаемоеЗначение);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьСлужебныеПакетыФабрик(Команда)
	
	Элементы.ПоказатьСкрытьСлужебныеПакетыФабрик.Пометка = НЕ Элементы.ПоказатьСкрытьСлужебныеПакетыФабрик.Пометка;
	
	ЗаполнитьТаблицуПакетовФабрикXDTO();
	
	УстановитьЗаголовокКнопкиПоказатьСкрытьСлужебныеПакетыФабрик();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьМодельВФайл(Команда)
	
	Если НЕ ЗначениеЗаполнено(МодельВСтроке) Тогда
		ВызватьИсключение НСтр("ru='Не сформирована модель. Сохранение невозможно'");
	КонецЕсли;
	
	ОбратныйВызов = Новый ОписаниеОповещения("СохранитьМодельВФайлЗавершение", ЭтотОбъект);
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбора.Заголовок = НСтр("ru='Сохранение модели в файл'");
	ДиалогВыбора.Фильтр =  "XML документ (*.xml)|*.xml";
	
	ДиалогВыбора.Показать(ОбратныйВызов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияФормы

&НаКлиенте
Процедура ИнициализироватьЭлементыФормы()
	
	ДобавитьБазовоеПространствоИменвСписокВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьБазовоеПространствоИменвСписокВыбора()
	
	Элементы.ПространствоИмен.СписокВыбора.Добавить("http://www.1c.ru/SSL/Exchange/Message");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьФорму()
	
	ЗаполнитьТаблицуПакетовФабрикXDTO();
	ИнициализироватьРеквизитыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьФормуНаКлиенте()
	
	//@skip-warning
	ВладелецЭтоФормаКлиентскогоПриложения =  ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма");
	Если НЕ ВладелецЭтоФормаКлиентскогоПриложения Тогда
		Возврат;
	КонецЕсли;
	
	ПереноситьТекстовоеСодержимое =  ВладелецФормы.ИмяФормы = "Справочник.гкс_МоделиДанныхXDTO.Форма.ФормаЭлемента";
	ПереноситьСсылкуНаМодель = ВладелецФормы.ИмяФормы = "РегистрСведений.гкс_НастройкиФорматовОбменаED.Форма.ФормаЗаписи";
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьРеквизитыФормы()
	
	СуществуетСправочникМоделей = НЕ (РеквизитФормыВЗначение("Объект").МенеджерМоделей() = Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовФормы()
	
	Элементы.МодельСсылка.Видимость = СуществуетСправочникМоделей;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьКомандФормы()
	
	Элементы.СохранитьМодельВСправочник.Видимость = СуществуетСправочникМоделей;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокКнопкиЗакрытьФорму()

	Если ПереноситьТекстовоеСодержимое ИЛИ ПереноситьСсылкуНаМодель Тогда
		Элементы.ЗакрытьФорму.Заголовок = НСтр("ru='Перенести модель'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПакетыПоУмолчанию(ОтображатьСлужебныеПакеты = Ложь)

	СуществующиеФабрикиXDTO.Очистить();
	
	Для Каждого Пакет Из ФабрикаXDTO.Пакеты Цикл
		
		Если НЕ ОтображатьСлужебныеПакеты 
			 И СтрНайти(Пакет.URIПространстваИмен, "http://v8.1c.ru") > 0 Тогда
			Продолжить;	
		КонецЕсли;
		
		Фабрика = СуществующиеФабрикиXDTO.Добавить();
		
		Фабрика.URIПространстваИмен = Пакет.URIПространстваИмен;
		Если НРег(Фабрика.URIПространстваИмен) = Нрег("http://www.1c.ru/SSL/Exchange/Message") Тогда
			Фабрика.Выбрано = Истина;
		Иначе
			Фабрика.Выбрано = Ложь;
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеМодели

&НаСервере
Процедура СформироватьМодельНаСервере()
	
	МодельВСтроке = РеквизитФормыВЗначение("Объект").ПолучитьМодельXDTOВСтроке(МассивИменПространствXDTO());
	
КонецПроцедуры

&НаСервере
Функция ВыбранныеПространстваИменXDTO()
	
	ВыбранныеПространстваИменXDTO = СуществующиеФабрикиXDTO.НайтиСтроки(Новый Структура("Выбрано", Истина));
	Если ВыбранныеПространстваИменXDTO.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru='Не выбрано ни одного пространства имен'");
	КонецЕсли;
	
	Возврат ВыбранныеПространстваИменXDTO;
	
КонецФункции

&НаСервере
Функция МассивИменПространствXDTO()
	
	МассивИменПространствXDTO = Новый Массив;

	Для Каждого ВыбранноеПространство Из ВыбранныеПространстваИменXDTO() Цикл
		МассивИменПространствXDTO.Добавить(ВыбранноеПространство.URIПространстваИмен);
	КонецЦикла;
	
	Возврат МассивИменПространствXDTO;
	
КонецФункции

&НаСервере
Процедура ПерейтиНаСтраницуОписанияМодели() 
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаМодель;
	
КонецПроцедуры

&НаКлиенте
Процедура МодельСсылкаНажатие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(МодельСсылка) Тогда
		ПоказатьЗначение(Неопределено, МодельСсылка);	
	КонецЕсли;
	
КонецПроцедуры

#Область СохранениеМодели

&НаСервере
Процедура СохранитьМодельВСправочникНаСервере()
	
	ОписаниеМодели = Новый Структура();
	ОписаниеМодели.Вставить("Содержимое", МодельВСтроке);
	ОписаниеМодели.Вставить("ДатаСоздания", ТекущаяДатаСеанса());
	ОписаниеМодели.Вставить("ПространствоИмен", ПространствоИмен);
	
	МодельСсылка = РеквизитФормыВЗначение("Объект").СохранитьМодельВСправочникНаСервере(ОписаниеМодели);
		
КонецПроцедуры

&НаКлиенте
Процедура СохранитьМодельВФайлЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьМодельВФайлПоПутиОС(Результат[0]);
	УстановитьЗаголовокОписанияМоделиПослеСохранения();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьМодельВФайлПоПутиОС(Путь)
	
	#Если НЕ ВебКлиент Тогда

	ЗаписьТекста = Новый ЗаписьТекста();
	ЗаписьТекста.Открыть(Путь);
	
	ЗаписьТекста.Записать(МодельВСтроке);
	ЗаписьТекста.Закрыть();

	#КонецЕсли

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОтображениеСостоянияМодели

&НаКлиенте
Процедура УстановитьЗаголовокОписанияМоделиПриОтрытии()
	
	Элементы.ДекорацияОписаниеМодели.Заголовок = НСтр("ru='Модель не сформирована'");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокОписанияМоделиПослеФормирования()
	
	Элементы.ДекорацияОписаниеМодели.Заголовок = НСтр("ru='Модель сформирована'");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокОписанияМоделиПриИзменении()
	
	Элементы.ДекорацияОписаниеМодели.Заголовок = НСтр("ru='Модель сформирована. Изменена'");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокОписанияМоделиПослеСохранения()
	
	Элементы.ДекорацияОписаниеМодели.Заголовок = НСтр("ru='Модель сформирована. Сохранена'");
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ДобавитьИзменитьЭлементВСписокВыбораОсновногоПространстваИмен()
	
	ТекФабрика = Элементы.СуществующиеФабрикиXDTO.ТекущиеДанные;
	Если ТекФабрика = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементСписка = Элементы.ПространствоИмен.СписокВыбора.НайтиПоЗначению(ТекФабрика.URIПространстваИмен);
 
	Если НЕ ЭлементСписка = Неопределено И НЕ ТекФабрика.Выбрано Тогда
		Элементы.ПространствоИмен.СписокВыбора.Удалить(ЭлементСписка);
		Возврат;
	КонецЕсли;	
	
	Если ЭлементСписка = Неопределено И ТекФабрика.Выбрано Тогда
		Элементы.ПространствоИмен.СписокВыбора.Добавить(ТекФабрика.URIПространстваИмен);
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокКнопкиПоказатьСкрытьСлужебныеПакетыФабрик()
	
	Если Элементы.ПоказатьСкрытьСлужебныеПакетыФабрик.Пометка Тогда
		ЗаголовокКнопки = НСтр("ru='Скрыть служебные пакеты фабрик XDTO'");	
	Иначе
		ЗаголовокКнопки = НСтр("ru='Показать служебные пакеты фабрик XDTO'");
	КонецЕсли;
	
	Элементы.ПоказатьСкрытьСлужебныеПакетыФабрик.Заголовок = ЗаголовокКнопки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПакетовФабрикXDTO()
	
	УстановитьПакетыПоУмолчанию(Элементы.ПоказатьСкрытьСлужебныеПакетыФабрик.Пометка);
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтобржениеМоделиИИзменитьЗаголовокКнопки(ВидимостьМодели)
	
	Элементы.МодельВСтроке.Видимость = ВидимостьМодели;
	
	Если ВидимостьМодели Тогда
		Элементы.ПоказатьМодель.Заголовок = НСтр("ru='Скрыть модель'");
	Иначе
		Элементы.ПоказатьМодель.Заголовок = НСтр("ru='Показать модель'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

