
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	ИнициализироватьРеквизитыФормы();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)               
 	ЭтотОбъект.Заголовок = СтрШаблон("%1 %2", Объект.ТипРегистрации, Объект.ВидПеревозки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодДатаНачалаПриИзменении(Элемент)	
	ПериодПриИзмененииНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаОкончанияПриИзменении(Элемент)
	ПериодПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДокументов

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ПараметрыОтбора = Новый Структура("ИмяПоля", Поле.Имя);
        НайденыеСтроки = ТаблицаОписания.НайтиСтроки(ПараметрыОтбора);
		Если НайденыеСтроки.Количество() > 0 Тогда
			
			ИндексПервойСтроки = 0;
			Описание = НайденыеСтроки.Получить(ИндексПервойСтроки);
			
			ЗначениеВыбора = ТекущиеДанные[Описание.ИсточникЗначения];
			Если ЗначениеЗаполнено(ЗначениеВыбора) Тогда
				ИмяФормыДокумента = Описание.ИмяФормы;
				гкс_ПриемкаНаПЛККлиент.ОткрытьДокумент(ЭтотОбъект, ЗначениеВыбора, ИмяФормыДокумента);
			КонецЕсли;
			
		КонецЕсли;				
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьИнтервалПериода(Команда)
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИнтервалПериодаЗавершение", ЭтотОбъект);		
	гкс_ОбщегоНазначенияПЛККлиент.РедактироватьПериод(Объект.Период, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗПП3(Команда)	
	
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ТекущиеДанные.РеестрНакладных) 
		ИЛИ Не ЗначениеЗаполнено(ТекущиеДанные.ЛабораторныйАнализЕдиничный) Тогда
		Возврат;	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ЛабораторныйАнализКомпозит) Тогда 
		ЛабораторныйАнализКомпозит = ТекущиеДанные.ЛабораторныйАнализКомпозит;
	Иначе
		ЛабораторныйАнализКомпозит = ЛабораторныйАнализКомпозит(ТекущиеДанные.ЛабораторныйАнализЕдиничный);
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ЛабораторныйАнализКомпозит) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеВзвешивания = Новый Структура("Брутто, Нетто, Тара, ЕдиницаИзмеренияВеса");
	ЗаполнитьЗначенияСвойств(ДанныеВзвешивания, ТекущиеДанные); 
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументРегистрации", ТекущиеДанные.ДокументРегистрации);
	ДанныеЗаполнения.Вставить("Анализ", ЛабораторныйАнализКомпозит);
	ДанныеЗаполнения.Вставить("ДанныеВзвешивания", ДанныеВзвешивания);
	ДанныеЗаполнения.Вставить("Дата", 
		ДатаДокументаРеестаЗПП3(ТекущиеДанные.ДокументРегистрации, ТекущиеДанные.ДатаРегистрации)) ;
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ДанныеЗаполнения);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ФормированиеРеестраНакладныхЗавершение", ЭтотОбъект);
			
	ОткрытьФорму("Документ.гкс_РеестрНакладныхЗПП3.Форма.ФормаДокумента", 
		ПараметрыФормы, 
		ЭтотОбъект, 
		УникальныйИдентификатор, , , ОписаниеОповещения, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	            		
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыОбработчикиКомандЗавершение

&НаКлиенте
Процедура УстановитьИнтервалПериодаЗавершение(Результат, ДополнительныеПараметры) Экспорт 	
	ПериодПриИзмененииНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеРеестраНакладныхЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Элементы.СписокДокументов.Обновить();	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ДатаДокументаРеестаЗПП3(ДокументРегистрации, ДатаРегистрации) 
	
	ВзвешиваниеВыезд = Документы.гкс_Взвешивание.ПоРегистрацииИТипуВзвешивания(
		ДокументРегистрации, Перечисления.гкс_ТипыВзвешивания.Выезд); 
		
	Возврат
		?(ЗначениеЗаполнено(ВзвешиваниеВыезд), 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВзвешиваниеВыезд, "Дата"),
			ДатаРегистрации);
			
КонецФункции	

&НаСервере
Процедура ИнициализироватьРеквизитыФормы()
	
	ИнициализироватьРеквизитыОтбора();
	ИнициализироватьТаблицуОписаний();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьРеквизитыОтбора()
	
	Объект.ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка;
	Объект.ВидПеревозки = Перечисления.гкс_ТипыТранспортныхСредствДоставки.Автомобиль;	
			
	Если Не ЗначениеЗаполнено(Объект.Период.ДатаНачала) Тогда
		Объект.Период.ДатаНачала = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Период.ДатаОкончания) Тогда
		Объект.Период.ДатаОкончания = ТекущаяДатаСеанса();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписокДокументов()
				
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокДокументов, "НачалоПериода", 
		гкс_ПриемкаТранспорта.НачалоПроизводственныхСуток(Объект.Период.ДатаНачала), Истина);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокДокументов, "КонецПериода", 
		гкс_ПриемкаТранспорта.ОкончаниеПроизводственныхСуток(Объект.Период.ДатаОкончания), Истина);
				
КонецПроцедуры

&НаСервере
Процедура ПериодПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Период.ДатаНачала)
		И ЗначениеЗаполнено(Объект.Период.ДатаОкончания) Тогда
		
		УстановитьОтборСписокДокументов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЛабораторныйАнализКомпозит(ЛабораторныйАнализЕдиничный)
	
	Если Не ЗначениеЗаполнено(ЛабораторныйАнализЕдиничный) Тогда
		Возврат Документы.гкс_ЛабораторныйАнализ.ПустаяСсылка();
	КонецЕсли;
	
	ЛабораторныйАнализ = ЛабораторныйАнализЕдиничный.ПолучитьОбъект().Скопировать();
	
	ЛабораторныйАнализ.ЗаполнитьОбъектЗначениямиПоУмолчанию();
	ЛабораторныйАнализ.Дата = ТекущаяДатаСеанса();
	ЛабораторныйАнализ.ВидЛабораторногоАнализа = Справочники.гкс_ВидыЛабораторногоАнализа.Композитный;
	ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества = 
		Перечисления.гкс_НазначенияИспользованияКачества.ПриемкаКомпозит;
	ЛабораторныйАнализ.НомерПробы = "";
	ЛабораторныйАнализ.Ответственный = Пользователи.ТекущийПользователь();
	
	Попытка
		ЛабораторныйАнализ.Записать(РежимЗаписиДокумента.Проведение);
		Результат = ЛабораторныйАнализ.Ссылка;
	Исключение
		ТекстСообщения = НСтр("ru = 'Не удалось записать композитный лаборатоный анализ'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЛабораторныйАнализЕдиничный);
		Результат = Документы.гкс_ЛабораторныйАнализ.ПустаяСсылка();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Данные.Добавление'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Документы.гкс_ЛабораторныйАнализ, ,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;	
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьТаблицуОписаний()
	
	ДобавитьСтрокуВТаблицуОписаний("ДокументРегистрации" , "ДокументРегистрации",
		"Документ.гкс_РегистрацияНаПЛК.Форма.ФормаДокумента");
	
	ДобавитьСтрокуВТаблицуОписаний("НомерРегистрации" , "ДокументРегистрации",
		"Документ.гкс_РегистрацияНаПЛК.Форма.ФормаДокумента");
	
	ДобавитьСтрокуВТаблицуОписаний("РеестрНакладных" , "РеестрНакладных",
		"Документ.гкс_РеестрНакладныхЗПП3.Форма.ФормаДокумента");
	
	ДобавитьСтрокуВТаблицуОписаний("РеестрНакладныхНомер" , "РеестрНакладных",
		"Документ.гкс_РеестрНакладныхЗПП3.Форма.ФормаДокумента");
	
	ДобавитьСтрокуВТаблицуОписаний("ЛабораторныйАнализЕдиничный" , "ЛабораторныйАнализЕдиничный",
		"Документ.гкс_ЛабораторныйАнализ.Форма.ФормаДокумента");
	
	ДобавитьСтрокуВТаблицуОписаний("ЛабораторныйАнализКомпозит" , "ЛабораторныйАнализКомпозит",
		"Документ.гкс_ЛабораторныйАнализ.Форма.ФормаДокумента");

КонецПроцедуры
	
&НаСервере
Процедура ДобавитьСтрокуВТаблицуОписаний(ИмяПоля, ИсточникЗначения, ИмяФормы)
	
	СтрокаОписания = ТаблицаОписания.Добавить();
	СтрокаОписания.ИмяПоля = ИмяПоля;
	СтрокаОписания.ИсточникЗначения = ИсточникЗначения;
	СтрокаОписания.ИмяФормы = ИмяФормы;
	
КонецПроцедуры	

#КонецОбласти
