#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем Объект;
Перем ОбъектПоСобытию;
Перем СообщенияПолучателей;
Перем ВремяНачала;
Перем ТипКонтракта;
Перем КоличествоСообщений;
Перем Событие;
Перем Получатели;
Перем МенеджерОбработки;
//@skip-warning
Перем ИсходящиеСообщения;
Перем ЭтоОбъектСсылочногоТипа;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура Инициализировать(Источник) Экспорт

	СообщенияПолучателей = Новый Соответствие;
	ВремяНачала = 0;
	Событие = "ЗаписьОбъекта"; // Событие по умолчанию
	Получатели = Новый Массив;
	
	Объект = Источник;
	ЭтоОбъектСсылочногоТипа = гкс_ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(Источник.Метаданные());	
	Если гкс_ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Источник)) Тогда
		Объект = Источник.ПолучитьОбъект();
	КонецЕсли;	
	
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	Если НЕ ДополнительныеСвойства.Свойство("ДанныеСинхронизацииRMQ") Тогда		
		МенеджерОбработки.ИнициализироватьСвойстваОбъекта(Объект, ДополнительныеСвойства);		
	КонецЕсли;
	
	ТипКонтракта = ТипКонтракта(Объект.Метаданные().ПолноеИмя());	
		
КонецПроцедуры

Процедура УстановитьСобытие(ИмяСобытия) Экспорт
	
	Событие = ИмяСобытия;
	УстановитьОбъектПоСобытию();
	
КонецПроцедуры

Процедура СформироватьСообщенияПоСобытиюОбъекта() Экспорт
	
	Если ПропуститьОтправкуВRMQ() Тогда		
		Возврат;		
	КонецЕсли;

	НачатьЗамер();	
	УстановитьПолучателейПоСобытиюОбъекта();
	
	Если Получатели.Количество() = 0 Тогда			
		Возврат;	
	КонецЕсли;
	
	Если ОбъектПоСобытию = Неопределено Тогда		
		УстановитьОбъектПоСобытию();
	Конецесли;
	
	СформироватьСообщения();	
	ЗакончитьЗамер();
		
КонецПроцедуры

Процедура ЗаписатьСообщенияВИсходящие() Экспорт
	
	Для Каждого Получатель Из Получатели Цикл
		
		Сообщение = СообщенияПолучателей.Получить(Получатель.КлючФормата);
		
		Если НЕ ЗначениеЗаполнено(Сообщение) Тогда			
			Продолжить;	
		КонецЕсли;
		
		СвойстваСообщения = СформироватьСвойстваСообщения(Получатель);
		ИсходящиеСообщения.Добавить(ЗаписатьСообщениеВИсходящие(Сообщение, 
		                                                        СвойстваСообщения, 
																Получатель));  

	КонецЦикла;
		
КонецПроцедуры

Функция ПолучитьИсходящиеСообщения() Экспорт
	
	Возврат ИсходящиеСообщения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция ТипКонтракта(ТипМетаданных)
	Возврат МенеджерОбработки.ТипСообщения(ТипМетаданных);
КонецФункции

Процедура УстановитьПолучателейПоСобытиюОбъекта()
	Получатели = МенеджерОбработки.ПолучателиСообщенияПоСобытиюОбъекта(Событие, Объект);
КонецПроцедуры

Процедура УстановитьОбъектПоСобытию()
	
	Если Объект = Неопределено Тогда	
		ОбъектПоСобытию = Неопределено;
		Возврат;		
	КонецЕсли;
	
	Если ЭтоОбъектСсылочногоТипа И (Событие = "УдалениеОбъекта" ИЛИ Объект.ПометкаУдаления) Тогда		
		ОбъектПоСобытию = Новый УдалениеОбъекта(Объект.Ссылка);
		Возврат;		
	КонецЕсли;
	
	ОбъектПоСобытию = Объект;
		
КонецПроцедуры

#КонецОбласти

#Область ФормированиеСообщенийRMQ

Функция ЗаписатьСообщениеВИсходящие(Сообщение, СвойстваСообщения, Получатель)
	Возврат МенеджерОбработки.ЗаписатьСообщениеВИсходящие(Сообщение, СвойстваСообщения, Получатель);
КонецФункции

Процедура СформироватьСообщения()
			
	Для Каждого Получатель Из Получатели Цикл
			
		Если НЕ СообщенияПолучателей.Получить(Получатель.КлючФормата) = Неопределено Тогда		
			Продолжить;			
		КонецЕсли;
		
		Сообщение = МенеджерОбработки.СформироватьСообщения(ОбъектПоСобытию, Получатель);
		
		Если ЗначениеЗаполнено(Сообщение) Тогда			
			СообщенияПолучателей.Вставить(Получатель.КлючФормата, Сообщение);			
		КонецЕсли;
		
	КонецЦикла;
	
	КоличествоСообщений = СообщенияПолучателей.Количество();
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеСвойствСообщения

Функция СформироватьСвойстваСообщения(Получатель)
	Возврат МенеджерОбработки.СформироватьСвойстваСообщения(Получатель);
КонецФункции

#КонецОбласти

#Область ЗамерыПроизводительности

Процедура НачатьЗамер()
	
	МенеджерЗамеров = гкс_ОбщегоНазначения.ОбщийМодуль("гкс_ОценкаПроизводительностиRMQ");
	// Начало. Замер производительности. 
	ВремяНачала = МенеджерЗамеров.НачатьЗамерВремени();

КонецПроцедуры

Процедура ЗакончитьЗамер()
	
	// Конец. Замер производительности.
	Если НЕ ЗначениеЗаполнено(ВремяНачала) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗамеров = гкс_ОбщегоНазначения.ОбщийМодуль("гкс_ОценкаПроизводительностиRMQ");
	МенеджерЗамеров.ЗакончитьЗамерВремениФормированияСообщений(ВремяНачала, Событие, ТипКонтракта, КоличествоСообщений);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкиЗаполнения

Функция ПропуститьОтправкуВRMQ() 
	
	Если Объект.ДополнительныеСвойства.Свойство("ПропуститьОтправкуВRMQ") Тогда				
		Возврат Истина;				
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область Инициализация

МенеджерОбработки = Обработки.гкс_ФормировательСообщенийRMQ;
ИсходящиеСообщения = Новый Массив;
ЭтоОбъектСсылочногоТипа = Истина;

#КонецОбласти

#Иначе	
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли
