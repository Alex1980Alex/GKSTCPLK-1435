#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение Тогда

#Область ОписаниеПеременных

Перем Клиент;
Перем мИнициализирован;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Отправляет сообщение в exchange
//
// Параметры:
//  Данные				 - Строка	 - Тело сообщения
//  КлючМаршрутизации	 - Строка	 - Ключ маршрутизации (см. руководство RMQ)
//  ВремяЖизни			 - Строка	 - Время жизни сообщения в миллисекундах
//  Персистентное		 - Булево	 - Сбрасывать сообщение на диск
//
Процедура ОтправитьСообщение(Знач Данные, Знач КлючМаршрутизации = "", ВремяЖизни = 0, Персистентное = Истина) Экспорт
	Если Не мИнициализирован Тогда
		Инициализация();
	КонецЕсли;
	
	Клиент.ОтправитьСообщение(ИмяТочкиОбмена, Данные, КлючМаршрутизации, ВремяЖизни, Персистентное);
КонецПроцедуры // ОтправитьСообщение()

// Установить свойства сообщения согласно протоколу AMQP
//
// Параметры:
//  СтруктураСвойств - Структура - структура со значениями свойств, которые надо установить.
//                     Названия ключей соответствия доступны в методе ОчередьСообщений.ВозможныеСвойстваСообщения
//
Процедура УстановитьСвойстваСообщения(Знач СтруктураСвойств) Экспорт
	Если Не мИнициализирован Тогда
		Инициализация();
	КонецЕсли;

	Клиент.УстановитьСвойстваСообщения(СтруктураСвойств);
КонецПроцедуры

// Сброс всех ранее установленных свойств сообщения
//
Процедура СброситьЗначенияСвойств() Экспорт
	Если Не мИнициализирован Тогда
		Инициализация();
	КонецЕсли;
	
	Клиент.СброситьЗначенияСвойств();
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Замена конструктора
//
Процедура Инициализация() Экспорт
	Клиент = ОчередьСообщений.ПолучитьЭкземплярКомпоненты(ЭтотОбъект.КлючСоединения, ЧастотаПульса);
	Если ЗначениеЗаполнено(ИмяТочкиОбмена) Тогда // Есть кейсы когда, используется точка обмена по умолчанию - "".
		Клиент.ОбъявитьТочкуОбмена(ИмяТочкиОбмена, ТипТочкиОбмена, Истина);
	КонецЕсли;
	
	мИнициализирован = Истина;
КонецПроцедуры

// Возвращает клиент очереди сообщений для тонкой настройки канала.
//
// Возвращаемое значение:
//   ОбработкаОбъект.КлиентОчередиСообщений
//
Функция ИспользуемыйКлиент() Экспорт

	Возврат Клиент;

КонецФункции // ИспользуемыйКлиент()

#КонецОбласти

#Область Инициализация

мИнициализирован = Ложь;

#КонецОбласти

#Иначе	
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли