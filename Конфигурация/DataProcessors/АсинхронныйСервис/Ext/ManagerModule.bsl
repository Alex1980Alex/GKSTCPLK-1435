
// Формирует строку с именем точки обмена конкретного сервиса.
//
Функция ИмяТочкиОбмена(Знач ИмяСервиса) Экспорт

	Возврат "rpc." + ИмяСервиса;

КонецФункции // ИмяТочкиОбмена()

// Обертка для единообразного чтения/записи сериализованных объектов
//
// Параметры:
//  СтруктураСообщения - тип Структура с полями сообщения
//
// Возвращаемое значение:
//   Строка - сериализованное сообщение
//
Функция ЗаписатьСообщениеОбмена(Знач СтруктураСообщения) Экспорт

	Запись = СоздатьОбъектЗаписи();
	Запись.УстановитьСтроку();
	ВыполнитьЗапись(Запись, Новый ФиксированнаяСтруктура(СтруктураСообщения));
	ДанныеОтвета = Запись.Закрыть();
	
	Возврат ДанныеОтвета;

КонецФункции // ЗаписатьСообщениеОбмена()

// Обертка для единообразного чтения/записи сериализованных объектов
//
// Параметры:
//  Данные		 - Строка. Сериализованное сообщение
//
// Возвращаемое значение:
//   ФиксированнаяСтруктура с полями ответа
//
Функция ПрочитатьСообщениеОбмена(Знач Данные) Экспорт
	
	Чтение = СоздатьОбъектЧтения();
	Чтение.УстановитьСтроку(Данные);
	ОбъектДанных = ВыполнитьЧтение(Чтение);
	Чтение.Закрыть();
	
	Возврат ОбъектДанных;

КонецФункции // ПрочитатьСообщениеОбмена()


Функция СоздатьОбъектЗаписи()
	
	// или JSON
	Возврат Новый ЗаписьXML;
	
КонецФункции

Процедура ВыполнитьЗапись(Знач Сериализатор, Знач Данные)
	
	// или JSON
	СериализаторXDTO.ЗаписатьXML(Сериализатор, Данные);
	
КонецПроцедуры

Функция СоздатьОбъектЧтения()
	
	// или JSON
	Возврат Новый ЧтениеXML;
	
КонецФункции

Функция ВыполнитьЧтение(Знач Десериализатор)
	
	// или JSON
	Возврат СериализаторXDTO.ПрочитатьXML(Десериализатор);
	
КонецФункции





