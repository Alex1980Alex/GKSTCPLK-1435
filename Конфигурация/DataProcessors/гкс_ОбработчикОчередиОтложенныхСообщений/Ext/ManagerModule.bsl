#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПараметыМетодаОбработки() Экспорт
	
	Ключ = "Обработка очереди отложенного формирования"; // Не локализуется
	ИмяМетода = "гкс_ОчередьСообщенийRMQВызовСервера.ОбработатьОчередьОтложенногоФормирования"; 
	
	Параметры = Новый Структура;	
	Параметры.Вставить("Ключ", Ключ);
	Параметры.Вставить("ИмяМетода", ИмяМетода);
	Параметры.Вставить("Наименование", Ключ);
	              
	Возврат Параметры;
	
КонецФункции

Процедура ОбработатьЭлементОчереди(ЭлементОчереди) Экспорт
	
	Если НЕ ОтметитьПринятиеВОбработкуЭлемента(ЭлементОчереди) Тогда
		Возврат;	
	КонецЕсли;
	
	Если СформироватьСообщенияИОтметитьОбработкуЭлементаОчереди(ЭлементОчереди) Тогда
		ОчиститьПроблемыОбработкиЭлементаОчереди(ЭлементОчереди);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Функция СформироватьГруппыОбработки(Выборка) Экспорт
	
	ДанныеОчереди = Новый Структура;
	ДанныеОчереди.Вставить("Очередь", Выборка);
	ДанныеОчереди.Вставить("ИмяОчереди", "ОчередьОтложенногоФормированияИсходящихСообщений");
	ДанныеОчереди.Вставить("КоличествоПотоков", КоличествоПотоковВыполнения());
	
	Возврат гкс_АлгоритмыИСтруктурыОбработкиИАС.СформироватьГруппыОбработкиОбъектовИзОчереди(ДанныеОчереди);
		
КонецФункции

#Область НастройкиФормированияСообщений

Функция КоличествоПотоковВыполнения() Экспорт
	
	ИмяНастройки = "МаксимальноеКоличествоПотоковОбработкиОчередиОтложенногоФормирования";
	КоличествоПотоков = гкс_ОчередьСообщенийRMQПовтИсп.НастройкаИнтеграционногоАдаптера(ИмяНастройки);	
	Если НЕ ЗначениеЗаполнено(КоличествоПотоков) Тогда		
		КоличествоПотоков = 5;		
	КонецЕсли;
	
	Возврат КоличествоПотоков;
	
КонецФункции

Функция ТаймаутОбработки() Экспорт
	
	ИмяНастройки = "ТаймаутОбработкиПорцииОчередиОтложенногоФормирования";
	ТаймаутОбработки = гкс_ОчередьСообщенийRMQПовтИсп.НастройкаИнтеграционногоАдаптера(ИмяНастройки);	
	Если НЕ ЗначениеЗаполнено(ТаймаутОбработки) Тогда		
		ТаймаутОбработки = 300;		
	КонецЕсли;
	
	Возврат ТаймаутОбработки;

КонецФункции

#КонецОбласти

Функция ОтметитьПринятиеВОбработкуЭлемента(ЭлементОчереди)
	
	ФормироватьИсходящееСообщение = Ложь;
	
	НачатьТранзакцию();
	Попытка		
		МенеджерОчереди = Справочники.гкс_ОчередьОтложенногоФормированияИсходящихСообщений;
		ФормироватьИсходящееСообщение = МенеджерОчереди.ОтметитьПринятиеВОбработкуЭлемента(ЭлементОчереди); 
		
		ЗафиксироватьТранзакцию();	
	Исключение
		ОтменитьТранзакцию();
		ЗафиксироватьПроблемуОбработкиЭлементаОчереди(ЭлементОчереди, ОписаниеОшибки());
		
	КонецПопытки;
	
	Возврат ФормироватьИсходящееСообщение;
		
КонецФункции

Функция СформироватьСообщенияИОтметитьОбработкуЭлементаОчереди(ЭлементОчереди)
	
	Сформировано = Истина;
	
	НачатьТранзакцию();
	Попытка
		МенеджерОчереди = Справочники.гкс_ОчередьОтложенногоФормированияИсходящихСообщений;
		Результат = МенеджерОчереди.СформироватьИсходящееСообщенияДляЭлемента(ЭлементОчереди);		
		МенеджерОчереди.ОтметитьОбработкуЭлемента(ЭлементОчереди, Результат);
			
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ЗафиксироватьПроблемуОбработкиЭлементаОчереди(ЭлементОчереди, ОписаниеОшибки());
		Сформировано = Ложь;
	КонецПопытки;
	
	Возврат Сформировано;
	
КонецФункции

Процедура ЗафиксироватьПроблемуОбработкиЭлементаОчереди(ЭлементОчереди, Текст)

	СтруктураПроблемы = Новый Структура;
	СтруктураПроблемы.Вставить("Текст", Текст);
	СтруктураПроблемы.Вставить("ТипПроблемы", 
	                           Справочники.гкс_ТипыПроблемОбменаДанными.ОшибкаОтложенногоФормирования);
	СтруктураПроблемы.Вставить("ПроблемныйОбъект", ЭлементОчереди);
	
	гкс_ОчередьСообщенийRMQВызовСервера.ЗафиксироватьПроблемуОбработкиОбъекта(СтруктураПроблемы);
	
КонецПроцедуры

Процедура ОчиститьПроблемыОбработкиЭлементаОчереди(ЭлементОчереди)
	
	Если гкс_ОчередьСообщенийRMQВызовСервера.ЕстьПроблемыПоОбъекту(ЭлементОчереди) Тогда
		гкс_ОчередьСообщенийRMQВызовСервера.ОчиститьПроблемыОбъекта(ЭлементОчереди);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли