#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем ВремяНачала;
Перем Сообщение;
Перем ЕстьОшибкаОбработки;
Перем ПродолжитьОбработкуСообщения;
Перем ТекстОшибки;
Перем ТипПроблемы;
Перем ПредставлениеОбъекта;
Перем Результат;
Перем СодержимоеСообщения;
Перем НомерСообщения;
Перем МенеджерЗагрузки;
Перем МенеджерСообщений;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура УстановитьСообщение(СсылкаНаСообщение) Экспорт
	
	Сообщение = СсылкаНаСообщение;
	ИменаРеквизитов = "КорневойИдентификаторСообщения, Хоп, Содержимое, Подписка";
	Реквизиты = гкс_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаСообщение, ИменаРеквизитов);
	
	СодержимоеСообщения = Реквизиты.Содержимое.Получить();	
	
	Если ЗначениеЗаполнено(Реквизиты.КорневойИдентификаторСообщения) Тогда		
		Результат.Вставить("НомерСообщения", Реквизиты.КорневойИдентификаторСообщения);		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Реквизиты.Хоп) Тогда		
		Результат.Вставить("Хоп", Реквизиты.Хоп);		
	КонецЕсли;
	
	ДобавитьИсключаемыеПолучателиПоНеобходимости(Реквизиты.Подписка);
	
КонецПроцедуры

Процедура Инициализировать() Экспорт
	
	ВремяНачала = Неопределено;
	Сообщение = Неопределено;
	ПродолжитьОбработкуСообщения = Истина;
	ЕстьОшибкаОбработки = Ложь;
	Результат = Новый Структура;
	ПредставлениеОбъекта = "";
	ТекстОшибки = "";
	СодержимоеСообщения = Неопределено;
	
КонецПроцедуры

Процедура ПринятьСообщениеВОбработку() Экспорт

	// 1) Блокировка и перевод сообщения в статус "в обработке". Удаление из очереди.	
	НачатьТранзакцию();
	
	Попытка
		
		МенеджерСообщений.ЗаблокироватьСообщение(Сообщение);			
		
		ДатаПринятияВОбработку = гкс_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сообщение, "ДатаПринятияВОбработку");		
		Если ЗначениеЗаполнено(ДатаПринятияВОбработку) Тогда
			
			ОтменитьТранзакцию();
			ПродолжитьОбработкуСообщения = Ложь;			
			Возврат;
			
		КонецЕсли;
		
		// Отметка о принятии в обработку - это заполнение реквизита "ДатаПринятияВОбработку"
		// Реквизит играет роль флага, который защищает сообщение от паралельной обработки другим потоком
		МенеджерСообщений.ОтметитьПринятиеВОбработку(Сообщение);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();		
		ТекстОшибки = ОписаниеОшибки();
		
		ЗафиксироватьПроблемуОбработки();
					
		Возврат;
				
	КонецПопытки;

КонецПроцедуры

Процедура ПрочитатьСообщение()
	МенеджерЗагрузки.ПрочитатьСообщение(СодержимоеСообщения, Результат);
КонецПроцедуры

Процедура ОтметитьОбработку()
	МенеджерСообщений.ОтметитьОбработку(Сообщение, Результат);
КонецПроцедуры

Процедура ОбработатьСообщение() Экспорт
	
	Если НЕ ПродолжитьОбработкуСообщения ИЛИ НЕ ОбработкаВозможна() Тогда		
		Возврат;
	КонецЕсли;
	
	НачатьЗамер();
	
	// Переводим систему из одного консистентного состяния в другое
	// Не допускаем "мусора" в случае возникновения после загрузки сообщения не прошедших валидацию объектов
	НачатьТранзакцию(); 	
	Попытка				
		
		ПрочитатьСообщение();
		ОтметитьОбработку();		
		ЗафиксироватьТранзакцию();
		
	Исключение		
		Пока ТранзакцияАктивна() Цикл			
			ОтменитьТранзакцию();			
		КонецЦикла;
		
		ТекстОшибки = ОписаниеОшибки();	
		ЗафиксироватьПроблемуОбработки();

	КонецПопытки;
	
	ЗакончитьЗамер();
	
КонецПроцедуры

Функция РезультатЗагрузки() Экспорт
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбработкаВозможна() 
	
	Если СодержимоеСообщения = Неопределено Тогда
		
		ПродолжитьОбработкуСообщения = Ложь;
		
		ТекстОшибки = НСтр("ru='Не заполнено содержимое сообщения. Обработка невозможна'");
		ТипПроблемы = Справочники.гкс_ТипыПроблемОбменаДанными.Неструктурированная;
		
		ЗафиксироватьПроблемуОбработки();
		
		Возврат Ложь;
		
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

// Добавить в структуру результата исключаемыых получателей
// 
// Параметры:
//  Подписка - СправочникСсылка.ПодпискиНаОчередиСообщений - 
//
Процедура ДобавитьИсключаемыеПолучателиПоНеобходимости(Подписка)
	
	Если НЕ ЗначениеЗаполнено(Подписка) Тогда
		Возврат;	
	КонецЕсли;
	
	ИсключаемыеПолучатели = гкс_ОчередьСообщенийRMQВызовСервера.ИсключаемыеПолучателиПоПодписке(Подписка);
	Если ЗначениеЗаполнено(ИсключаемыеПолучатели) Тогда
		Результат.Вставить("ИсключаемыеПолучатели", ИсключаемыеПолучатели);
	КонецЕсли;
	
КонецПроцедуры
		
#Область ПроблемыОбработкиСообщений

Процедура ЗафиксироватьПроблемуОбработки()
	
	ПродолжитьОбработкуСообщения = Ложь;
	ЕстьОшибкаОбработки = Истина;

	МенеджерЗагрузки.ЗаполнитьПараметрыОшибки(Результат, 
	                                          ТипПроблемы, 
											  ТекстОшибки, 
											  ПредставлениеОбъекта);
	
	Если НЕ ЗначениеЗаполнено(ТекстОшибки) Тогда		
		ТекстОшибки = "Неклассифицируемая ошибка загрузки объекта"; // Не локализуется		
	КонецЕсли;
	
	СтруктураПроблемы = РегистрыСведений.гкс_ПроблемыОбменаДанными.СтруктураЗаписи();
	СтруктураПроблемы.Текст = ТекстОшибки;
	СтруктураПроблемы.ПроблемныйОбъект = Сообщение;
	СтруктураПроблемы.ТипПроблемы = ТипПроблемы;
	СтруктураПроблемы.ПредставлениеОбъекта = ПредставлениеОбъекта;
	
	МенеджерСообщений.УстановитьПроблемуОбработки(СтруктураПроблемы);
	
КонецПроцедуры

#КонецОбласти

#Область ЗамерыПроизводительности

Процедура НачатьЗамер()
	
	МенеджерЗамеров = гкс_ОбщегоНазначения.ОбщийМодуль("гкс_ОценкаПроизводительностиRMQ");
	// Начало. Замер производительности. 
	ВремяНачала = МенеджерЗамеров.НачатьЗамерВремени();

КонецПроцедуры

Процедура ЗакончитьЗамер()
	
	// Конец. Замер производительности. 
	Если ЗначениеЗаполнено(ВремяНачала) Тогда
		
		МенеджерЗамеров = гкс_ОбщегоНазначения.ОбщийМодуль("гкс_ОценкаПроизводительностиRMQ");

		ТипКонтракта = гкс_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сообщение, "ТипКонтракта");
		МенеджерЗамеров.ЗакончитьЗамерВремениЗагрузкиСообщений(ВремяНачала, Неопределено, ТипКонтракта);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Инициализация

МенеджерСообщений = Справочники.гкс_ВходящиеСообщенияRMQ;
МенеджерЗагрузки = Обработки.гкс_ЗагрузчикСообщенийRMQ;

#КонецОбласти

#Иначе	
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли

