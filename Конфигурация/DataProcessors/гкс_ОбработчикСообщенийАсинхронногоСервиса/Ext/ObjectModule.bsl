#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

Перем Запрос;
Перем ТекстОшибки;
Перем ПространствоИменXDTO;
Перем Результат;
Перем МенеджерЗапроса;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция Результат() Экспорт
			
	Возврат Результат;

КонецФункции

Процедура Инициализировать(Параметры) Экспорт
	
	Параметры.Свойство("Запрос", Запрос);
	Параметры.Свойство("ПространствоИменXDTO", ПространствоИменXDTO);
	
	МенеджерЗапроса = гкс_ОбщегоНазначения.ОбщийМодуль(ИмяМодуляОбработчика());

КонецПроцедуры

Процедура Обработать() Экспорт
	
	Если НЕ ПроверитьЗапрос() Тогда
		ЗафиксироватьОшибкуОбработки("Ошибка при проверке параметров запроса");		
		Возврат;	
	КонецЕсли;
	
	СтруктураЗапрос = Новый Структура;
	СтруктураЗапрос.Вставить("Запрос", Запрос);
	СтруктураЗапрос.Вставить("ПространствоИмен", ПространствоИменXDTO);
	
	Попытка
		Результат = МенеджерЗапроса.ОбработатьЗапрос(СтруктураЗапрос);
	Исключение
		ЗафиксироватьОшибкуОбработки("Ошибка при обработке запроса", ОписаниеОшибки());		
	КонецПопытки;
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьЗапрос() 
	
	Если НЕ ЗначениеЗаполнено(Запрос) Тогда
		ТекстОшибки = НСтр("ru='Пустой запрос'");
		Возврат Ложь;
	КонецЕсли;

	ДопустимыеТипы = Новый Массив;
	ДопустимыеТипы.Добавить(Тип("Строка"));
	ТипСтрока = Новый ОписаниеТипов(ДопустимыеТипы);	 
	Если НЕ ТипСтрока.СодержитТип(ТипЗнч(Запрос)) Тогда	
		ТекстОшибки = НСтр("ru='Недопустимый тип'");
		Возврат Ложь;	
	КонецЕсли;
	
	Если ЭтоЗапросВXDTO() Тогда
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(Запрос);
		Попытка			
			ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
			Если НЕ ОбъектXDTO.Тип().URIПространстваИмен = ПространствоИменXDTO Тогда
				ВызватьИсключение СтрШаблон(НСтр("ru='Запрос не принадлежит пространству имен %1'"), 
				                            ПространствоИменXDTO);	
			КонецЕсли;
			
		Исключение
			ТекстОшибки = ОписаниеОшибки();
			Возврат Ложь;
			
		КонецПопытки;
		
	КонецЕсли;
	 			
	Возврат Истина;
	
КонецФункции

Процедура ЗафиксироватьОшибкуОбработки(Тема, Текст = "")
	
	Если НЕ ЗначениеЗаполнено(Текст) Тогда
		Текст = ТекстОшибки;
	КонецЕсли;
	
	Результат = МенеджерЗапроса.СформироватьОшибку(Тема, Текст);
	
КонецПроцедуры

Функция ИмяМодуляОбработчика()
	
	ИмяМодуля = "гкс_АсинхронныеСервисы";
	гкс_АсинхронныеСервисыПереопределяемый.ПриОпределенииИмениМодуляОбрабтчика(ИмяМодуля, Запрос, ПространствоИменXDTO);
	
	Возврат ИмяМодуля;
	
КонецФункции

Функция ЭтоЗапросВXDTO() 
	
	Возврат ЗначениеЗаполнено(ПространствоИменXDTO);
	
КонецФункции
	
#КонецОбласти

#Область Инициализация

ТекстОшибки = "";
ПространствоИменXDTO = "";

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли          