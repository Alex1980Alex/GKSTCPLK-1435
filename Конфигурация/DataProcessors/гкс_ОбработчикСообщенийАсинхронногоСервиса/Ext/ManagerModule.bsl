#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьОбработчик(Параметры) Экспорт
		
	Обработчик = Обработки.гкс_ОбработчикСообщенийАсинхронногоСервиса.Создать();
	Обработчик.Инициализировать(Параметры);
	
	Возврат Обработчик;
	
КонецФункции
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет тип объекта XDTO
//
// Параметры:
//   ОбъектXDTO - ОбъектXDTO - проверяемый объект
//   Тип - Строка - имя типа XDTO
// Возвращаемое значение:
//   Булево - Истина, если объект является объектом указанного типа
//
Функция ПроверитьТип(ОбъектXDTO, Тип, ПространствоИмен) Экспорт
	
	Возврат (ТипЗнч(ОбъектXDTO) = Тип("ОбъектXDTO"))
		И (ОбъектXDTO.Тип() = ФабрикаXDTO.Тип(ПространствоИмен, Тип));
	
КонецФункции	

// Создает XDTO объект указанного типа из пространства имен "http://www.1c.ru/dm"
// 
// Параметры:
//   ТипОбъекта - Строка - имя типа XDTO
// Возвращаемое значение:
//   ОбъектXDTO - созданный объект указанного типа
//
Функция СоздатьОбъект(ТипОбъекта, ПространствоИмен) Экспорт
	
	Возврат ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИмен, ТипОбъекта));
	
КонецФункции

Функция СериализоватьИзXDTO(Объект) Экспорт
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку("UTF-8");
	Запись.ЗаписатьОбъявлениеXML();

	ФабрикаXDTO.ЗаписатьXML(Запись, Объект, , , , НазначениеТипаXML.Явное);
	
	Возврат Запись.Закрыть();
	
КонецФункции

#КонецОбласти

#КонецЕсли
