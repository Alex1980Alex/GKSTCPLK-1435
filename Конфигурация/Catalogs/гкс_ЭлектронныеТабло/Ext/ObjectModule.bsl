#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция НастройкиЗаголовка() Экспорт
	
	НастройкиИзОбъекта = НастройкаТабло.Выгрузить(Новый Структура("ЭтоЗаголовок", Истина));
	Если НЕ ЗначениеЗаполнено(НастройкиИзОбъекта) Тогда
		Возврат Неопределено;	
	КонецЕсли;
	
	СтрокаНастроек = НастройкиИзОбъекта[0];
	
	СтруктураНастроекШаблон =  СтруктураНастроекШаблон();
	
	СтруктураНастроекШаблон["Height"] = СтрокаНастроек.ВысотаСтроки;
	СтруктураНастроекШаблон["Width"] = СтрокаНастроек.Ширина;
	СтруктураНастроекШаблон["CoordX"] = СтрокаНастроек.КоординатаХ;
	СтруктураНастроекШаблон["CoordY"] = СтрокаНастроек.КоординатаУ;
	СтруктураНастроекШаблон["Font"] = СтрокаНастроек.Шрифт;
	СтруктураНастроекШаблон["Size"] = СтрокаНастроек.РазмерШрифта;
	СтруктураНастроекШаблон["Alignment"] = СтрокаНастроек.Выравнивание;

	Возврат СтруктураНастроекШаблон;
	
КонецФункции

Функция НастройкиЗаполненияСтрок() Экспорт
	
	НастройкиИзОбъекта = НастройкаТабло.Выгрузить(Новый Структура("ЭтоЗаголовок", Ложь));
	Если НЕ ЗначениеЗаполнено(НастройкиИзОбъекта) Тогда
		Возврат Неопределено;	
	КонецЕсли;
	
	НастройкиЗаполнения = Новый Массив;
	
	Для Каждого СтрокаНастроек Из НастройкиИзОбъекта Цикл 
		
		СтруктураНастроекШаблон =  СтруктураНастроекШаблон();
		
		СтруктураНастроекШаблон["Height"] = СтрокаНастроек.ВысотаСтроки;
		СтруктураНастроекШаблон["Width"] = СтрокаНастроек.Ширина;
		СтруктураНастроекШаблон["CoordX"] = СтрокаНастроек.КоординатаХ;
		СтруктураНастроекШаблон["CoordY"] = СтрокаНастроек.КоординатаУ;
		СтруктураНастроекШаблон["Font"] = СтрокаНастроек.Шрифт;
		СтруктураНастроекШаблон["Size"] = СтрокаНастроек.РазмерШрифта;
		СтруктураНастроекШаблон["Alignment"] = СтрокаНастроек.Выравнивание;
		
		НастройкиЗаполнения.Добавить(СтруктураНастроекШаблон);
		
	КонецЦикла;

	Возврат НастройкиЗаполнения;

КонецФункции

Функция	ПолучитьЗаголовокТабло(ФормироватьПринудительно = Ложь, ДополнительныеПараметры = Неопределено) Экспорт
	
	СборныйЗаголовок = Автозаголовок ИЛИ ФормироватьПринудительно;
	Если НЕ СборныйЗаголовок Тогда
		Возврат Заголовок;
	КонецЕсли;
	
	Настройки = гкс_ЭлектронныеТаблоВызовСервера.НастройкиЭлектронногоТабло(Ссылка);
	Заголовок = "";
	Если НЕ ЗначениеЗаполнено(Настройки) Тогда
		Возврат Заголовок;
	КонецЕсли;
	
	Возврат ПолучитьЗаголовокПоНастройкам(Настройки, ДополнительныеПараметры);
	
КонецФункции

Процедура ЗаполнитьТаблоТестовымиДанными() Экспорт
	
	ТестТабло.Очистить();
	
	НастройкиТабло = гкс_ЭлектронныеТаблоВызовСервера.НастройкиЭлектронногоТабло(Ссылка); 
	Если НЕ ЗначениеЗаполнено(НастройкаТабло) Тогда
		Возврат;	
	КонецЕсли;
	
	ВидТабло = НастройкиТабло.ВидТабло;
	ВидыТабло = Перечисления.гкс_ВидыЭлектронныхТабло; 
	
	Если ВидТабло = ВидыТабло.НеПрошедшиеРегистрацию ИЛИ ВидТабло = ВидыТабло.НазначениеНаВесы Тогда
		ТестовыеДанныеТаблоНеПрошедшиеРегистрациюИлиНаЗначениеНаВесы();	
	ИначеЕсли ВидТабло = ВидыТабло.ОжиданияПроб Тогда
		ТестовыеДанныеТаблоОжиданиеПроб();
	ИначеЕсли ВидТабло = ВидыТабло.НазначениеНаВыгрузку Тогда
		ТестовыеДанныеТаблоНазначениеНаВыгрузку();
	Иначе
		Возврат;
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТестовыеДанныеТабло

Процедура ТестовыеДанныеТаблоНеПрошедшиеРегистрациюИлиНаЗначениеНаВесы() 
	
	ПроизвольноеЧислоеИтератор = 5;
	Для i = 1 По КоличествоСтрокТабло Цикл
		
		НоваяСтрока = ТестТабло.Добавить();
		НоваяСтрока.СтрокаТабло = "" + "А" + i + i + i + "АА 12:" + Формат(ПроизвольноеЧислоеИтератор * i, "ЧЦ=2; ЧВН=");
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ТестовыеДанныеТаблоОжиданиеПроб() 
	
	Для i = 1 По КоличествоСтрокТабло Цикл
		
		НоваяСтрока = ТестТабло.Добавить();
		
		Если i <> КоличествоСтрокТабло Тогда
			ТекстЯма = "Яма №" + i;
		Иначе
			ТекстЯма = "Отклонено";
		КонецЕсли;	
		
		НоваяСтрока.СтрокаТабло = "" + "А" + i + i + i + "АА " + ТекстЯма;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ТестовыеДанныеТаблоНазначениеНаВыгрузку() 
	
	Для i = 1 По КоличествоСтрокТабло Цикл
		
		НоваяСтрока = ТестТабло.Добавить();
		НоваяСтрока.СтрокаТабло = "" + "А" + i + i + i + "АА";
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьЗаголовокПоНастройкам(Настройки, ДополнительныеПараметры = Неопределено)
		
	ВидТабло = Настройки.ВидТабло;
	
	Если ОтображатьВЗаголовкеНоменклатуру(ВидТабло)
		И ЕстьСвойствоВидЗерна(ДополнительныеПараметры) Тогда
		
		Заголовок =  ДополнительныеПараметры.ВидЗерна;
		
	ИначеЕсли ВидТабло = Перечисления.гкс_ВидыЭлектронныхТабло.НазначениеНаВыгрузку Тогда
		
		Заголовок = СтрШаблон("%1 %2", Настройки.ЯмаРазгрузки, Настройки.Номенклатура);
		
	Иначе				
		Заголовок = "";
	КонецЕсли;
	
	Возврат Заголовок;

КонецФункции 

Функция ОтображатьВЗаголовкеНоменклатуру(ВидТабло)
	
	ВидыЭлектронныхТабло = Перечисления.гкс_ВидыЭлектронныхТабло;
	
	ВидыТаблоДляОтображения = Новый Массив;
	ВидыТаблоДляОтображения.Добавить(ВидыЭлектронныхТабло.НеПрошедшиеРегистрацию);
	ВидыТаблоДляОтображения.Добавить(ВидыЭлектронныхТабло.НазначениеНаВесы);
	ВидыТаблоДляОтображения.Добавить(ВидыЭлектронныхТабло.НазначениеНаВыгрузку);
	
	Возврат ВидыТаблоДляОтображения.Найти(ВидТабло) <> Неопределено;
	
КонецФункции	

Функция ЕстьСвойствоВидЗерна(Параметры)
	
	ИмяСвойства = "ВидЗерна";
	
	Если ТипЗнч(Параметры) = Тип("Структура")
		И Параметры.Свойство(ИмяСвойства) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции	

Функция ПолучитьСтруктуруПараметровНазначениеНаВесы(Настройки)
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ВидПеревозки", Настройки.ВидПеревозки);
	СтруктураПараметров.Вставить("Номенклатура", Настройки.Номенклатура);
	СтруктураПараметров.Вставить("ТочкаМаршрута", Настройки.ТочкаМаршрута);

	СтруктураПараметров.Вставить("ДатаРезультата", ТекущаяДатаСеанса());
	
	СтруктураПараметров.Вставить("ТипВзвешивания", Перечисления.гкс_ТипыВзвешивания.Въезд);
	СтруктураПараметров.Вставить("ТипРегистрации", Перечисления.гкс_ТипРегистрации.Приемка);
		
	Возврат СтруктураПараметров;
	
КонецФункции

Функция СтруктураНастроекШаблон()
	
	СтруктураНастроекШаблон = Новый Структура;
	
	СтруктураНастроекШаблон.Вставить("Height");
	СтруктураНастроекШаблон.Вставить("Width");
	СтруктураНастроекШаблон.Вставить("CoordX");
	СтруктураНастроекШаблон.Вставить("CoordY");
	СтруктураНастроекШаблон.Вставить("Font");
	СтруктураНастроекШаблон.Вставить("Size");
	СтруктураНастроекШаблон.Вставить("Alignment");
	
	Возврат СтруктураНастроекШаблон;
		
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли
