#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Расписание = ТекущийОбъект.РасписаниеЗадания.Получить();
	Если Расписание = Неопределено Тогда
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	УстановитьРасписаниеЗадания(Расписание);
	Элементы.РасписаниеЗадания.Заголовок = Строка(Расписание);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Расписание = ПолучитьРасписание(АдресРасписанияЗадания);
	ТекущийОбъект.РасписаниеЗадания = Новый ХранилищеЗначения(Расписание);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСтатусЗадания();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РасписаниеЗадания(Команда)
	
	ТекущееРасписание = ПолучитьРасписание(АдресРасписанияЗадания);
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(ТекущееРасписание);
	
	ОбработчикУстановкиРасписания = Новый ОписаниеОповещения("ОбработчикУстановкиРасписания", ЭтаФорма);
	ДиалогРасписания.Показать(ОбработчикУстановкиРасписания);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбработчикПриИзменении(Элемент)
	ОбработчикПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЗаданияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Текст = ПолучитьОписаниеОшибки(Объект.ИдентификаторЗадания);
	ПараметрФормы = Новый Структура;
	ПараметрФормы.Вставить("ТекстОшибки", Текст);
	ОткрытьФорму("Обработка.КлиентОчередиСообщений.Форма.ТекстОшибки", ПараметрФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьРасписание(Знач Адрес)
	
	Если ЭтоАдресВременногоХранилища(Адрес) Тогда
		Расписание = ПолучитьИзВременногоХранилища(Адрес);
	Иначе
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Возврат Расписание;
	
КонецФункции

&НаСервере
Процедура УстановитьРасписаниеЗадания(Знач Расписание)
	
	Если ЭтоАдресВременногоХранилища(АдресРасписанияЗадания) Тогда
		ПоместитьВоВременноеХранилище(Расписание, АдресРасписанияЗадания);
	Иначе
		АдресРасписанияЗадания = ПоместитьВоВременноеХранилище(Расписание, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикУстановкиРасписания(Знач Расписание, Знач ПараметрыОповещения) Экспорт
	
	Если Расписание <> Неопределено Тогда
		УстановитьРасписаниеЗадания(Расписание);
		Элементы.РасписаниеЗадания.Заголовок = Строка(Расписание);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусЗадания()
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторЗадания) Тогда
		Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Объект.ИдентификаторЗадания);
		Элементы.СостояниеЗадания.Гиперссылка = Ложь;
		Если Задание = Неопределено Тогда
			СостояниеЗадания = "Не найдено";
		Иначе
			
			Фоновое = Задание.ПоследнееЗадание;
			Если Фоновое <> Неопределено Тогда
				СостояниеЗадания = Фоновое.Состояние;
				Если Фоновое.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
					Элементы.СостояниеЗадания.Гиперссылка = Истина;
				КонецЕсли;
			Иначе
				СостояниеЗадания = "Не выполнялось";
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработчикПриИзмененииНаСервере()
	Обработчик = Объект.Обработчик;
	Если Не ЗначениеЗаполнено(Объект.ИмяОчереди) Тогда
		Объект.ИмяОчереди = Обработчик.ИмяСервиса;
	КонецЕсли;
	Если ЗначениеЗаполнено(Обработчик.ИмяСервиса) Тогда
		Объект.Асинхронно = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеОшибки(Знач Идентификатор)
	Перем ТекстОшибки;
	
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
	Если Задание <> Неопределено Тогда
		Фоновое = Задание.ПоследнееЗадание;
		Если Фоновое <> Неопределено и Фоновое.ИнформацияОбОшибке <> Неопределено Тогда
			ТекстОшибки = ПодробноеПредставлениеОшибки(Фоновое.ИнформацияОбОшибке);
		КонецЕсли;
	КонецЕсли;	
	Возврат ТекстОшибки;
	
КонецФункции

#КонецОбласти
