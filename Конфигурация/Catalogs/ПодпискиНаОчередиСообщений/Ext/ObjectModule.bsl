#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		ОбновитьРегламентноеЗадание();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
		Если Задание <> Неопределено Тогда
			Задание.Удалить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ИдентификаторЗадания = Неопределено;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ОбработчикиСобытийRMQ") Тогда
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ИмяСервиса) Тогда
			Асинхронно   = Истина;
			Наименование = ДанныеЗаполнения.ИмяСервиса+"."+ДанныеЗаполнения.ИмяМетода;
			ИмяОчереди   = ДанныеЗаполнения.ИмяСервиса;
		КонецЕсли;
		Обработчик = ДанныеЗаполнения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Асинхронно Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбработчикиСобытийRMQ.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОбработчикиСобытийRMQ КАК ОбработчикиСобытийRMQ
		|ГДЕ
		|	ОбработчикиСобытийRMQ.ИмяСервиса <> """"
		|	И ОбработчикиСобытийRMQ.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Обработчик);
		
		Если Запрос.Выполнить().Пустой() Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю();
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Поле = "Обработчик";
			Сообщение.Текст = НСтр("ru = 'Выбранный обработчик не является обработчиком метода RPC-сервиса.'");
			Сообщение.Сообщить();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьРегламентноеЗадание()
	
	Перем Задание;
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	КонецЕсли;
	
	Если Задание = Неопределено Тогда
		МетаданноеРегламентного = 
			?(Асинхронно = Истина, 
						Метаданные.РегламентныеЗадания.ОбработкаВызововАсинхронныхСервисов,
						Метаданные.РегламентныеЗадания.ПолучениеСообщенийИзОчередей
			);
		Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданноеРегламентного);
		ИдентификаторЗадания = Задание.УникальныйИдентификатор;
	КонецЕсли;
	
	Задание.Наименование = Наименование;
	Задание.Расписание = РасписаниеЗадания.Получить();
	Задание.Использование = Не ПометкаУдаления И Активно;
	Задание.Ключ = ИмяОчереди;
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(ИмяОчереди);
	ПараметрыЗадания.Добавить(ИнтервалОжиданияСобытия);
	ПараметрыЗадания.Добавить(Справочники.СерверыОчередейRMQ.КлючСоединения(СерверОчередей));
	ПараметрыЗадания.Добавить(Ссылка);
	ПараметрыЗадания.Добавить(ЧастотаПульса);
	
	Задание.Параметры = ПараметрыЗадания;

	Задание.Записать();
	
КонецПроцедуры

#КонецОбласти 

#Иначе	
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли
