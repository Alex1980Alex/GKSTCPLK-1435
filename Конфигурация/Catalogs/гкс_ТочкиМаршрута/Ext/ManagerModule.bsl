#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
			
#Область ПрограммныйИнтерфейс

Функция ПолучитьМестнуюДатуПоТочкеМаршрута(ТочкаМаршрута) Экспорт
	
	ЧасовойПоясТочкиМаршрута = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТочкаМаршрута,
		"гкс_ЧасовойПоясТочкиМаршрута");
	
	Если ЗначениеЗаполнено(ЧасовойПоясТочкиМаршрута) Тогда
		МестнаяДата = МестноеВремя(ТекущаяУниверсальнаяДата(), ЧасовойПоясТочкиМаршрута);
	Иначе
		МестнаяДата = ТекущаяДатаСеанса();
	КонецЕсли;   
	
	Возврат МестнаяДата;
	
КонецФункции

// Описание: Возвращает Точку маршрута с типом ЖДСтанция по Коду станции ЖД
//
// Параметры: 
// КодСтанцииЖД - СправочникСсылка.гкс_КлассификаторСтанцийЖД
//
// Возвращаемое значение:
// - СправочникСсылка.гкс_ТочкиМаршрута
//
Функция ТочкаМаршрутаЖДСтанция(КодСтанцииЖД) Экспорт
	
	ТочкаМаршрута = Неопределено;
	
	Если ЗначениеЗаполнено(КодСтанцииЖД) Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТочкиМаршрута.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.гкс_ТочкиМаршрута КАК ТочкиМаршрута
		|ГДЕ
		|	ТочкиМаршрута.ТипТочкиМаршрута = ЗНАЧЕНИЕ(Перечисление.ТипТочкиМаршрута.ЖДСтанция)
		|	И ТочкиМаршрута.КодСтанцииЖД = &КодСтанцииЖД
		|	И НЕ ТочкиМаршрута.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("КодСтанцииЖД", КодСтанцииЖД);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ТочкаМаршрута = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ТочкаМаршрута;
	
КонецФункции

// Определяет точку маршрута склада с установленным признаком "ЭтоОсновнаяТочкаМаршрутаСклада"
// 
// Параметры:
//  Склад - СправочникСсылка.Склады - склад
// 
// Возвращаемое значение:
//  СправочникСсылка.гкс_ТочкиМаршрута
//
Функция ОсновнаяТочкаМаршрутаСклада(Склад) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	ТочкиМаршрута.Ссылка КАК ТочкаМаршрута
	|ИЗ
	|	Справочник.гкс_ТочкиМаршрута КАК ТочкиМаршрута
	|ГДЕ
	|	ТочкиМаршрута.Склад = &Склад
	|	И ТочкиМаршрута.ЭтоОсновнаяТочкаМаршрутаСклада";

	Запрос.УстановитьПараметр("Склад", Склад);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Результат = Выборка.ТочкаМаршрута;
	Иначе	
		Результат = ПустаяСсылка();
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

// Определяет точку маршрута по владельцу склада.
// 
// Параметры:
//  ВладелецСклада - СправочникСсылка.Контрагенты - Владелец склада.
// 
// Возвращаемое значение:
//  СправочникСсылка.гкс_ТочкиМаршрута - Точка маршрута по владельцу склада.
//
Функция ТочкаМаршрутаПоВладельцуСклада(ВладелецСклада) Экспорт
	
	ТочкаМаршрута = ПустаяСсылка();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ВладелецСклада", ВладелецСклада);
	Запрос.Текст = ТекстЗапросаТочкаМаршрутаПоВладельцуСклада();
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		
		ТочкаМаршрута = Выборка.Ссылка;
		
	КонецЕсли;
	
	Возврат ТочкаМаршрута;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значание:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ТипТочкиМаршрута");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СозданиеНаОсновании

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Возврат СозданиеНаОсновании.ДобавитьКомандуСозданияНаОсновании(КомандыСоздатьНаОсновании, Метаданные.Справочники.гкс_ТочкиМаршрута);	
	
КонецФункции

#КонецОбласти

#Область ТекстыЗапросов

Функция ТекстЗапросаТочкаМаршрутаПоВладельцуСклада()
	
	Возврат
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТочкиМаршрута.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.гкс_ТочкиМаршрута КАК ТочкиМаршрута
	|ГДЕ
	|	ТочкиМаршрута.КонтрагентВладелецСклада = &ВладелецСклада
	|	И НЕ ТочкиМаршрута.ПометкаУдаления";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

