
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если НЕ ЗначениеЗаполнено(Объект.ТипТочкиМаршрута) Тогда
		Объект.ТипТочкиМаршрута = Перечисления.ТипТочкиМаршрута.Прочее;
	КонецЕсли;        	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Элементы.ЧасовойПоясТочкиМаршрута.СписокВыбора.ЗагрузитьЗначения(ПолучитьДопустимыеЧасовыеПояса());
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		СформироватьНаименованиеПоЗначениямРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ТекущийОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипТочкиМаршрутаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьНаименование(Команда)
	
	СформироватьНаименованиеПоЗначениямРеквизитов(Истина);

КонецПроцедуры  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьНаименованиеПоЗначениямРеквизитов(ОбновитьНаименование = Ложь)
	
	Если (НЕ ЗначениеЗаполнено(Объект.Наименование)) ИЛИ ОбновитьНаименование Тогда
		
		КодОснЯзыка = ОбщегоНазначенияКлиент.КодОсновногоЯзыка();
		
		Если Строка(Объект.ТипТочкиМаршрута) = "Склад" Тогда 
			 			
			Если ЗначениеЗаполнено(Объект.Склад) Тогда
				Объект.Наименование = Строка(Объект.Склад) + НСтр("ru = ' (склад).'", КодОснЯзыка);	
			Иначе
				Объект.Наименование = НСтр("ru = 'Склад.'", КодОснЯзыка);
			КонецЕсли; 
						
		ИначеЕсли Строка(Объект.ТипТочкиМаршрута) = "ТочкаКонтрагента" Тогда
			
			ТекстТочкаКонтрагента = НСтр("ru = 'Точка контрагента '", КодОснЯзыка);
			
			Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
				Объект.Наименование = ТекстТочкаКонтрагента + Объект.Контрагент + ".";	
			Иначе
				Объект.Наименование = ТекстТочкаКонтрагента;
			КонецЕсли; 
						                             			
		ИначеЕсли Строка(Объект.ТипТочкиМаршрута) = "ЖДСтанция" Тогда
			
			ТекстЖДСтанция = НСтр("ru = 'ЖД станция '", КодОснЯзыка);
			
			Если ЗначениеЗаполнено(Объект.КодСтанцииЖД) Тогда
				Объект.Наименование = ТекстЖДСтанция + Объект.КодСтанцииЖД + ".";	
			Иначе
				Объект.Наименование = ТекстЖДСтанция;
			КонецЕсли; 
							
		ИначеЕсли Строка(Объект.ТипТочкиМаршрута) = "Порт" Тогда
			
			Объект.Наименование = НСтр("ru = 'Порт.'", КодОснЯзыка);
			
		ИначеЕсли Строка(Объект.ТипТочкиМаршрута) = "ТаможенныйТерминал" Тогда
			
			Объект.Наименование = НСтр("ru = 'Таможенный терминал.'", КодОснЯзыка);
			
		Иначе
			
			Объект.Наименование = НСтр("ru = 'Точка маршрута.'", КодОснЯзыка);
			
		КонецЕсли;	
			        		
		Если ЗначениеЗаполнено(Объект.Адрес) Тогда
			Объект.Наименование = Объект.Наименование + " (" + Объект.Адрес + ")";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	ВидимостьЖД = 
		(Объект.ТипТочкиМаршрута = ПредопределенноеЗначение("Перечисление.ТипТочкиМаршрута.ЖДСтанция") 
		Или Объект.ТипТочкиМаршрута = ПредопределенноеЗначение("Перечисление.ТипТочкиМаршрута.Склад")  
		Или Объект.ТипТочкиМаршрута = ПредопределенноеЗначение("Перечисление.ТипТочкиМаршрута.Порт"));
	
	ВидимостьСклад = 
		(Не Объект.ТипТочкиМаршрута = ПредопределенноеЗначение("Перечисление.ТипТочкиМаршрута.ТочкаКонтрагента") 
		И Не Объект.ТипТочкиМаршрута = ПредопределенноеЗначение("Перечисление.ТипТочкиМаршрута.Прочее"));
	
	ВидимостьКонтрагент = 
		Объект.ТипТочкиМаршрута = ПредопределенноеЗначение("Перечисление.ТипТочкиМаршрута.ТочкаКонтрагента");
		
	ЭтоСклад = Объект.ТипТочкиМаршрута = ПредопределенноеЗначение("Перечисление.ТипТочкиМаршрута.Склад");
	
	Элементы.ГруппаЖДРеквизиты.Видимость 	= ВидимостьЖД;
	Элементы.ГруппаСклад.Видимость 			= ВидимостьСклад;
	Элементы.ГруппаКонтрагент.Видимость 	= ВидимостьКонтрагент;
	Элементы.Вместимость.Видимость = ЭтоСклад;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
