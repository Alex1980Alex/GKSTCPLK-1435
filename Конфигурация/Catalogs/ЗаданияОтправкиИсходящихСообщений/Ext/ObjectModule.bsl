#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЕстьОтборСерверОчередей Тогда
		ПроверяемыеРеквизиты.Добавить("СерверОчередей");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		ОбновитьРегламентныеЗадания();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрЗадания Из ИдентификаторыЗаданий Цикл
		Если ЗначениеЗаполнено(СтрЗадания.ИдентификаторЗадания) Тогда
			Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(СтрЗадания.ИдентификаторЗадания);
			Если Задание <> Неопределено Тогда
				Задание.Удалить();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ИдентификаторыЗаданий.Очистить();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьРегламентныеЗадания()
	
	МассивДействий = Новый Массив;
	Для Сч = 1 По ЧислоПотоковОбработки Цикл
		МассивДействий.Добавить("Создать");
	КонецЦикла;
	
	Для Сч = ЧислоПотоковОбработки + 1 По ИдентификаторыЗаданий.Количество() Цикл
		МассивДействий.Добавить("Удалить");
	КонецЦикла;
	
	НомерСтроки = 0;
	УдаляемыеСтроки = Новый Массив;
	Для Каждого Действие Из МассивДействий Цикл
		Задание = Неопределено;
		Если НомерСтроки <= ИдентификаторыЗаданий.Количество() - 1 Тогда
			СтрокаЗадания = ИдентификаторыЗаданий[НомерСтроки];
		Иначе
			СтрокаЗадания = ИдентификаторыЗаданий.Добавить();
		КонецЕсли;
		
		Если Действие = "Удалить" Тогда
			УдаляемыеСтроки.Добавить(СтрокаЗадания);
		Иначе
			Если ЗначениеЗаполнено(СтрокаЗадания.ИдентификаторЗадания) Тогда
				Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(СтрокаЗадания.ИдентификаторЗадания);
			КонецЕсли;
			
			Если Задание = Неопределено Тогда
				МетаданноеРегламентного = Метаданные.РегламентныеЗадания.ОтправкаИсходящихСообщений;
				Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданноеРегламентного);
				СтрокаЗадания.ИдентификаторЗадания = Задание.УникальныйИдентификатор;
			КонецЕсли;
			
			Задание.Наименование = Наименование + "(" + (НомерСтроки + 1) + ")";
			Задание.Расписание = РасписаниеЗадания.Получить();
			Задание.Использование = Не ПометкаУдаления;
			Задание.Ключ = "" + Код + НомерСтроки;
			
			ПараметрыЗадания = Новый Массив;
			ПараметрыЗадания.Добавить(?(ЕстьОтборСерверОчередей, СерверОчередей, Неопределено));
			ПараметрыЗадания.Добавить(?(ЕстьОтборТочкаПубликации, ТочкаПубликации, Неопределено));
			
			Задание.Параметры = ПараметрыЗадания;
			
			Задание.Записать();
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Для Каждого СтрокаЗадания Из УдаляемыеСтроки Цикл
		Задание = Неопределено;
		Если ЗначениеЗаполнено(СтрокаЗадания.ИдентификаторЗадания) Тогда
			Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(СтрокаЗадания.ИдентификаторЗадания);
		КонецЕсли;
		Если Задание <> Неопределено Тогда
			Задание.Удалить();
		КонецЕсли;	
		ИдентификаторыЗаданий.Удалить(СтрокаЗадания);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли