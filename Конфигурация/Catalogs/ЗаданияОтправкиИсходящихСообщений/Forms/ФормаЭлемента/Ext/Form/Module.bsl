
///////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.СерверОчередей.Доступность = Объект.ЕстьОтборСерверОчередей;
	Элементы.ТочкаПубликации.Доступность = Объект.ЕстьОтборТочкаПубликации;
	
	ОбновитьСтатусЗаданий();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Расписание = ТекущийОбъект.РасписаниеЗадания.Получить();
	Если Расписание = Неопределено Тогда
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	УстановитьРасписаниеЗадания(Расписание);
	Элементы.РасписаниеЗадания.Заголовок = Строка(Расписание);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Расписание = ПолучитьРасписание(АдресРасписанияЗадания);
	ТекущийОбъект.РасписаниеЗадания = Новый ХранилищеЗначения(Расписание);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьСтатусЗаданий();
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////
// Служебные процедуры и функции

&НаКлиенте
Процедура РасписаниеЗадания(Команда)
	
	ТекущееРасписание = ПолучитьРасписание(АдресРасписанияЗадания);
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(ТекущееРасписание);
	
	ОбработчикУстановкиРасписания = Новый ОписаниеОповещения("ОбработчикУстановкиРасписания", ЭтаФорма);
	ДиалогРасписания.Показать(ОбработчикУстановкиРасписания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРасписание(Знач Адрес)
	
	Если ЭтоАдресВременногоХранилища(Адрес) Тогда
		Расписание = ПолучитьИзВременногоХранилища(Адрес);
	Иначе
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Возврат Расписание;
	
КонецФункции

&НаСервере
Процедура УстановитьРасписаниеЗадания(Знач Расписание)
	
	Если ЭтоАдресВременногоХранилища(АдресРасписанияЗадания) Тогда
		ПоместитьВоВременноеХранилище(Расписание, АдресРасписанияЗадания);
	Иначе
		АдресРасписанияЗадания = ПоместитьВоВременноеХранилище(Расписание, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикУстановкиРасписания(Знач Расписание, Знач ПараметрыОповещения) Экспорт
	
	Если Расписание <> Неопределено Тогда
		УстановитьРасписаниеЗадания(Расписание);
		Элементы.РасписаниеЗадания.Заголовок = Строка(Расписание);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусЗаданий()
	
	СостояниеЗаданий.Очистить();
	Сч = 1;
	Для Каждого СтрЗадания Из Объект.ИдентификаторыЗаданий Цикл
		Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(СтрЗадания.ИдентификаторЗадания);
		СтрокаСостояния = СостояниеЗаданий.Добавить();
		СтрокаСостояния.Номер = Сч;
		Если Задание = Неопределено Тогда
			СтрокаСостояния.СостояниеЗадания = "Не найдено";
		Иначе
			
			Фоновое = Задание.ПоследнееЗадание;
			Если Фоновое <> Неопределено Тогда
				СтрокаСостояния.СостояниеЗадания = Фоновое.Состояние;
				Если Фоновое.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
					СтрокаСостояния.ОписаниеОшибки = ПодробноеПредставлениеОшибки(Фоновое.ИнформацияОбОшибке);
				КонецЕсли;
			Иначе
				СтрокаСостояния.СостояниеЗадания = "Не выполнялось";
			КонецЕсли;
			
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////
// Обработчики событий элементов формы

&НаКлиенте
Процедура ЕстьОтборСерверОчередейПриИзменении(Элемент)
	Элементы.СерверОчередей.Доступность = Объект.ЕстьОтборСерверОчередей;
КонецПроцедуры

&НаКлиенте
Процедура ЕстьОтборТочкаПубликацииПриИзменении(Элемент)
	Элементы.ТочкаПубликации.Доступность = Объект.ЕстьОтборТочкаПубликации;
КонецПроцедуры

&НаКлиенте
Процедура СостояниеЗаданийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "СостояниеЗаданийОписаниеОшибки" Тогда
		ПараметрФормы = Новый Структура;
		ПараметрФормы.Вставить("ТекстОшибки", Элемент.ТекущиеДанные.ОписаниеОшибки);
		ОткрытьФорму("Обработка.КлиентОчередиСообщений.Форма.ТекстОшибки", ПараметрФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры
