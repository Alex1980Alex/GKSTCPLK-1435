#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция КоличествоОбъектовВСообщении() Экспорт
	
	ВыгруженоОбъектов = 0;
	
	// Пока что у исходящего сообщения отсуствует свойство "Формат", то есть явно оперделить (классифицировать)
	// его возможности нету. в целом у всех сообщений ED есть базовый пакет. По его вхождению и будем считать,
	// что сообщение нужного нам типа и мы знаем как считать количество объектов в нем. В будущем после добавления 
	// свойства "Формат" процедура будет переделана. Также возможно расщепление процедуры для расчета количества 
	// объектов по типу формата
	Если НЕ ЗначениеЗаполнено(Сообщение) 
		ИЛИ СтрНайти(Сообщение, "http://www.1c.ru/SSL/Exchange/Message") = 0 Тогда
		Возврат ВыгруженоОбъектов;
	КонецЕсли;
		
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Сообщение);
	
	ПостроительDOM = Новый ПостроительDOM;
	ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
	
	ЭлементыТелаСообщения = ДокументDOM.ПолучитьЭлементыПоИмени("Body");	
	Для Каждого ЭлементТелаСообщения Из ЭлементыТелаСообщения Цикл	
		ВыгруженоОбъектов = ВыгруженоОбъектов + ЭлементТелаСообщения.ДочерниеУзлы.Количество();		
	КонецЦикла;
	
	Возврат ВыгруженоОбъектов;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий 

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДозаполнитьНезаполненныеРеквизитыПередЗаписью();
	ЗаполнитьПредставлениеОбъектовСобытий();
	гкс_ОчередьСообщенийRMQ.ПередЗаписьюСообщений(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("СсылкаНаСообщение", Ссылка);	
	Справочники.ИсходящиеСообщения.УстановитьСостояниеСообщения(ДополнительныеСвойства);
		
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Перем СвойстваСообщенияЛокальные;
	
	ТипЗнчДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипЗнчДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("СвойстваСообщения", СвойстваСообщенияЛокальные) 
			И ТипЗнч(СвойстваСообщенияЛокальные) = Тип("Структура") Тогда			
			ЭтотОбъект.СвойстваСообщения = ЗначениеВСтрокуВнутр(СвойстваСообщенияЛокальные);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДозаполнитьНезаполненныеРеквизитыПередЗаписью()
	
	Если НЕ ЗначениеЗаполнено(УниверсальнаяДатаСобытияВМиллисекундах) Тогда
		УниверсальнаяДатаСобытияВМиллисекундах = 
		ОчередьСообщенийВызовСервера.ТекущаяУниверсальнаяДатаВМиллисекундахНаСервере();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаВремяСобытия) Тогда
		
		УниверсальнаяДатаСобытия_Число = Цел(УниверсальнаяДатаСобытияВМиллисекундах / 1000);
		УниверсальнаяДатаСобытия_Дата = Дата(1, 1, 1) + УниверсальнаяДатаСобытия_Число;		
		ДатаВремяСобытия = МестноеВремя(УниверсальнаяДатаСобытия_Дата);
		
	КонецЕсли;
	  		
	Если НЕ ЗначениеЗаполнено(СерверОчередей) Тогда
		СерверОчередей = Справочники.СерверыОчередейRMQ.Основной;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипКонтракта) И ЗначениеЗаполнено(гкс_ОбъектСобытия) Тогда
		
		ТипМетаданныхОбъектаСобытия = гкс_ОбъектСобытия.Метаданные().ПолноеИмя();
		ТипКонтракта = Обработки.гкс_ФормировательСообщенийRMQ.ТипСообщения(ТипМетаданныхОбъектаСобытия);
		
	КонецЕсли;
	
	ДобавитьВыгруженныеОбъекты();
	
КонецПроцедуры

Процедура ДобавитьВыгруженныеОбъекты()
	
	Перем МассивВыгруженныхОбъектов;
	
	ДополнительныеСвойства.Свойство("ВыгруженныеОбъекты", МассивВыгруженныхОбъектов);
	Если НЕ МассивВыгруженныхОбъектов = Неопределено И ТипЗнч(МассивВыгруженныхОбъектов) = Тип("Массив") Тогда
		 
		СтруктураЗаполнения = Новый Структура("Объект, Дата");
		СтруктураЗаполнения.Дата = ТекущаяДатаСеанса();
		
		Для Каждого ВыгруженныйОбъект Из МассивВыгруженныхОбъектов Цикл
		
			СтруктураЗаполнения.Объект = ВыгруженныйОбъект;
			
			ЗаполнитьЗначенияСвойств(ВыгруженныеОбъекты.Добавить(), СтруктураЗаполнения);
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьПредставлениеОбъектовСобытий()
	
	МассивПредставление = Новый Массив;
	Для Каждого ВыгруженныйОбъект Из ВыгруженныеОбъекты Цикл
		МассивПредставление.Добавить(Строка(ВыгруженныйОбъект.Объект));		
	КонецЦикла;
	
	КраткийСостав = СтрСоединить(МассивПредставление, " ,");
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли
