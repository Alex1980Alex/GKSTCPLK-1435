////////////////////////////////////////////////////////////////////////////////
//  Модуль "гкс_ВнешниеПробыСлужебный", содержит методы для
//  работы функциональной подсистемы учетного механизма 
//	"Автоматическое получение внешних проб сырья по качеству"
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РегламентныеЗадания

// Обработчик регламентного задания гкс_ОчисткаУстаревшихДанныхWarehouse.
//
Процедура ОчисткаУстаревшихДанныхWarehouse() Экспорт

	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(
		Метаданные.РегламентныеЗадания.гкс_ОчисткаУстаревшихДанныхWarehouse);
		
	Если Не ПолучитьФункциональнуюОпцию("гкс_ИспользоватьИнтеграциюСWarehouse") Тогда
		ВызватьИсключение НСтр("ru = 'Регламентное задание недоступно по функциональным опциям.'");
	КонецЕсли;
	
	ВыполнитьОчисткуУстаревшихДанныхWarehouse();
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// См. РегламентныеЗаданияПереопределяемый.ПриОпределенииНастроекРегламентныхЗаданий.
//
// Определяет следующие свойств регламентных заданий:
//  - зависимость от функциональных опций.
//  - возможность выполнения в различных режимах работы программы.
//  - прочие параметры.
//
// Параметры:
//  Настройки - ТаблицаЗначений - таблица значений с колонками:
//    * РегламентноеЗадание - ОбъектМетаданныхРегламентноеЗадание - регламентное задание.
//    * ФункциональнаяОпция - ОбъектМетаданныхФункциональнаяОпция - функциональная опция,
//        от которой зависит регламентное задание.
//    * ЗависимостьПоИ      - Булево - если регламентное задание зависит более, чем
//        от одной функциональной опции и его необходимо включать только тогда,
//        когда все функциональные опции включены, то следует указывать Истина
//        для каждой зависимости.
//        По умолчанию Ложь - если хотя бы одна функциональная опция включена,
//        то регламентное задание тоже включено.
//    * ВключатьПриВключенииФункциональнойОпции - Булево, Неопределено - если Ложь, то при
//        включении функциональной опции регламентное задание не будет включаться. Значение
//        Неопределено соответствует значению Истина.
//        По умолчанию - неопределено.
//    * ДоступноВПодчиненномУзлеРИБ - Булево, Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в РИБ.
//        По умолчанию - неопределено.
//    * ДоступноВПодчиненномУзлеКОД - Булево, Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в подчиненном узле КОД.
//        По умолчанию - неопределено.
//    * ДоступноВАвтономномРабочемМесте - Булево, Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в автономном рабочем месте.
//        По умолчанию - неопределено.
//    * ДоступноВМоделиСервиса      - Булево, Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в модели сервиса.
//        По умолчанию - неопределено.
//    * РаботаетСВнешнимиРесурсами  - Булево - Истина, если регламентное задание модифицирует данные
//        во внешних источниках (получение почты, синхронизация данных и т.п.). Не следует устанавливать
//        значение Истина, для регламентных заданий, не модифицирующих данные во внешних источниках.
//        Например, регламентное задание ЗагрузкаКурсовВалют. По умолчанию - Ложь.
//    * Параметризуется             - Булево - Истина, если регламентное задание параметризованное.
//        По умолчанию - Ложь.
//
// Например:
//	Настройка = Настройки.Добавить();
//	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОбновлениеСтатусовДоставкиSMS;
//	Настройка.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьПочтовыйКлиент;
//	Настройка.ДоступноВМоделиСервиса = Ложь;
//
Процедура ПриОпределенииНастроекРегламентныхЗаданий(Настройки) Экспорт
	
	Настройка = Настройки.Добавить();
	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.гкс_ОчисткаУстаревшихДанныхWarehouse; 
	Настройка.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.гкс_ИспользоватьИнтеграциюСWarehouse;
	Настройка.РаботаетСВнешнимиРесурсами = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РегламентноеЗаданиеОчисткаУстаревшихДанныхWarehouse

Процедура ВыполнитьОчисткуУстаревшихДанныхWarehouse() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Настройки 	= НастройкиОчисткиУстаревшихДанныхWarehouse();
	Запрос 		= ИнициализироватьОсновнойЗапрос(Настройки);
	
	ОчиститьИсторииИзмененияВнешнихПроб(Запрос, Настройки);
	ОчиститьВходящихДанныхWarehouse(Запрос, Настройки);
	ОчиститьВнешниеПробы(Запрос, Настройки);
	
КонецПроцедуры

Функция НастройкиОчисткиУстаревшихДанныхWarehouse()
	
	Настройки 		= Справочники.гкс_НастройкиИнтеграцииWarehouse.НастройкиИнтеграции();
	
	ДваГода 		= 24;
	ШестьМесяцев 	= 6;
	Порция500 		= 500;
	
	Если Не ЗначениеЗаполнено(Настройки.СрокХранениеВходящихДанныхWarehouse) Тогда
		Настройки.Вставить("СрокХранениеВходящихДанныхWarehouse", 		ШестьМесяцев);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Настройки.СрокХранениеВнешнихПроб) Тогда
		Настройки.Вставить("СрокХранениеВнешнихПроб", 					ДваГода);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Настройки.СрокХранениеИсторииИзмененияВнешнихПроб) Тогда
		Настройки.Вставить("СрокХранениеИсторииИзмененияВнешнихПроб", 	ШестьМесяцев);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Настройки.РазмерПорцииОбработкиОчистки) Тогда
		Настройки.Вставить("РазмерПорцииОбработкиОчистки", 				Порция500);
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

#Область ОчиститьИсторииИзмененияВнешнихПроб

Процедура ОчиститьИсторииИзмененияВнешнихПроб(Запрос, Настройки)
	
	ТекстЗапроса 	= ТекстЗапросаОчиститьИсторииИзмененияВнешнихПроб();
	Выборка 		= ВыборкаРезультатаЗапроса(Запрос, Настройки, ТекстЗапроса);

	УдалитьВнешниеПробы(Выборка);
	
КонецПроцедуры

Функция ТекстЗапросаОчиститьИсторииИзмененияВнешнихПроб()
	
	Возврат 
	"ВЫБРАТЬ ПЕРВЫЕ 500
	|	ВсеЗаписиПоОтбору.Период КАК Период,
	|	ВсеЗаписиПоОтбору.ВидПробы КАК ВидПробы,
	|	ВсеЗаписиПоОтбору.ДатаИзменения КАК ДатаИзменения,
	|	ВсеЗаписиПоОтбору.ДатаПогрузки КАК ДатаПогрузки,
	|	ВсеЗаписиПоОтбору.ДатаПробы КАК ДатаПробы,
	|	ВсеЗаписиПоОтбору.ИДКомпозитнойПробы КАК ИДКомпозитнойПробы,
	|	ВсеЗаписиПоОтбору.ИДПробы КАК ИДПробы,
	|	ВсеЗаписиПоОтбору.Организация КАК Организация,
	|	ВсеЗаписиПоОтбору.МестоИнспекции КАК МестоИнспекции,
	|	ВсеЗаписиПоОтбору.НомерДокумента КАК НомерДокумента,
	|	ВсеЗаписиПоОтбору.НомерЗаявки КАК НомерЗаявки,
	|	ВсеЗаписиПоОтбору.НомерТС КАК НомерТС,
	|	ВсеЗаписиПоОтбору.Показатель КАК Показатель,
	|	ВсеЗаписиПоОтбору.Продукция КАК Продукция,
	|	ВсеЗаписиПоОтбору.СтанцияНазначения КАК СтанцияНазначения,
	|	ВсеЗаписиПоОтбору.СтанцияОтправления КАК СтанцияОтправления,
	|	ВсеЗаписиПоОтбору.Сюрвейер КАК Сюрвейер,
	|	ВсеЗаписиПоОтбору.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВсеЗаписиПоОтбору.Элеватор КАК Элеватор
	|ИЗ
	|	ВТВсеЗаписиПоОтбору КАК ВсеЗаписиПоОтбору
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНужныеВнешниеПробы КАК ВТНужныеВнешниеПробы
	|		ПО ВсеЗаписиПоОтбору.ДатаИзменения = ВТНужныеВнешниеПробы.ДатаИзменения
	|			И ВсеЗаписиПоОтбору.ДатаПробы = ВТНужныеВнешниеПробы.ДатаПробы
	|			И ВсеЗаписиПоОтбору.ДатаПогрузки = ВТНужныеВнешниеПробы.ДатаПогрузки
	|			И ВсеЗаписиПоОтбору.ВидПробы = ВТНужныеВнешниеПробы.ВидПробы
	|			И ВсеЗаписиПоОтбору.НомерТС = ВТНужныеВнешниеПробы.НомерТС
	|			И ВсеЗаписиПоОтбору.ТранспортноеСредство = ВТНужныеВнешниеПробы.ТранспортноеСредство
	|			И ВсеЗаписиПоОтбору.Продукция = ВТНужныеВнешниеПробы.Продукция
	|			И ВсеЗаписиПоОтбору.Показатель = ВТНужныеВнешниеПробы.Показатель
	|			И ВсеЗаписиПоОтбору.НомерДокумента = ВТНужныеВнешниеПробы.НомерДокумента
	|			И ВсеЗаписиПоОтбору.НомерЗаявки = ВТНужныеВнешниеПробы.НомерЗаявки
	|			И ВсеЗаписиПоОтбору.СтанцияОтправления = ВТНужныеВнешниеПробы.СтанцияОтправления
	|			И ВсеЗаписиПоОтбору.СтанцияНазначения = ВТНужныеВнешниеПробы.СтанцияНазначения
	|			И ВсеЗаписиПоОтбору.Сюрвейер = ВТНужныеВнешниеПробы.Сюрвейер
	|			И ВсеЗаписиПоОтбору.Организация = ВТНужныеВнешниеПробы.Организация
	|			И ВсеЗаписиПоОтбору.Элеватор = ВТНужныеВнешниеПробы.Элеватор
	|			И ВсеЗаписиПоОтбору.МестоИнспекции = ВТНужныеВнешниеПробы.МестоИнспекции
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВТНужныеВнешниеПробы.Период ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И ВсеЗаписиПоОтбору.Период <= &ДатаХранениеИстории";
	
КонецФункции

#КонецОбласти

#Область ОчиститьВходящихДанныхWarehouse

Процедура ОчиститьВходящихДанныхWarehouse(Запрос, Настройки)
		
	ТекстЗапроса 	= ТекстЗапросаОчиститьВходящихДанныхWarehouse();
	Выборка 		= ВыборкаРезультатаЗапроса(Запрос, Настройки, ТекстЗапроса);

	Пока Выборка.Следующий() Цикл
		
		Выборка.ВходящиеДанные.ПолучитьОбъект().Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаОчиститьВходящихДанныхWarehouse()
	
	Возврат 
	"ВЫБРАТЬ ПЕРВЫЕ 500
	|	СпрВходящиеДанные.Ссылка КАК ВходящиеДанные
	|ИЗ
	|	Справочник.гкс_ВходящиеДанныеWarehouse КАК СпрВходящиеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеЗаписиПоОтбору КАК ВсеЗаписиПоОтбору
	|		ПО СпрВходящиеДанные.Ссылка = ВсеЗаписиПоОтбору.ВходящиеДанные
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВсеЗаписиПоОтбору.ВходящиеДанные ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И СпрВходящиеДанные.ДатаСоздания <= &ДатаХранениеДанных";
	
КонецФункции

#КонецОбласти

#Область ОчиститьВнешниеПробы

Процедура ОчиститьВнешниеПробы(Запрос, Настройки)
	
	ТекстЗапроса 	= ТекстЗапросаОчиститьВнешниеПробы();
	Выборка 		= ВыборкаРезультатаЗапроса(Запрос, Настройки, ТекстЗапроса);

	УдалитьВнешниеПробы(Выборка);
	
КонецПроцедуры

Функция ТекстЗапросаОчиститьВнешниеПробы()
	
	Возврат 
	"ВЫБРАТЬ ПЕРВЫЕ 500
	|	ВсеЗаписиПоОтбору.Период КАК Период,
	|	ВсеЗаписиПоОтбору.ВидПробы КАК ВидПробы,
	|	ВсеЗаписиПоОтбору.ДатаИзменения КАК ДатаИзменения,
	|	ВсеЗаписиПоОтбору.ДатаПогрузки КАК ДатаПогрузки,
	|	ВсеЗаписиПоОтбору.ДатаПробы КАК ДатаПробы,
	|	ВсеЗаписиПоОтбору.ИДКомпозитнойПробы КАК ИДКомпозитнойПробы,
	|	ВсеЗаписиПоОтбору.ИДПробы КАК ИДПробы,
	|	ВсеЗаписиПоОтбору.Организация КАК Организация,
	|	ВсеЗаписиПоОтбору.МестоИнспекции КАК МестоИнспекции,
	|	ВсеЗаписиПоОтбору.НомерДокумента КАК НомерДокумента,
	|	ВсеЗаписиПоОтбору.НомерЗаявки КАК НомерЗаявки,
	|	ВсеЗаписиПоОтбору.НомерТС КАК НомерТС,
	|	ВсеЗаписиПоОтбору.Показатель КАК Показатель,
	|	ВсеЗаписиПоОтбору.Продукция КАК Продукция,
	|	ВсеЗаписиПоОтбору.СтанцияНазначения КАК СтанцияНазначения,
	|	ВсеЗаписиПоОтбору.СтанцияОтправления КАК СтанцияОтправления,
	|	ВсеЗаписиПоОтбору.Сюрвейер КАК Сюрвейер,
	|	ВсеЗаписиПоОтбору.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВсеЗаписиПоОтбору.Элеватор КАК Элеватор
	|ИЗ
	|	ВТВсеЗаписиПоОтбору КАК ВсеЗаписиПоОтбору
	|ГДЕ
	|	ВсеЗаписиПоОтбору.Период <= &ДатаХранениеПроб";
	
КонецФункции

#КонецОбласти

#Область ОбщиеМетодыОчисткаУстаревшихДанныхWarehouse

Функция ИнициализироватьОсновнойЗапрос(Настройки)
	
	Запрос = Новый Запрос;
	ВременныеТаблицыПоследниеДанныеВнешнихПробПоИстории(Запрос, Настройки);
	
	Возврат Запрос;
	
КонецФункции

Функция ВыборкаРезультатаЗапроса(Запрос, Настройки, ТекстЗапроса)
	
	УстановитьНастройкуРазмерПорцииОбработки(Настройки, ТекстЗапроса);
	
	Запрос.Текст 	= ТекстЗапроса;
	Результат 		= Запрос.Выполнить();
	
	Возврат Результат.Выбрать();
	
КонецФункции

Процедура УдалитьВнешниеПробы(Выборка)
	
	МенеджерПроб = РегистрыСведений.гкс_ВнешниеПробы;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураЗаписи = МенеджерПроб.СтруктураЗаписи();
		ЗаполнитьЗначенияСвойств(СтруктураЗаписи, Выборка);
		
		МенеджерПроб.УдалитьЗапись(СтруктураЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьВЗапросСрокиХранения(Запрос, Настройки, ДатаСреза)
	
	СрокХранениеИстории 	= Настройки.СрокХранениеИсторииИзмененияВнешнихПроб;
	ДатаХранениеИстории 	= ДобавитьМесяц(ДатаСреза, -СрокХранениеИстории);
	
	Запрос.УстановитьПараметр("ДатаХранениеИстории", ДатаХранениеИстории);
	
	СрокХранениеДанных 		= Настройки.СрокХранениеВходящихДанныхWarehouse;
	ДатаХранениеДанных 		= ДобавитьМесяц(ДатаСреза, -СрокХранениеДанных);
	
	Запрос.УстановитьПараметр("ДатаХранениеДанных", ДатаХранениеДанных);
	
	СрокХранениеПроб 		= Настройки.СрокХранениеВнешнихПроб;
	ДатаХранениеПроб 		= ДобавитьМесяц(ДатаСреза, -СрокХранениеПроб);
	
	Запрос.УстановитьПараметр("ДатаХранениеПроб", ДатаХранениеПроб);
	
КонецПроцедуры

Процедура УстановитьНастройкуРазмерПорцииОбработки(Настройки, ТекстЗапроса)
	
	Если Не Настройки.Свойство("РазмерПорцииОбработкиОчистки") Тогда
		Возврат;
	КонецЕсли;
	
	РазмерПорции 	= Настройки.РазмерПорцииОбработкиОчистки;
	СтрокаЗамены 	= СтрШаблон("ПЕРВЫЕ %1", Строка(РазмерПорции));
	СтрокаПоиска 	= "ПЕРВЫЕ 500";
	ТекстЗапроса 	= СтрЗаменить(ТекстЗапроса, СтрокаПоиска, СтрокаЗамены);
	
КонецПроцедуры

Процедура ВременныеТаблицыПоследниеДанныеВнешнихПробПоИстории(Запрос, Настройки)
	
	ДатаСреза 						= ТекущаяДатаСеанса();
	Запрос.МенеджерВременныхТаблиц 	= Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	УстановитьВЗапросСрокиХранения(Запрос, Настройки, ДатаСреза);
	
	Запрос.Текст = ТекстЗапросаПоследниеДанныеВнешнихПробПоИсторииВТВсеЗаписиПоОтбору();
	Запрос.Выполнить();
	
	Запрос.Текст = ТекстЗапросаПоследниеДанныеВнешнихПробПоИсторииВТОтборПоМаксИстории();
	Запрос.Выполнить();
	
	Запрос.Текст = ТекстЗапросаПоследниеДанныеВнешнихПробПоИсторииВТНужныеВнешниеПробы();
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаПоследниеДанныеВнешнихПробПоИсторииВТВсеЗаписиПоОтбору()
	
	Возврат 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РСВнешниеПробы.Период КАК Период,
	|	РСВнешниеПробы.НомерТС КАК НомерТС,
	|	РСВнешниеПробы.ДатаПробы КАК ДатаПробы,
	|	РСВнешниеПробы.ВидПробы КАК ВидПробы,
	|	РСВнешниеПробы.ДатаИзменения КАК ДатаИзменения,
	|	РСВнешниеПробы.Продукция КАК Продукция,
	|	РСВнешниеПробы.НомерДокумента КАК НомерДокумента,
	|	РСВнешниеПробы.НомерЗаявки КАК НомерЗаявки,
	|	РСВнешниеПробы.Показатель КАК Показатель,
	|	РСВнешниеПробы.ВесБрутто КАК ВесБрутто,
	|	РСВнешниеПробы.ВесТары КАК ВесТары,
	|	РСВнешниеПробы.ВесНетто КАК ВесНетто,
	|	РСВнешниеПробы.ЗначениеПоказателя КАК ЗначениеПоказателя,
	|	РСВнешниеПробы.ДатаПогрузки КАК ДатаПогрузки,
	|	РСВнешниеПробы.СтанцияОтправления КАК СтанцияОтправления,
	|	РСВнешниеПробы.СтанцияНазначения КАК СтанцияНазначения,
	|	РСВнешниеПробы.МестоИнспекции КАК МестоИнспекции,
	|	РСВнешниеПробы.Сюрвейер КАК Сюрвейер,
	|	РСВнешниеПробы.Элеватор КАК Элеватор,
	|	РСВнешниеПробы.ИДКомпозитнойПробы КАК ИДКомпозитнойПробы,
	|	РСВнешниеПробы.ИДПробы КАК ИДПробы,
	|	РСВнешниеПробы.ТранспортноеСредство КАК ТранспортноеСредство,
	|	РСВнешниеПробы.Комментарий КАК Комментарий,
	|	РСВнешниеПробы.Ответственный КАК Ответственный,
	|	РСВнешниеПробы.Организация КАК Организация,
	|	РСВнешниеПробы.ВходящиеДанные КАК ВходящиеДанные
	|ПОМЕСТИТЬ ВТВсеЗаписиПоОтбору
	|ИЗ
	|	РегистрСведений.гкс_ВнешниеПробы КАК РСВнешниеПробы
	|ГДЕ
	|	РСВнешниеПробы.Период <= &ДатаСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаИзменения,
	|	ДатаПробы,
	|	ДатаПогрузки,
	|	ВидПробы,
	|	НомерТС,
	|	ТранспортноеСредство,
	|	Продукция,
	|	Показатель,
	|	НомерДокумента,
	|	НомерЗаявки,
	|	СтанцияОтправления,
	|	СтанцияНазначения,
	|	Сюрвейер,
	|	Организация,
	|	Элеватор,
	|	МестоИнспекции";
	
КонецФункции

Функция ТекстЗапросаПоследниеДанныеВнешнихПробПоИсторииВТОтборПоМаксИстории()
	
	Возврат 
	"ВЫБРАТЬ
	|	ВсеЗаписиПоОтбору.НомерТС КАК НомерТС,
	|	МАКСИМУМ(ВсеЗаписиПоОтбору.ДатаИзменения) КАК ДатаИзменения,
	|	МАКСИМУМ(ВсеЗаписиПоОтбору.ДатаПробы) КАК ДатаПробы,
	|	ВсеЗаписиПоОтбору.ДатаПогрузки КАК ДатаПогрузки,
	|	ВсеЗаписиПоОтбору.ВидПробы КАК ВидПробы,
	|	ВсеЗаписиПоОтбору.Показатель КАК Показатель,
	|	ВсеЗаписиПоОтбору.Продукция КАК Продукция,
	|	ВсеЗаписиПоОтбору.НомерДокумента КАК НомерДокумента,
	|	ВсеЗаписиПоОтбору.НомерЗаявки КАК НомерЗаявки,
	|	ВсеЗаписиПоОтбору.СтанцияОтправления КАК СтанцияОтправления,
	|	ВсеЗаписиПоОтбору.СтанцияНазначения КАК СтанцияНазначения,
	|	ВсеЗаписиПоОтбору.МестоИнспекции КАК МестоИнспекции,
	|	ВсеЗаписиПоОтбору.Сюрвейер КАК Сюрвейер,
	|	ВсеЗаписиПоОтбору.Организация КАК Организация,
	|	ВсеЗаписиПоОтбору.Элеватор КАК Элеватор,
	|	ВсеЗаписиПоОтбору.ТранспортноеСредство КАК ТранспортноеСредство
	|ПОМЕСТИТЬ ВТОтборПоМаксИстории
	|ИЗ
	|	ВТВсеЗаписиПоОтбору КАК ВсеЗаписиПоОтбору
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеЗаписиПоОтбору.НомерТС,
	|	ВсеЗаписиПоОтбору.ДатаПогрузки,
	|	ВсеЗаписиПоОтбору.ВидПробы,
	|	ВсеЗаписиПоОтбору.Продукция,
	|	ВсеЗаписиПоОтбору.НомерДокумента,
	|	ВсеЗаписиПоОтбору.НомерЗаявки,
	|	ВсеЗаписиПоОтбору.СтанцияОтправления,
	|	ВсеЗаписиПоОтбору.СтанцияНазначения,
	|	ВсеЗаписиПоОтбору.МестоИнспекции,
	|	ВсеЗаписиПоОтбору.Сюрвейер,
	|	ВсеЗаписиПоОтбору.Организация,
	|	ВсеЗаписиПоОтбору.Элеватор,
	|	ВсеЗаписиПоОтбору.Показатель,
	|	ВсеЗаписиПоОтбору.ТранспортноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаИзменения,
	|	ДатаПробы,
	|	ДатаПогрузки,
	|	ВидПробы,
	|	НомерТС,
	|	ТранспортноеСредство,
	|	Продукция,
	|	Показатель,
	|	НомерДокумента,
	|	НомерЗаявки,
	|	СтанцияОтправления,
	|	СтанцияНазначения,
	|	Сюрвейер,
	|	Организация,
	|	Элеватор,
	|	МестоИнспекции";
	
КонецФункции

Функция ТекстЗапросаПоследниеДанныеВнешнихПробПоИсторииВТНужныеВнешниеПробы()
	
	Возврат 
	"ВЫБРАТЬ
	|	ВсеЗаписиПоОтбору.Период КАК Период,
	|	ВсеЗаписиПоОтбору.НомерТС КАК НомерТС,
	|	ВсеЗаписиПоОтбору.ДатаПробы КАК ДатаПробы,
	|	ВсеЗаписиПоОтбору.ВидПробы КАК ВидПробы,
	|	ВсеЗаписиПоОтбору.ДатаИзменения КАК ДатаИзменения,
	|	ВсеЗаписиПоОтбору.Продукция КАК Продукция,
	|	ВсеЗаписиПоОтбору.НомерДокумента КАК НомерДокумента,
	|	ВсеЗаписиПоОтбору.НомерЗаявки КАК НомерЗаявки,
	|	ВсеЗаписиПоОтбору.Показатель КАК Показатель,
	|	ВсеЗаписиПоОтбору.ВесБрутто КАК ВесБрутто,
	|	ВсеЗаписиПоОтбору.ВесТары КАК ВесТары,
	|	ВсеЗаписиПоОтбору.ВесНетто КАК ВесНетто,
	|	ВсеЗаписиПоОтбору.ЗначениеПоказателя КАК ЗначениеПоказателя,
	|	ВсеЗаписиПоОтбору.ДатаПогрузки КАК ДатаПогрузки,
	|	ВсеЗаписиПоОтбору.СтанцияОтправления КАК СтанцияОтправления,
	|	ВсеЗаписиПоОтбору.СтанцияНазначения КАК СтанцияНазначения,
	|	ВсеЗаписиПоОтбору.МестоИнспекции КАК МестоИнспекции,
	|	ВсеЗаписиПоОтбору.Сюрвейер КАК Сюрвейер,
	|	ВсеЗаписиПоОтбору.Элеватор КАК Элеватор,
	|	ВсеЗаписиПоОтбору.ИДКомпозитнойПробы КАК ИДКомпозитнойПробы,
	|	ВсеЗаписиПоОтбору.ИДПробы КАК ИДПробы,
	|	ВсеЗаписиПоОтбору.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВсеЗаписиПоОтбору.Комментарий КАК Комментарий,
	|	ВсеЗаписиПоОтбору.Ответственный КАК Ответственный,
	|	ВсеЗаписиПоОтбору.Организация КАК Организация
	|ПОМЕСТИТЬ ВТНужныеВнешниеПробы
	|ИЗ
	|	ВТВсеЗаписиПоОтбору КАК ВсеЗаписиПоОтбору
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборПоМаксИстории КАК ВТОтборПоМаксИстории
	|		ПО ВсеЗаписиПоОтбору.ДатаИзменения = ВТОтборПоМаксИстории.ДатаИзменения
	|			И ВсеЗаписиПоОтбору.ДатаПробы = ВТОтборПоМаксИстории.ДатаПробы
	|			И ВсеЗаписиПоОтбору.ДатаПогрузки = ВТОтборПоМаксИстории.ДатаПогрузки
	|			И ВсеЗаписиПоОтбору.ВидПробы = ВТОтборПоМаксИстории.ВидПробы
	|			И ВсеЗаписиПоОтбору.НомерТС = ВТОтборПоМаксИстории.НомерТС
	|			И ВсеЗаписиПоОтбору.ТранспортноеСредство = ВТОтборПоМаксИстории.ТранспортноеСредство
	|			И ВсеЗаписиПоОтбору.Продукция = ВТОтборПоМаксИстории.Продукция
	|			И ВсеЗаписиПоОтбору.Показатель = ВТОтборПоМаксИстории.Показатель
	|			И ВсеЗаписиПоОтбору.НомерДокумента = ВТОтборПоМаксИстории.НомерДокумента
	|			И ВсеЗаписиПоОтбору.НомерЗаявки = ВТОтборПоМаксИстории.НомерЗаявки
	|			И ВсеЗаписиПоОтбору.СтанцияОтправления = ВТОтборПоМаксИстории.СтанцияОтправления
	|			И ВсеЗаписиПоОтбору.СтанцияНазначения = ВТОтборПоМаксИстории.СтанцияНазначения
	|			И ВсеЗаписиПоОтбору.Сюрвейер = ВТОтборПоМаксИстории.Сюрвейер
	|			И ВсеЗаписиПоОтбору.Организация = ВТОтборПоМаксИстории.Организация
	|			И ВсеЗаписиПоОтбору.Элеватор = ВТОтборПоМаксИстории.Элеватор
	|			И ВсеЗаписиПоОтбору.МестоИнспекции = ВТОтборПоМаксИстории.МестоИнспекции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаИзменения,
	|	ДатаПробы,
	|	ДатаПогрузки,
	|	ВидПробы,
	|	НомерТС,
	|	ТранспортноеСредство,
	|	Продукция,
	|	Показатель,
	|	НомерДокумента,
	|	НомерЗаявки,
	|	СтанцияОтправления,
	|	СтанцияНазначения,
	|	Сюрвейер,
	|	Организация,
	|	Элеватор,
	|	МестоИнспекции";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти  
