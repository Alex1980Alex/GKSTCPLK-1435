#Область ПрограммныйИнтерфейс

// Выполнить запрос.
// 
// Параметры:
//  Сервис - СправочникСсылка.гкс_РесурсыВебСервисов - 
//  ПараметрыВыполненияЗапроса - Неопределено, Структура - 
// 
// Возвращаемое значение:
//  Структура - Выполнить запрос:
// * Метод - Строка -
// * URL - Строка -
// * КодСостояния - Число -
// * Заголовки - Соответствие -
// * Тело - ДвоичныеДанные -
// * Кодировка - Строка -
// * ВремяВыполнения - Неопределено -
// * ЭтоПостоянныйРедирект - Булево -
// * ЭтоРедирект - Булево -
// * Cookies - Соответствие -
// * Ошибки - Массив -
//
Функция ВыполнитьЗапрос(Сервис, ПараметрыВыполненияЗапроса = Неопределено) Экспорт
	
	Запросник = Обработки.гкс_ЗапросникКВебСервисам.Создать();
	Возврат  Запросник
	           .Инициализировать(Сервис, ПараметрыВыполненияЗапроса)
	           .ВыполнитьЗапрос()
	           .РезультатЗапроса();
	
КонецФункции

Процедура Логировать(СобытиеЛога) Экспорт
	РегистрыСведений.гкс_ЛогСобытийВебСервисов.Логировать(СобытиеЛога);
КонецПроцедуры

// Обработчик регламентного задания гкс_ОчисткаЛогаВебСервисов.
Процедура ОчисткаЛогаВебСервисов() Экспорт                                          
	
	РегламентноеЗадание = Метаданные.РегламентныеЗадания.гкс_ОчисткаЛогаВебСервисов;
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(РегламентноеЗадание);
	
	СрокХраненияЛога = СрокХраненияЛогаВебСервисов();
	
	Если СрокХраненияЛога = 0 Тогда
		Возврат;
	КонецЕсли;  
	
	ОчиститьЛогСервисов(СрокХраненияЛога);
		
КонецПроцедуры   

// Событие лога.
// 
// Параметры:
//  Ресурс - СправочникСсылка.гкс_РесурсыВебСервисов -
// 
// Возвращаемое значение:
//  Структура - Событие лога:
// * УниверсальнаяДата - Число -
// * Ресурс - СправочникСсылка.гкс_РесурсыВебСервисов -
// * ИмяМетода - Строка -
// * Идентификатор - Строка -
// * КодСостояния - Число - 
// * Длительность - Число - 
// * ХранилищеЗапроса - Неопределено - 
// * ХранилищеОтвета - Неопределено -  
// * ТипСодержимого - Строка - 
// * Дата - Дата -
Функция СобытиеЛога(Ресурс) Экспорт
	Возврат РегистрыСведений.гкс_ЛогСобытийВебСервисов.СобытиеЛога(Ресурс);
КонецФункции

// Метод сервиса.
// 
// Параметры:
//  Сервис - СправочникСсылка.гкс_РесурсыВебСервисов - 
// 
// Возвращаемое значение:
//  Строка - 
Функция МетодСервиса(Сервис) Экспорт
	Возврат Справочники.гкс_РесурсыВебСервисов.Метод(Сервис);	
КонецФункции

Функция ЗаголовкиСервисаКакСоотвествие(Сервис) Экспорт
	Возврат Справочники.гкс_РесурсыВебСервисов.ЗаголовкиКакСоотвествие(Сервис);	
КонецФункции

Функция ПолныйАдресРесурса(Ресурс) Экспорт
	Возврат Справочники.гкс_РесурсыВебСервисов.ПолныйАдрес(Ресурс);	
КонецФункции

Функция ПодключениеКСервису(Сервис) Экспорт
	Возврат Справочники.гкс_РесурсыВебСервисов.ПодключениеКСервису(Сервис);
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// См. РегламентныеЗаданияПереопределяемый.ПриОпределенииНастроекРегламентныхЗаданий.
//
// Определяет следующие свойств регламентных заданий:
//  - зависимость от функциональных опций.
//  - возможность выполнения в различных режимах работы программы.
//  - прочие параметры.
//
// Параметры:
//  Настройки - ТаблицаЗначений - таблица значений с колонками:
//    * РегламентноеЗадание - ОбъектМетаданныхРегламентноеЗадание - регламентное задание.
//    * ФункциональнаяОпция - ОбъектМетаданныхФункциональнаяОпция - функциональная опция,
//        от которой зависит регламентное задание.
//    * ЗависимостьПоИ      - Булево - если регламентное задание зависит более, чем
//        от одной функциональной опции и его необходимо включать только тогда,
//        когда все функциональные опции включены, то следует указывать Истина
//        для каждой зависимости.
//        По умолчанию Ложь - если хотя бы одна функциональная опция включена,
//        то регламентное задание тоже включено.
//    * ВключатьПриВключенииФункциональнойОпции - Булево, Неопределено - если Ложь, то при
//        включении функциональной опции регламентное задание не будет включаться. Значение
//        Неопределено соответствует значению Истина.
//        По умолчанию - неопределено.
//    * ДоступноВПодчиненномУзлеРИБ - Булево, Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в РИБ.
//        По умолчанию - неопределено.
//    * ДоступноВПодчиненномУзлеКОД - Булево, Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в подчиненном узле КОД.
//        По умолчанию - неопределено.
//    * ДоступноВАвтономномРабочемМесте - Булево, Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в автономном рабочем месте.
//        По умолчанию - неопределено.
//    * ДоступноВМоделиСервиса      - Булево, Неопределено - Истина или Неопределено, если регламентное
//        задание доступно в модели сервиса.
//        По умолчанию - неопределено.
//    * РаботаетСВнешнимиРесурсами  - Булево - Истина, если регламентное задание модифицирует данные
//        во внешних источниках (получение почты, синхронизация данных и т.п.). Не следует устанавливать
//        значение Истина, для регламентных заданий, не модифицирующих данные во внешних источниках.
//        Например, регламентное задание ЗагрузкаКурсовВалют. По умолчанию - Ложь.
//    * Параметризуется             - Булево - Истина, если регламентное задание параметризованное.
//        По умолчанию - Ложь.
//
// Например:
//	Настройка = Настройки.Добавить();
//	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОбновлениеСтатусовДоставкиSMS;
//	Настройка.ФункциональнаяОпция = Метаданные.ФункциональныеОпции.ИспользоватьПочтовыйКлиент;
//	Настройка.ДоступноВМоделиСервиса = Ложь;
//
Процедура ПриОпределенииНастроекРегламентныхЗаданий(Настройки) Экспорт
	
	Настройка = Настройки.Добавить();
	Настройка.РегламентноеЗадание = Метаданные.РегламентныеЗадания.гкс_ОчисткаЛогаВебСервисов;
	Настройка.РаботаетСВнешнимиРесурсами = Ложь; 
			
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьЛогСервисов(СрокХраненияЛога)
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;  
	
	РегистрыСведений.гкс_ЛогСобытийВебСервисов.СократитьЗаписиЛога(СрокХраненияЛога);
	
КонецПроцедуры   

Функция СрокХраненияЛогаВебСервисов() 
	Возврат гкс_РаботаСВебСервисамиПовтИсп.СрокХраненияЛогаВебСервисов();
КонецФункции

#КонецОбласти

