// @strict-types

#Область ПрограммныйИнтерфейс

// Формирует файл для САРА по документу ФормированиеНомераПробы
// 
// Параметры:
// 		ФормированиеНомераПробы - ДокументСсылка.гкс_ФормированиеНомераПробы
//  	Форма - ФормаКлиентскогоПриложения - 
//
Процедура СформироватьФайлДляСАРА(ФормированиеНомераПробы, Форма = Неопределено) Экспорт
	
	Если Не гкс_ИнтеграцияСАРАВызовСервера.ВозможноФормироватьФайлСАРА(ФормированиеНомераПробы) Тогда 
		Возврат;	
	КонецЕсли;
	
	Попытка
			
		Результат = гкс_ИнтеграцияСАРАВызовСервера.ЗаписатьВФайл(ФормированиеНомераПробы);  			
		ТекстОповещения = СтрШаблон(НСтр("ru='Сформирован файл анализа (САРА): %1'"), Результат.ИмяФайла); 
		
		ПоказатьОповещениеПользователя(ТекстОповещения, , , ,
			СтатусОповещенияПользователя.Информация, 
			?(ЗначениеЗаполнено(Форма), Строка(Форма.УникальныйИдентификатор), ""));
		
	Исключение
		
		СообщениеОбОшибке = НСтр("ru='При формировании данных САРА (записи файла) прозошла неисправимая ошибка'",
		                    ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
							
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
		
		ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(
		    СтрШаблон("%1.ЗаписьВФайл", ИмяКорневогоСобытияЖурналаРегистрации()),
			"Ошибка", 
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
			ОбщегоНазначенияКлиент.ДатаСеанса(), 
			Истина);
		
	КонецПопытки;		
													 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяКорневогоСобытияЖурналаРегистрации() 
	Возврат "ИнтеграцияСАРА";
КонецФункции

#КонецОбласти
