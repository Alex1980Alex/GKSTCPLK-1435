// Общий модуль для единого механизма подбора лабораторного анализа
// в основания для движения запасов
//
// Автор: GKSTCPLK-1435
// Дата создания: 15.07.2025
// Задача: Рефакторинг механизма подбора лаб.анализа в основания для движения запасов

#Область ПрограммныйИнтерфейс

// Определяет подходящий лабораторный анализ для основания движения запасов
// 
// Параметры:
//  ЛабораторныйАнализ - ДокументСсылка.гкс_ЛабораторныйАнализ - лабораторный анализ для проверки
//                                                                
// Возвращаемое значение:
//  Булево - Истина, если документ подходит для заполнения в основание движения запасов
//
Функция ЭтоЛабораторныйАнализДляОснованияДвиженияЗапасов(ЛабораторныйАнализ) Экспорт
    
    Если Не ЗначениеЗаполнено(ЛабораторныйАнализ) Тогда
        Возврат Ложь;
    КонецЕсли;
    
    ПередаватьКачествоВходногоКонтроля = ПолучитьФункциональнуюОпцию("гкс_ПередаватьКачествоВходногоКонтроля");
    
    НазначениеИспользованияКачества = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
        ЛабораторныйАнализ, "гкс_НазначениеИспользованияКачества");
    
    Если Не ПередаватьКачествоВходногоКонтроля
        И НазначениеИспользованияКачества = Перечисления.гкс_НазначенияИспользованияКачества.ПриемкаКомпозит Тогда
        
        Возврат Истина;
        
    ИначеЕсли ПередаватьКачествоВходногоКонтроля
        И НазначениеИспользованияКачества = Перечисления.гкс_НазначенияИспользованияКачества.Приемка Тогда
        
        Возврат Истина;
        
    Иначе
        Возврат Ложь;
    КонецЕсли;
    
КонецФункции

// Возвращает текст запроса для подбора лабораторного анализа
// в зависимости от функциональной опции
// 
// Возвращаемое значение:
//  Строка - текст запроса для подбора лабораторного анализа
//
Функция ПолучитьТекстЗапросаДляПодбораЛабораторногоАнализа() Экспорт
    
    ПередаватьКачествоВходногоКонтроля = ПолучитьФункциональнуюОпцию("гкс_ПередаватьКачествоВходногоКонтроля");
    
    Если ПередаватьКачествоВходногоКонтроля Тогда
        Возврат ПолучитьТекстЗапросаДляВходногоКонтроля();
    Иначе
        Возврат ПолучитьТекстЗапросаДляКомпозитныхПроб();
    КонецЕсли;
    
КонецФункции

// Заполняет качественные показатели в основании для движения запасов
// на основе лабораторного анализа
// 
// Параметры:
//  ОснованиеДвиженияЗапасов - ДокументОбъект.гкс_ОснованиеДляДвиженияЗапасов - документ для заполнения
//  ЛабораторныйАнализ - ДокументСсылка.гкс_ЛабораторныйАнализ - источник качественных показателей
//
Процедура ЗаполнитьКачественныеПоказателиПоЛабораторномуАнализу(ОснованиеДвиженияЗапасов, ЛабораторныйАнализ) Экспорт
    
    Если Не ЗначениеЗаполнено(ЛабораторныйАнализ) Тогда
        Возврат;
    КонецЕсли;
    
    Если Не ЭтоЛабораторныйАнализДляОснованияДвиженияЗапасов(ЛабораторныйАнализ) Тогда
        Возврат;
    КонецЕсли;
    
    // Очищаем существующие показатели
    ОснованиеДвиженияЗапасов.КачественныеПоказатели.Очистить();
    
    // Заполняем показатели из лабораторного анализа
    ЗапросПоказатели = Новый Запрос;
    ЗапросПоказатели.Текст = 
    "ВЫБРАТЬ
    |    КачественныеПоказатели.НомерСтроки,
    |    КачественныеПоказатели.Показатель,
    |    КачественныеПоказатели.Значение,
    |    КачественныеПоказатели.ЕдиницаИзмерения
    |ИЗ
    |    Документ.гкс_ЛабораторныйАнализ.КачественныеПоказатели КАК КачественныеПоказатели
    |ГДЕ
    |    КачественныеПоказатели.Ссылка = &ЛабораторныйАнализ
    |
    |УПОРЯДОЧИТЬ ПО
    |    КачественныеПоказатели.НомерСтроки";
    
    ЗапросПоказатели.УстановитьПараметр("ЛабораторныйАнализ", ЛабораторныйАнализ);
    
    РезультатЗапроса = ЗапросПоказатели.Выполнить();
    
    Если Не РезультатЗапроса.Пустой() Тогда
        
        ВыборкаПоказатели = РезультатЗапроса.Выбрать();
        
        Пока ВыборкаПоказатели.Следующий() Цикл
            
            НоваяСтрока = ОснованиеДвиженияЗапасов.КачественныеПоказатели.Добавить();
            НоваяСтрока.Показатель = ВыборкаПоказатели.Показатель;
            НоваяСтрока.Значение = ВыборкаПоказатели.Значение;
            НоваяСтрока.ЕдиницаИзмерения = ВыборкаПоказатели.ЕдиницаИзмерения;
            
        КонецЦикла;
        
    КонецЕсли;
    
КонецПроцедуры

// Перезаполняет основание для движения запасов по лабораторному анализу
// в зависимости от функциональной опции
// 
// Параметры:
//  ОснованиеДвиженияЗапасов - ДокументОбъект.гкс_ОснованиеДляДвиженияЗапасов - документ для перезаполнения
//  ПараметрыПерезаполнения - Структура - дополнительные параметры перезаполнения
//
Процедура ПерезаполнитьОснованиеДвиженияЗапасовПоЛабораторномуАнализу(ОснованиеДвиженияЗапасов, ПараметрыПерезаполнения = Неопределено) Экспорт
    
    ПередаватьКачествоВходногоКонтроля = ПолучитьФункциональнуюОпцию("гкс_ПередаватьКачествоВходногоКонтроля");
    
    Если ПередаватьКачествоВходногоКонтроля Тогда
        ПерезаполнитьПоВходномуКонтролю(ОснованиеДвиженияЗапасов, ПараметрыПерезаполнения);
    Иначе
        ПерезаполнитьПоКомпозитнымПробам(ОснованиеДвиженияЗапасов, ПараметрыПерезаполнения);
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает текст запроса для подбора лабораторного анализа
// по входному контролю
// 
// Возвращаемое значение:
//  Строка - текст запроса для входного контроля
//
Функция ПолучитьТекстЗапросаДляВходногоКонтроля()
    
    Возврат
    "ВЫБРАТЬ
    |    ЛабораторныйАнализ.Ссылка КАК АнализСсылка,
    |    ЛабораторныйАнализ.Дата КАК ДатаАнализа,
    |    ЛабораторныйАнализ.Номер КАК НомерАнализа
    |ИЗ
    |    Документ.гкс_ЛабораторныйАнализ КАК ЛабораторныйАнализ
    |ГДЕ
    |    ЛабораторныйАнализ.Проведен
    |    И ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества = ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.Приемка)
    |
    |УПОРЯДОЧИТЬ ПО
    |    ЛабораторныйАнализ.Дата УБЫВ,
    |    ЛабораторныйАнализ.Номер УБЫВ";
    
КонецФункции

// Возвращает текст запроса для подбора лабораторного анализа
// по композитным пробам
// 
// Возвращаемое значение:
//  Строка - текст запроса для композитных проб
//
Функция ПолучитьТекстЗапросаДляКомпозитныхПроб()
    
    Возврат
    "ВЫБРАТЬ
    |    ЛабораторныйАнализ.Ссылка КАК АнализСсылка,
    |    ЛабораторныйАнализ.Дата КАК ДатаАнализа,
    |    ЛабораторныйАнализ.Номер КАК НомерАнализа
    |ПОМЕСТИТЬ ВТ_ПоФормированиюПроб
    |ИЗ
    |    Документ.гкс_ФормированиеНомераПробы.СписокРегистраций КАК ФормированиеНомераПробыСписокРегистраций
    |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_ЛабораторныйАнализ КАК ЛабораторныйАнализ
    |        ПО ФормированиеНомераПробыСписокРегистраций.Ссылка = ЛабораторныйАнализ.гкс_ДокументРегистрации
    |            И (ЛабораторныйАнализ.Проведен)
    |            И (ЛабораторныйАнализ.гкс_НазначениеИспользованияКачества = ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.ПриемкаКомпозит))
    |
    |УПОРЯДОЧИТЬ ПО
    |    ЛабораторныйАнализ.Дата УБЫВ,
    |    ЛабораторныйАнализ.Номер УБЫВ";
    
КонецФункции

// Перезаполняет основание для движения запасов по входному контролю
// 
// Параметры:
//  ОснованиеДвиженияЗапасов - ДокументОбъект.гкс_ОснованиеДляДвиженияЗапасов - документ для перезаполнения
//  ПараметрыПерезаполнения - Структура - дополнительные параметры перезаполнения
//
Процедура ПерезаполнитьПоВходномуКонтролю(ОснованиеДвиженияЗапасов, ПараметрыПерезаполнения)
    
    // Логика перезаполнения по входному контролю
    // Подбираем лабораторный анализ с назначением "Приемка"
    
    ЗапросАнализ = Новый Запрос;
    ЗапросАнализ.Текст = ПолучитьТекстЗапросаДляВходногоКонтроля();
    
    // Добавляем дополнительные условия отбора при необходимости
    Если ПараметрыПерезаполнения <> Неопределено Тогда
        ДополнитьЗапросУсловиями(ЗапросАнализ, ПараметрыПерезаполнения);
    КонецЕсли;
    
    РезультатЗапроса = ЗапросАнализ.Выполнить();
    
    Если Не РезультатЗапроса.Пустой() Тогда
        
        ВыборкаАнализ = РезультатЗапроса.Выбрать();
        
        Если ВыборкаАнализ.Следующий() Тогда
            ЗаполнитьКачественныеПоказателиПоЛабораторномуАнализу(ОснованиеДвиженияЗапасов, ВыборкаАнализ.АнализСсылка);
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

// Перезаполняет основание для движения запасов по композитным пробам
// 
// Параметры:
//  ОснованиеДвиженияЗапасов - ДокументОбъект.гкс_ОснованиеДляДвиженияЗапасов - документ для перезаполнения
//  ПараметрыПерезаполнения - Структура - дополнительные параметры перезаполнения
//
Процедура ПерезаполнитьПоКомпозитнымПробам(ОснованиеДвиженияЗапасов, ПараметрыПерезаполнения)
    
    // Логика перезаполнения по композитным пробам
    // Подбираем лабораторный анализ с назначением "ПриемкаКомпозит"
    
    ЗапросАнализ = Новый Запрос;
    ЗапросАнализ.Текст = ПолучитьТекстЗапросаДляКомпозитныхПроб();
    
    // Добавляем дополнительные условия отбора при необходимости
    Если ПараметрыПерезаполнения <> Неопределено Тогда
        ДополнитьЗапросУсловиями(ЗапросАнализ, ПараметрыПерезаполнения);
    КонецЕсли;
    
    РезультатЗапроса = ЗапросАнализ.Выполнить();
    
    Если Не РезультатЗапроса.Пустой() Тогда
        
        ВыборкаАнализ = РезультатЗапроса.Выбрать();
        
        Если ВыборкаАнализ.Следующий() Тогда
            ЗаполнитьКачественныеПоказателиПоЛабораторномуАнализу(ОснованиеДвиженияЗапасов, ВыборкаАнализ.АнализСсылка);
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

// Дополняет запрос дополнительными условиями отбора
// 
// Параметры:
//  Запрос - Запрос - запрос для дополнения
//  ПараметрыПерезаполнения - Структура - параметры для дополнения запроса
//
Процедура ДополнитьЗапросУсловиями(Запрос, ПараметрыПерезаполнения)
    
    // Добавляем дополнительные условия отбора
    Если ПараметрыПерезаполнения.Свойство("Номенклатура") И ЗначениеЗаполнено(ПараметрыПерезаполнения.Номенклатура) Тогда
        Запрос.УстановитьПараметр("Номенклатура", ПараметрыПерезаполнения.Номенклатура);
    КонецЕсли;
    
    Если ПараметрыПерезаполнения.Свойство("Склад") И ЗначениеЗаполнено(ПараметрыПерезаполнения.Склад) Тогда
        Запрос.УстановитьПараметр("Склад", ПараметрыПерезаполнения.Склад);
    КонецЕсли;
    
    Если ПараметрыПерезаполнения.Свойство("ДатаС") И ЗначениеЗаполнено(ПараметрыПерезаполнения.ДатаС) Тогда
        Запрос.УстановитьПараметр("ДатаС", ПараметрыПерезаполнения.ДатаС);
    КонецЕсли;
    
    Если ПараметрыПерезаполнения.Свойство("ДатаПо") И ЗначениеЗаполнено(ПараметрыПерезаполнения.ДатаПо) Тогда
        Запрос.УстановитьПараметр("ДатаПо", ПараметрыПерезаполнения.ДатаПо);
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти