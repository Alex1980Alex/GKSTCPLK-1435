
#Область ПрограммныйИнтерфейс

// Процедура позволяет конфигурации-потребителю событий зарегистрировать
// свои процедуры обработки вызова асинхронных сервисов
//
// Параметры:
//   Обработчики - Соответствие - коллекция зарегистрированных обработчиков событий
//
Процедура ПриРегистрацииОбработчиковСообщений(Знач Обработчики) Экспорт

	// Для регистрации обработчика необходимо использовать следующий код:
	//
	// АсинхронныеСервисыСлужебный.ДобавитьОбработчикВызова(Обработчики, "rmq.my_queue_name", "check", "МойОбщийМодуль.МойМетодОбработки");
	//
	// Метод обработчика должен иметь 1 параметр:
	//  - Параметр - произвольный объект, переданный в метод с клиентской стороны.
	
	// ВНИМАНИЕ!
	// Переход с версии 0.2: Данный вызов ПриРегистрацииОбработчиковСообщенийАсинх предназначен для бесшовного обновления с версии 0.2
	//
	// Рекомендуется удалить этот вызов и доработать модуль ПолучениеСообщенийПереопределяемый в части регистрации обработчиков
	// асинхронных вызовов. Переопределяемые методы с суффиксом Асинх перенести в модули подсистемы АсинхронныеВызовы
	
	//ПолучениеСообщенийПереопределяемый.ПриРегистрацииОбработчиковСообщенийАсинх(Обработчики);
	
	АсинхронныеСервисыСлужебный.ДобавитьОбработчикВызова(Обработчики,
	                                                     "EnterpriseDataAsynxRPC",
	                                                     "ExecuteAsynxRequest",
	                                                     "гкс_АсинхронныеСервисы.ОбработатьЗапросКСервису",
														 2);
	
КонецПроцедуры

// Возвращается версия протокола обработчика сообщения по умолчанию
//
//  Возвращаемое значение:
//   Число - версия протокола
//
Функция ВерсияПротоколаRPCПоУмолчанию() Экспорт
	
	Возврат 2;
	
КонецФункции

#КонецОбласти
