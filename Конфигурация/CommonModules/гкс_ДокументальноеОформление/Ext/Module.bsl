// @strict-types

#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. гкс_ПроведениеДокументов.СвойстваДокумента).
//
// Возвращаемое значение:
//  Структура - параметры учетного механизма (См. гкс_ПроведениеДокументов.ПараметрыУчетногоМеханизма()).
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = гкс_ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.гкс_ОформленныеПартии);
		
	КонецЕсли;
		
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам.
//
// Параметры:
//   ТаблицыДляДвижений - Структура - таблицы данных документа
//   Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//   Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	гкс_ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "гкс_ОформленныеПартии");
	
КонецПроцедуры

Процедура ПередЗаписьюДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписиДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗнчДокумента = ТипЗнч(Документ);	
	ЭтоОтменаПроведенияДокумента = Документ.ДополнительныеСвойства.ПроведениеДокументов.
		СвойстваДокумента.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
	
	Если ЭтоОтменаПроведенияДокумента 
		 И ТипЗнчДокумента = Тип("ДокументОбъект.гкс_РеестрНакладныхЗПП3") Тогда
		 
		 ОписаниеЗаписи = Новый Структура("РеестрНакладных", Документ.Ссылка);
		 РегистрыСведений.гкс_ОформленныеПартии.УдалитьЗапись(ОписаниеЗаписи);	 
	
	КонецЕсли;
	 
КонецПроцедуры

#КонецОбласти

// Проверяет наличе оформленного реестра накладных для регистрации
//
// Параметры:
//  Документ - ДокументСсылка.гкс_РегистрацияНаПЛК - документ регистрации на ПЛК.
//
// Возвращаемое значение:
//  Булево - Истина, если на документ оформлен реестр накладных иначе - Ложь
//
Функция ОформленРеестрНаРегистрацию(Документ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОформленныеПартии.ДокументРегистрации КАК ДокументРегистрации,
	|	ОформленныеПартии.РеестрНакладных КАК РеестрНакладных
	|ИЗ
	|	РегистрСведений.гкс_ОформленныеПартии КАК ОформленныеПартии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК РегистрацияНаПЛК
	|		ПО ОформленныеПартии.ДокументРегистрации = РегистрацияНаПЛК.Ссылка
	|ГДЕ
	|	ОформленныеПартии.ДокументРегистрации = &ДокументРегистрации
	|	И РегистрацияНаПЛК.ТипРегистрации = ЗНАЧЕНИЕ(Перечисление.гкс_ТипРегистрации.Приемка)";
	
	Запрос.УстановитьПараметр("ДокументРегистрации", Документ);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Проверяет наличе оформленного реестра накладных для движения запасов
//
// Параметры:
//  Документ - ДокументСсылка.гкс_ОснованиеДляДвиженияЗапасов - ссылка на основание движения запасов.
//
// Возвращаемое значение:
//  Булево - Истина, если на документ оформлен реестр накладных иначе - Ложь
//
Функция ОформленРеестрНаДвижениеЗапасов(Документ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОформленныеПартии.ДокументРегистрации КАК ДокументРегистрации,
	|	ОформленныеПартии.РеестрНакладных КАК РеестрНакладных
	|ИЗ
	|	РегистрСведений.гкс_ОформленныеПартии КАК ОформленныеПартии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК РегистрацияНаПЛК
	|		ПО ОформленныеПартии.ДокументРегистрации = РегистрацияНаПЛК.Ссылка
	|ГДЕ
	|	РегистрацияНаПЛК.ТипРегистрации = ЗНАЧЕНИЕ(Перечисление.гкс_ТипРегистрации.Приемка)
	|	И ОформленныеПартии.ОснованиеДвиженияЗапасов = &ОснованиеДвиженияЗапасов";
	
	Запрос.УстановитьПараметр("ОснованиеДвиженияЗапасов", Документ);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти
