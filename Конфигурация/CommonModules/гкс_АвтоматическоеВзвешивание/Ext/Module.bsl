
#Область ПрограммныйИнтерфейс

Процедура ПровестиВзвешивание(РегистрацияНаПЛК, Весы, ДокументВзвешивание) Экспорт
	
	Если РегистрыСведений.гкс_СостоянияРегистрации.УжеУбыл(РегистрацияНаПЛК) Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru='Машина по документу %1 уже убыла!';"), РегистрацияНаПЛК);
	КонецЕсли;

	МаксимальноеКоличествоОпросов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Весы, "МаксимальноеКоличествоОпросов");
		
	МассивПоказаний = гкс_ОбменДаннымиСВесами.РезультатыВзвешивания(
		XMLСтрока(РегистрацияНаПЛК), Весы, МаксимальноеКоличествоОпросов, Истина);
			
	Если ЗначениеЗаполнено(МассивПоказаний) Тогда
			
		ВесВДокументе = ВесВДокументе(РегистрацияНаПЛК, Весы);
		ВесФактический = ФактическийВес(МассивПоказаний, ВесВДокументе);
		
		ТипВзвешивания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Весы, "ТипВзвешивания");
		ДокументВзвешивание = Документы.гкс_Взвешивание.ПоРегистрацииИТипуВзвешивания(РегистрацияНаПЛК, ТипВзвешивания);
		
		ДанныеЗаполнения = ДанныеЗаполненияВзвешивание(РегистрацияНаПЛК, Весы, ВесФактический);
		ЗаполнитьДокументВзвешивание(ДокументВзвешивание, ДанныеЗаполнения); 
	КонецЕсли;	
	
КонецПроцедуры

Функция ДанныеЗаполненияВзвешивание(РегистрацияНаПЛК, Весы, Вес) Экспорт
	
	ДанныеЗаполненния = Новый Структура("Организация,ТочкаМаршрута,ТипРегистрации");
	
	ДанныеЗаполненния.Вставить("Весы", Весы);	
	ДанныеЗаполненния.Вставить("ДокументРегистрации", РегистрацияНаПЛК);
	ДанныеЗаполненния.Вставить("Вес", Вес);
	ДанныеЗаполненния.Вставить("ВесВведенВручную", Ложь);
	ДанныеЗаполненния.Вставить("Дата", ТекущаяДатаСеанса());
	ДанныеЗаполненния.Вставить("МестнаяДата", ДанныеЗаполненния.Дата);
	
	ТипВзвешивания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Весы, "ТипВзвешивания");
	ДанныеЗаполненния.Вставить("ТипВзвешивания", ТипВзвешивания);

	ДанныеРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияНаПЛК, 
						"ТипРегистрации, Организация, ТочкаМаршрута");
							
	ЗаполнитьЗначенияСвойств(ДанныеЗаполненния, ДанныеРегистрации);
	
	Возврат ДанныеЗаполненния;
	
КонецФункции

Процедура ЗаполнитьДокументВзвешивание(ДокументВзвешивание, ДанныеЗаполнения) Экспорт

	Если Не ЗначениеЗаполнено(ДокументВзвешивание) Тогда
		ДокументВзвешивание = Документы.гкс_Взвешивание.СформироватьДокумент(ДанныеЗаполнения);
	Иначе
		ВзвешиваниеОбъект = ДокументВзвешивание.ПолучитьОбъект(); 
		ВзвешиваниеОбъект.Заполнить(ДанныеЗаполнения);
		ВзвешиваниеОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ФактическийВес(МассивПоказаний, ВесВДокументе)
	
	ТаблицаИзмерений = Новый ТаблицаЗначений();
	ТаблицаИзмерений.Колонки.Добавить("Измерение");
	ТаблицаИзмерений.Колонки.Добавить("Отклонение");
	
	Для Сч = 1 по МассивПоказаний.Количество() Цикл
		СтрокаТаблицы = ТаблицаИзмерений.Добавить();
	КонецЦикла;	
	
	ТаблицаИзмерений.ЗагрузитьКолонку(МассивПоказаний, "Измерение");
	
	Для Каждого ЭлементВыборки Из ТаблицаИзмерений Цикл
		ЭлементВыборки.Отклонение = Pow(ЭлементВыборки.Измерение - ВесВДокументе, 2);
	КонецЦикла;	
	
	ТаблицаИзмерений.Сортировать("Отклонение");
	
	Возврат ТаблицаИзмерений[0].Измерение;
	
КонецФункции

Функция ВесВДокументе(РегистрацияНаПЛК, Весы)
	
	ДанныеРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РегистрацияНаПЛК, "ТипРегистрации, ВесБрутто, ВесНетто");
	
	ТипВзвешивания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Весы, "ТипВзвешивания");
	
	Если ДанныеРегистрации.ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка Тогда
		Если ТипВзвешивания = Перечисления.гкс_ТипыВзвешивания.Въезд Тогда
			ВесВДокументе = ДанныеРегистрации.ВесБрутто;
		Иначе	
			ВесВДокументе = ДанныеРегистрации.ВесНетто;		
		КонецЕсли;
		
	ИначеЕсли ДанныеРегистрации.ТипРегистрации = Перечисления.гкс_ТипРегистрации.Отгрузка Тогда
		Если ТипВзвешивания = Перечисления.гкс_ТипыВзвешивания.Въезд Тогда
			ВесВДокументе = ДанныеРегистрации.ВесНетто;
		Иначе	
			ВесВДокументе = ДанныеРегистрации.ВесБрутто;		
		КонецЕсли;
				
	КонецЕсли;	
	
	Возврат ВесВДокументе;
	
КонецФункции	 		

#КонецОбласти
