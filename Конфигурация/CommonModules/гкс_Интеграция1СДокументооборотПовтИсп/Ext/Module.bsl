#Область ПрограммныйИнтерфейс

Функция ПолучитьИмяПользователяИБ() Экспорт
	
	Возврат ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	
КонецФункции

// Функция проверяет наличие ролей у пользователя. Возращает Истина, если роль доступна. 
// Роли в массиве указыват на доступность отбора "Задачи отдела".
//
// Возвращаемое значение:
// 	Булево - признак видимости отбора.
//
Функция ВидимостьОтбораЗадачиОтдела() Экспорт
	
	// В массив добавляются имена ролей руководителей отдела, 
	// которые должны видеть отбор по задачам своего отдела в документообороте. 	
	МассивРолей = Новый Массив;
	МассивРолей.Добавить("ПолныеПрава");
	//МассивРолей.Добавить("гкс_РаботаСоСделкамиРасширенный");
	//МассивРолей.Добавить("гкс_РаботаСЛогистикойРасширенный");
	//МассивРолей.Добавить("гкс_РаботаСАвтоперевозкойРасширенный");
	//МассивРолей.Добавить("гкс_ПраваРуководителяОКП");
	
	СтрокаРолей = СтрСоединить(МассивРолей, ", ");
	
	Возврат Пользователи.РолиДоступны(СтрокаРолей);
	
КонецФункции

// Функция возвращает настройки подключения
// к сервису авторизации 1С:ДО
//
// Возвращаемое значение:
// Структура - структура с данными подключения
//				├ ИмяСервиса - строка - имя сервиса
//				├ ПутьКWSDL - строка
//				├ URIПространстваИмен - строка
//				├ Пользователь - строка
//				├ Пароль - строка
//				└ ИспользоватьАутентификациюОС - булево
//
Функция ПолучитьНастройкиПодключенияСервисаАвторизации() Экспорт

	ИмяВладельцаНастроек	= ПолучитьИмяВладельцаНастроекПодключения();
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ИмяСервиса", "");
	СтруктураВозврата.Вставить("ПутьКWSDL", "");
	СтруктураВозврата.Вставить("URIПространстваИмен", "");
	СтруктураВозврата.Вставить("Пользователь", "");
	СтруктураВозврата.Вставить("Пароль", "");
	СтруктураВозврата.Вставить("ИспользоватьАутентификациюОС", Ложь);
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеБХ = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ИмяВладельцаНастроек,
	"ИмяСервиса, Пользователь, Пароль, ИспользоватьАутентификациюОС, ПутьКWSDL, URIПространстваИмен");
	
	Если НЕ ДанныеБХ = Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ДанныеБХ);
		
	КонецЕсли;
	
	Возврат СтруктураВозврата;

КонецФункции

Функция ПолучитьИмяВладельцаНастроекПодключения() Экспорт
	
	Возврат "гкс_НастройкиСервисаАвторизацииДО";
	
КонецФункции
	
#КонецОбласти 