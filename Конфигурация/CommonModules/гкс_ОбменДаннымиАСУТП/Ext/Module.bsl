#Область ПрограммныйИнтерфейс

// Создает сообщение по событию в формате JSON.
//
// Параметры:
//  Объект - ДокументОбъект.гкс_РегистрацияНаПЛК - документ объект Регистрация на ПЛК.
//  Параметры - Структура.
//
// Возвращаемое значение:
//  Строка - Сообщение в JSON формате.
//
Функция СформироватьСообщение(Объект, Знач Параметры = Неопределено) Экспорт
	
	Перем ДанныеXDTO;
	
	Сообщение = "";
	Если НЕ (ТипЗнч(Объект) <> Тип("УдалениеОбъекта")
		И Объект.ДополнительныеСвойства.Свойство("ОтправкаВАСУТП")
		И Объект.ДополнительныеСвойства.ОтправкаВАСУТП
		И Объект.ДополнительныеСвойства.Свойство("ДанныеXDTO", ДанныеXDTO)) Тогда
		
		Возврат Сообщение;
	КонецЕсли;
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура;		
	КонецЕсли; 
	
	Сообщение = гкс_ОбщегоНазначения.ОбъектXDTOВСтрокуJSON(ДанныеXDTO);
	
	Возврат Сообщение;

КонецФункции

// Выполняет чтение сообщения обмена и его последующую загрузку
//
// Параметры:
// 	Содержимое - Структура - структура, хранящая в себе данные сообщения
//		* Текст - Строка - текст сообщения
//		* СвойстваСообщения - Структура - свойства сообщения. См. ОчередьСообщенийПовтИсп.ВозможныеСвойстваСообщения
//	РезультатыОбработки - Структура - структура, содержащая входящие вспомогательные данные для обработки и результаты
//
Процедура ПрочитатьСообщение(Сообщение, Результат) Экспорт
	
	КомпонентыОбмена = гкс_ОбменДаннымиXDTOСервер.ИнициализироватьКомпонентыОбмена("Получение");
   	КомпонентыОбмена.СостояниеОбменаДанными.ДатаНачала = ТекущаяДатаСеанса();
	
	Ошибка = Неопределено;
	СообщениеОбъект = JSONВОбъектXDTO(Сообщение, Ошибка);
	
	Если ЗначениеЗаполнено(Ошибка) Тогда
				
		гкс_ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(КомпонентыОбмена, Ошибка);	
		ВызватьИсключение(Ошибка);

	Иначе
		
		КомпонентыОбмена.Вставить("ОбъектXDTO", СообщениеОбъект);
		гкс_ИнтеграцияСКверионСервер.ОбработатьВходящееСообщение(
											СообщениеОбъект, 
											КомпонентыОбмена.ЗагруженныеОбъектыСеансаОбмена, 
											Ошибка);
		
		Результат.Вставить("ЗагруженныеОбъекты", КомпонентыОбмена.ЗагруженныеОбъектыСеансаОбмена);

	КонецЕсли;	
	    		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПолучениеСообщений

Функция JSONВОбъектXDTO(Сообщение, Ошибка)
	
	ОбъектXDTO = Неопределено;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Сообщение);
   
    Попытка	
		ОбъектXDTO = ФабрикаXDTO.ПрочитатьJSON(ЧтениеJSON);
	Исключение
        СтрокаСообщенияОбОшибке = НСтр("ru = 'Ошибка при загрузке данных: %1'");
        Ошибка = гкс_СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        			СтрокаСообщенияОбОшибке, ОписаниеОшибки());    
	КонецПопытки;
	
	ЧтениеJSON.Закрыть();
	
	Возврат ОбъектXDTO;

КонецФункции
                       
#КонецОбласти

#Область Общие

Процедура ЗафиксироватьПроблемыОбработки(РезультатыОбработки, Заголовок, Информация);

	//@skip-warning
	ПодробноеПредставление = ПодробноеПредставлениеОшибки(Информация);
	СтрокаСообщения = Заголовок;
	СтрокаСообщения = гкс_СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	СтрокаСообщения, ПодробноеПредставление);
	
	// Тип проблемы определяется в месте непосредственного вызова, 
	// На момент вызова процедуры он должен быть уже заполнен

	РезультатыОбработки.Вставить("ЕстьОшибки", Истина);
	РезультатыОбработки.Вставить("Текст", СтрокаСообщения);
				
КонецПроцедуры

#КонецОбласти 

#КонецОбласти
