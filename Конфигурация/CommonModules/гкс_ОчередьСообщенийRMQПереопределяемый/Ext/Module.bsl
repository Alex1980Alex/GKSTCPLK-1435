#Область СлужебныеПроцедурыИФункции

#Область ФормированиеСообщенийRMQ

// @Skip-warning
Процедура ПриОпределенииКлючаОбъекта(Объект, Ключ) Экспорт  
	ТипОбъекта = ТипЗнч(Объект);
	
	ИспользоватьКлючТранспортныйДокумент = 
		(ТипОбъекта = Тип("ДокументОбъект.гкс_ОснованиеДляДвиженияЗапасов") 
		И ЗначениеЗаполнено(Объект.ТранспортныйДокумент))
		Или ТипОбъекта = Тип("ДокументОбъект.гкс_ТранспортныйДокумент");
	
	Если ИспользоватьКлючТранспортныйДокумент Тогда
		
		Ключ = ?(ТипОбъекта = Тип("ДокументОбъект.гкс_ТранспортныйДокумент"),
			гкс_ОчередьСообщенийRMQ.КлючОбъекта(Объект.Ссылка),
			гкс_ОчередьСообщенийRMQ.КлючОбъекта(Объект.ТранспортныйДокумент));
	
	КонецЕсли;	

КонецПроцедуры

// @Skip-warning
Процедура ПриОпределенииАдресатовОповещенийОбОбработке(Сообщение, Получатели) Экспорт
КонецПроцедуры

#КонецОбласти

#Область ПодпискиНаСобытия

// @Skip-warning
Процедура ПередЗаписьюОбъектовСинхронизацииRMQ(Источник, Отказ) Экспорт
	Если Источник.ДополнительныеСвойства.Свойство("ИсключитьОбратнуюОтправку") Тогда		
		Источник.ДополнительныеСвойства.Вставить("ПропуститьОтправкуВRMQ");
	КонецЕсли;
КонецПроцедуры

// @Skip-warning
Процедура ПриЗаписиОбъектовСинхронизацииRMQ(Источник, Отказ) Экспорт	
КонецПроцедуры

// @Skip-warning
Процедура ПриЗаписиРегистровСинхронизацииRMQ(Источник) Экспорт
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаЗагрузкаEnterpriseData

// @Skip-warning
Процедура ПриОпределенииИменПравилИсключенийПоиска(ИменаПравил) Экспорт
КонецПроцедуры

// @Skip-warning
Процедура ПередВыгрузкойОбъектовПоСсылке(КомпонентыОбмена, 
	СсылкиИзОбъекта, Объект, ПравилоОбработки = Неопределено) Экспорт

	ПроверитьСсылкиИзОбъектаНаНаличиеПОД(КомпонентыОбмена, СсылкиИзОбъекта);	
	
КонецПроцедуры

// Проверяет наличие ПОД в правилах и удаляет элементы из СсылкиИзОбъекта по которым не найдены правила. 
// @Skip-warning
//
// Параметры:
//  КомпонентыОбмена - см. ОбменДаннымиXDTOСервер.ИнициализироватьКомпонентыОбмена.
//  СсылкиИзОбъекта  - Массив - Ссылки на дополнительно выгружаемые объекты вместе с основной выгрузкой.
//
Процедура ПроверитьСсылкиИзОбъектаНаНаличиеПОД(КомпонентыОбмена, СсылкиИзОбъекта)
	
	Если Не ЗначениеЗаполнено(СсылкиИзОбъекта) Тогда
		Возврат;
	КонецЕсли;
	
	МассивУдаляемыхСсылок = Новый Массив;
	
	Для Каждого ЭлементСсылка Из СсылкиИзОбъекта Цикл
		СтрокаПОД = КомпонентыОбмена.ПравилаОбработкиДанных.Найти(ЭлементСсылка.Метаданные(), "ОбъектВыборкиМетаданные");
		
		Если СтрокаПОД = Неопределено Тогда
			МассивУдаляемыхСсылок.Добавить(ЭлементСсылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого УдаляемаяСсылка Из МассивУдаляемыхСсылок Цикл
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(СсылкиИзОбъекта, УдаляемаяСсылка); 
	КонецЦикла;
	
КонецПроцедуры

Функция ВключатьПакетВТаблицуВерсий(Пакет) Экспорт

	Результат = СтрНачинаетсяС(Пакет.ПространствоИмен, 
	гкс_ОбменЧерезУниверсальныйФормат.БазовоеXMLПространствоИменУниверсальныйОбменВендор1С()); 
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработкаСообщенийRMQ 

// Позволяет переопределить обработку сообщения полученного от брокера RMQ.
// Можно выполнить обработку самостоятельно и отказать от дальнейшей
// @Skip-warning
//
// Параметры:
// 	ПараметрыОбработчика - Структура - Контейнер параметров	
//		* Данные - Строка - Данные сообщения в строке 
//		* МетодОбработчик - Строка - Полное имя метода обработчика сообщения
//		* СвойстваСообщений - Структура - Контейнер со свойствами сообщения RMQ
//		* ПодпискаНаОчередь - СправочникСылка.ПодпискиНаОчередиСообщений - Подписка на очередь,
//		по которой получено сообщение
//	 Отказ - Булево - Признак отказа от обработки, признак того, что сообщение требуется отклонить
//	 ВернутьВОчередь - Булево - Признак необходимости возврата в очередь 
//	 СообщениеОбработано - Булево - Признак того, что сообщение уже обработано и дальнейшай 
//                                  обработка не требуется
//
Процедура ПриОбработкеСообщенияВерсияПротокола2(ПараметрыОбработчика, 
	                                            Отказ, 
												ВернутьВОчередь, 
												СообщениеОбработано) Экспорт
КонецПроцедуры

#КонецОбласти

#Область Ядро

Процедура ПриОпределенииПотокаСобытийВходящегоСообщения(Знач СвойстваНовогоСообщенияВСтруктуре,  ПотокСобытий) Экспорт
	
	Перем ТипКонтракта;
	
	ТипСтруктура = Тип("Структура"); 
	гкс_ОбщегоНазначенияКлиентСервер
	         .ПроверитьПараметр(
	          "гкс_ОчередьСообщенийRMQПереопределяемый.ПриОпределенииПотокаСобытийВходящегоСообщения",
	          "СвойстваНовогоСообщенияВСтруктуре",
	          СвойстваНовогоСообщенияВСтруктуре,
	          ТипСтруктура);
	          
	СвойстваНовогоСообщенияВСтруктуре.Свойство("ТипКонтракта", ТипКонтракта);
	Если ТипКонтракта = "1С.Справочник.гкс_ВходящиеСообщенияRMQ" Тогда
		ПотокСобытий = Справочники.гкс_ПотокиСобытий.Служебный;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОпределенииОсновногоПотокаСобытий(ПотокСобытий) Экспорт
КонецПроцедуры

#КонецОбласти

#КонецОбласти
