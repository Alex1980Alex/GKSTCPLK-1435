#Область ПрограммныйИнтерфейс

#Область ПечатьФормированиеНомераПробы

// Параметры:
//  ОписаниеКоманды	 - Структура - сведения о выполняемой команде.см.БСП.Печать
//
Функция ВыполнитьКомандуПечати_АктОтбораКП(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура("Печать", Истина);
	ДополнительныеПараметры = Новый Структура("ОписаниеКоманды", ОписаниеКоманды);
	
	ОткрытьФорму("Документ.гкс_ФормированиеНомераПробы.Форма.НастройкиПечатиАктОтбораОбразцов",
		ПараметрыФормы,
		ОписаниеКоманды.Форма,
		ОписаниеКоманды.Форма.УникальныйИдентификатор,
		,
		,
		Новый ОписаниеОповещения(
			"ПечатьАктаОтбораКПЗавершение", 
			ЭтотОбъект, 
			ДополнительныеПараметры));
			
КонецФункции

// Обработчик оповещения
// Параметры:
//  ПараметрыПечати			 - Структура - см.Документ.гкс_ФормированиеНомераПробы.НастройкиПечатиПоУмолчанию() 
//  ДополнительныеПараметры	 - Структура - см.параметр ф-и гкс_ВыполнитьКомандуПечати_АктОтбораКП()
//
Процедура ПечатьАктаОтбораКПЗавершение(ПараметрыПечати, ДополнительныеПараметры) Экспорт
	
	ОписаниеКоманды = ДополнительныеПараметры.ОписаниеКоманды;
	
	Если ПараметрыПечати <> Неопределено Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			ОписаниеКоманды.МенеджерПечати,
			ОписаниеКоманды.Идентификатор,
			ОписаниеКоманды.ОбъектыПечати,
			ОписаниеКоманды.Форма,
			ПараметрыПечати);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПечатьРеестраЗПП3

Функция ВыполнитьКомандуПечати_ПФЗПП3(ОписаниеКоманды) Экспорт
	                                     
	ПараметрыФормы = Новый Структура("Печать", Истина);
	ДополнительныеПараметры = Новый Структура("ОписаниеКоманды", ОписаниеКоманды);
	
	ОткрытьФорму("Документ.гкс_РеестрНакладныхЗПП3.Форма.гкс_НастройкаПечати_ПФЗПП3",
		ПараметрыФормы,
		ОписаниеКоманды.Форма,
		ОписаниеКоманды.Форма.УникальныйИдентификатор,
		,
		,
		Новый ОписаниеОповещения(
			"ПечатьРеестраЗПП3Завершение", 
			ЭтотОбъект, 
			ДополнительныеПараметры));
	
КонецФункции

Процедура ПечатьРеестраЗПП3Завершение(ПараметрыПечати, ДополнительныеПараметры) Экспорт
	
	ОписаниеКоманды = ДополнительныеПараметры.ОписаниеКоманды;
	
	Если ПараметрыПечати <> Неопределено Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			ОписаниеКоманды.МенеджерПечати,
			ОписаниеКоманды.Идентификатор,
			ОписаниеКоманды.ОбъектыПечати,
			ОписаниеКоманды.Форма,
			ПараметрыПечати);
		
	КонецЕсли;

КонецПроцедуры
#КонецОбласти

#Область ПечатьЛабораторныйАнализ

Функция ВыполнитьКомандуПечати_ПФЗПП47(ОписаниеКоманды) Экспорт
	                                     
	ПараметрыФормы = Новый Структура("Печать", Истина);
	ДополнительныеПараметры = Новый Структура("ОписаниеКоманды", ОписаниеКоманды);
	
	ОткрытьФорму("Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.Форма.НастройкиПечатиЗПП47",
		ПараметрыФормы,
		ОписаниеКоманды.Форма,
		ОписаниеКоманды.Форма.УникальныйИдентификатор,
		,
		,
		Новый ОписаниеОповещения(
			"ПечатьЗПП47Завершение", 
			ЭтотОбъект, 
			ДополнительныеПараметры));
	
КонецФункции

// Выполняет команду печати ПФ_MXL_ЗПП47_АЛЦ_ru.
//
// Параметры:
//  ОписаниеКоманды - Структура
//
// Возвращаемое значение:
// 	Неопределено
//
Функция ВыполнитьКомандуПечати_ПФЗПП47_АЛЦ(ОписаниеКоманды) Экспорт
	                                     
	ПараметрыФормы = Новый Структура("Печать", Истина);
	ДополнительныеПараметры = Новый Структура("ОписаниеКоманды", ОписаниеКоманды);
	ОповещениеЗавершение = Новый ОписаниеОповещения("ПечатьЗПП47Завершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.Форма.НастройкиПечатиЗПП47",
					ПараметрыФормы,
					ОписаниеКоманды.Форма,
					ОписаниеКоманды.Форма.УникальныйИдентификатор,
					,
					,
					ОповещениеЗавершение);
	
КонецФункции

Процедура ПечатьЗПП47Завершение(ПараметрыПечати, ДополнительныеПараметры) Экспорт
	
	ОписаниеКоманды = ДополнительныеПараметры.ОписаниеКоманды;
	
	Если ПараметрыПечати <> Неопределено Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			ОписаниеКоманды.МенеджерПечати,
			ОписаниеКоманды.Идентификатор,
			ОписаниеКоманды.ОбъектыПечати,
			ОписаниеКоманды.Форма,
			ПараметрыПечати);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти               

#Область ПечатьАктОтбораПроб

// Обработчик оповещения
//
Функция ВыполнитьКомандуПечати_ПФ_MXL_АктОтбораПроб(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура("Печать", Истина);
	ДополнительныеПараметры = Новый Структура("ОписаниеКоманды", ОписаниеКоманды);
	
	ОповещениеПродолжения = Новый ОписаниеОповещения(
			"ПечатьАктОтбораПробЗавершение", 
			ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.Форма.НастройкиПечатиАктОтбораПроб",
					ПараметрыФормы,
					ОписаниеКоманды.Форма,
					ОписаниеКоманды.Форма.УникальныйИдентификатор, , ,
					ОповещениеПродолжения);

	Возврат Неопределено;
	
КонецФункции      
		
Процедура ПечатьАктОтбораПробЗавершение(ПараметрыПечати, ДополнительныеПараметры) Экспорт
	
	ОписаниеКоманды = ДополнительныеПараметры.ОписаниеКоманды;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") Тогда
		ОписаниеКоманды.МенеджерПечати = "Обработка.гкс_ПечатьДокументаЛабораторныйАнализ";
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			ОписаниеКоманды.МенеджерПечати,
			ОписаниеКоманды.Идентификатор,
			ОписаниеКоманды.ОбъектыПечати,
			ОписаниеКоманды.Форма,
			ПараметрыПечати);		
	КонецЕсли;

КонецПроцедуры

// Выполняет команду печати ПФ_MXL_АктОтбораПроб_ru.
//
// Параметры:
//  ОписаниеКоманды - Структура
//  
// Возвращаемое значение:
// 	Неопределено
//
Функция ВыполнитьКомандуПечати_ПФ_MXL_АктОтбораПроб_ru(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Печать", Истина);
	ПараметрыФормы.Вставить("ПечатьАктОтбораПроб", Истина);
	ДополнительныеПараметры = Новый Структура("ОписаниеКоманды", ОписаниеКоманды);
	
	ОповещениеПродолжения = Новый ОписаниеОповещения(
			"ПечатьАктОтбораПробЗавершение", 
			ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.Форма.НастройкиПечатиАктОтбораПроб_ru",
					ПараметрыФормы,
					ОписаниеКоманды.Форма,
					ОписаниеКоманды.Форма.УникальныйИдентификатор, , ,
					ОповещениеПродолжения);

	Возврат Неопределено;
	
КонецФункции      


// Выполняет команду печати ПФ_MXL_АктЗабраковкиПартии_ru.
//
// Параметры:
//  ОписаниеКоманды - Структура
//  
// Возвращаемое значение:
// 	Неопределено
//
Функция ВыполнитьКомандуПечати_ПФ_MXL_АктЗабраковкиПартии_ru(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура("Печать", Истина);
	ДополнительныеПараметры = Новый Структура("ОписаниеКоманды", ОписаниеКоманды);
	
	ОповещениеПродолжения = Новый ОписаниеОповещения(
			"ПечатьАктОтбораПробЗавершение", 
			ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Обработка.гкс_ПечатьДокументаЛабораторныйАнализ.Форма.НастройкиПечатиАктОтбораПроб_ru",
					ПараметрыФормы,
					ОписаниеКоманды.Форма,
					ОписаниеКоманды.Форма.УникальныйИдентификатор, , ,
					ОповещениеПродолжения);

	Возврат Неопределено;
	
КонецФункции 
#КонецОбласти  

#Область ПечатьЭтикеткаНаПринтер

// Выполняет команду печати Этикетки сразу на принтер без просмотра табличного документа.
// Параметры:
// ИмяМенеджераПечати - Стока
// ИменаМакетов - Стока
// МассивОбъектов - Массив
// ПараметрыПечати - Структура
Процедура ПечатьЭтикеткаНаПринтер(ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов, ПараметрыПечати) Экспорт
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(
		ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов, ПараметрыПечати);

КонецПроцедуры

// Выполнить команду печати п ф MXL этикетка.
// 
// Параметры:
//  ОписаниеКоманды Описание команды
// 
// Возвращаемое значение:
//  Неопределено - Выполнить команду печати п ф MXL этикетка
Функция ВыполнитьКомандуПечати_ПФ_MXL_Этикетка(ОписаниеКоманды) Экспорт
	
	// Получаем значение константы из дополнительных параметров команды
	ЗначениеКонстанты = гкс_ОбщегоНазначенияВызовСервера.ЗначениеКонстанты("гкс_АвтоматическаяПечатьЭтикеток");
	
	Если ЗначениеКонстанты Тогда
		// Печать без диалога настройки
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("АвтоматическаяПечатьЭтикеток", ЗначениеКонстанты);
		ПечатьЭтикеткаНаПринтер(
			ОписаниеКоманды.МенеджерПечати,
			ОписаниеКоманды.Идентификатор,
			ОписаниеКоманды.ОбъектыПечати,
			ПараметрыПечати);
	Иначе
		Если ОписаниеКоманды.Свойство("Форма") Тогда
			// Стандартная печать с диалогом настройки
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
				ОписаниеКоманды.МенеджерПечати, 
				ОписаниеКоманды.Идентификатор, 
				ОписаниеКоманды.ОбъектыПечати,
				ОписаниеКоманды.Форма);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;

	
КонецФункции

	

#КонецОбласти

#КонецОбласти