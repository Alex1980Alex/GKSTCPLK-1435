
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("АдресДереваМетаданных", АдресДереваМетаданных);
	Параметры.Свойство("ИдентификаторВладельца", ИдентификаторВладельца);
	Параметры.Свойство("ТолькоСсылочныеТипы", ТолькоСсылочныеТипы);
	
	Если ЭтоАдресВременногоХранилища(АдресДереваМетаданных) Тогда
		
		ЗаполнитьДеревоФормы(ПолучитьИзВременногоХранилища(АдресДереваМетаданных));
		
	Иначе
		
		ЗаполнитьДеревоМетаданных();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоМетаданных

&НаКлиенте
Процедура ДеревоМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Если ПроверитьВыбраннуюСтроку(Элементы.ДеревоМетаданных.ТекущиеДанные) Тогда
		
		ВыполнитьВыбор();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если ПроверитьВыбраннуюСтроку(Элементы.ДеревоМетаданных.ТекущиеДанные) Тогда
		
		ВыполнитьВыбор();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьВыбраннуюСтроку(Строка)
	
	Если НЕ ЗначениеЗаполнено(Строка.ПолноеИмя) Тогда
		
		гкс_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Корневые элементы нельзя выбрать в качестве объектов");
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьВыбор()
	
	ТекущиеДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ТекущиеДанные.Имя = "" Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	Результат = Новый Структура;
	Результат.Вставить("Имя", ТекущиеДанные.Имя);
	Результат.Вставить("Синоним", ТекущиеДанные.Синоним);
	Результат.Вставить("АдресДереваМетаданных", АдресДереваМетаданных);
	Результат.Вставить("ПолноеИмя", ТекущиеДанные.ПолноеИмя);
	
	ОповеститьОВыборе(Результат);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоМетаданных()

	ДеревоМетаданных.ПолучитьЭлементы().Очистить();
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Синоним");
	Дерево.Колонки.Добавить("Имя");
	Дерево.Колонки.Добавить("ПолноеИмя");
	Дерево.Колонки.Добавить("ИндексКартинки");
	
	СинонимыИдентификаторы = СинонимыИдентификаторы(ТолькоСсылочныеТипы);
	
	Для Каждого СинонимИдентификатор Из СинонимыИдентификаторы Цикл
		
		МетаданныеКоллекция = Метаданные[СинонимИдентификатор.Имя];
		
		Если МетаданныеКоллекция.Количество() = 0 Тогда
			Продолжить;		
		КонецЕсли;
		
		НоваяСтрокаМД = Дерево.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаМД, СинонимИдентификатор);
		ЗаполнитьИндексКартинки(НоваяСтрокаМД);
		
		ЗаполнитьСтрокуДереваМетаданных(НоваяСтрокаМД, МетаданныеКоллекция);
		
	КонецЦикла; 
	
	ЗаполнитьДеревоФормы(Дерево);
	
	ПоместитьДеревоМетаданных(Дерево);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СинонимыИдентификаторы(ТолькоСсылочныеТипы = Истина)

	СинонимыИдентификаторы = Новый ТаблицаЗначений;
	
	СинонимыИдентификаторы.Колонки.Добавить("Синоним");
	СинонимыИдентификаторы.Колонки.Добавить("Имя");
	СинонимыИдентификаторы.Колонки.Добавить("ТипОбъекта");
	
	ЗаполнитьСтрокуСинонима(СинонимыИдентификаторы.Добавить(), "Справочники" ,"Справочники");
	ЗаполнитьСтрокуСинонима(СинонимыИдентификаторы.Добавить(), "Документы", "Документы");
	ЗаполнитьСтрокуСинонима(СинонимыИдентификаторы.Добавить(), "Планы видов характеристик", "ПланыВидовХарактеристик");
	ЗаполнитьСтрокуСинонима(СинонимыИдентификаторы.Добавить(), "Планы счетов", "ПланыСчетов");
	
	Если НЕ ТолькоСсылочныеТипы Тогда
	
		ЗаполнитьСтрокуСинонима(СинонимыИдентификаторы.Добавить(), "Регистры сведений", "РегистрыСведений");
		ЗаполнитьСтрокуСинонима(СинонимыИдентификаторы.Добавить(), "Регистры накопления", "РегистрыНакопления");
		ЗаполнитьСтрокуСинонима(СинонимыИдентификаторы.Добавить(), "Регистры бухгалтерии", "РегистрыБухгалтерии");
	
	КонецЕсли; 
	
	Возврат СинонимыИдентификаторы;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьИндексКартинки(СтрокаДерева)

	Если СтрокаДерева.Имя = "Справочники" Тогда
		СтрокаДерева.ИндексКартинки = 0;
	ИначеЕсли СтрокаДерева.Имя = "Документы" Тогда	
	    СтрокаДерева.ИндексКартинки = 1;
	ИначеЕсли СтрокаДерева.Имя = "ПланыВидовХарактеристик" Тогда
	    СтрокаДерева.ИндексКартинки = 2;
	ИначеЕсли СтрокаДерева.Имя = "ПланыСчетов" Тогда
		СтрокаДерева.ИндексКартинки = 3;
	ИначеЕсли СтрокаДерева.Имя = "РегистрыСведений" Тогда
		СтрокаДерева.ИндексКартинки = 4;
	ИначеЕсли СтрокаДерева.Имя = "РегистрыНакопления" Тогда
		СтрокаДерева.ИндексКартинки = 5;
	ИначеЕсли СтрокаДерева.Имя = "РегистрыБухгалтерии" Тогда
	    СтрокаДерева.ИндексКартинки = 6;
	Иначе
		СтрокаДерева.ИндексКартинки = 10;
	КонецЕсли; 

КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСтрокуДереваМетаданных(Приемник, Источник)

	Для Каждого СтрокаИсточник Из Источник Цикл
		
		НоваяСтрока = Приемник.Строки.Добавить();
		НоваяСтрока.Имя = СтрокаИсточник.Имя;
		НоваяСтрока.Синоним = СтрокаИсточник.Синоним;
		НоваяСтрока.ПолноеИмя = СтрокаИсточник.ПолноеИмя();
		НоваяСтрока.ИндексКартинки = 10;
		
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСтрокуСинонима(СтрокаТаблицы, Синоним, Идентификатор)
	
	СтрокаТаблицы.Синоним = Синоним;
	СтрокаТаблицы.Имя = Идентификатор;
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьДеревоМетаданных(Дерево)

	АдресДереваМетаданных = ПоместитьВоВременноеХранилище(Дерево, ЭтотОбъект.ИдентификаторВладельца);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоФормы(Дерево)

	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");
	
КонецПроцедуры

#КонецОбласти