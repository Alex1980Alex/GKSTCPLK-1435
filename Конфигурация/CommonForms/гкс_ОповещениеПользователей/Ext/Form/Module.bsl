
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДоступныеУчетныеЗаписи = РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина);
	
	Если ДоступныеУчетныеЗаписи.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не обнаружены доступные учетные записи электронной почты, 
		|обратитесь к администратору системы.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		
		Возврат;
		
	КонецЕсли;
	
	УчетнаяЗапись = ДоступныеУчетныеЗаписи[0].Ссылка;
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТелоПисьмаВHTMLПриИзменении(Элемент)
	
	ТелоПисьмаВHTML.ПолучитьHTML(ТекстШаблонаПисьмаHTML, Новый Структура);
	
КонецПроцедуры

&НаКлиенте
Процедура ТелоСообщенияОбычныйТекстПриИзменении(Элемент)
	
	ТекстШаблонаПисьма = ТелоСообщенияОбычныйТекст.ПолучитьТекст();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПодпискаНаСобытиеПриИзменении(Элемент)
	
	ПодпискаНаСобытиеПриИзмененииНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ШаблонЭлектронногоПисьмаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ШаблонПисьма) Тогда
		
		УстановитьТекстПоШаблону();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПолучатели

&НаКлиенте
Процедура ПолучателиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			
			Для Каждого СтрМассива Из ВыбранноеЗначение Цикл
				
				НайденныеСтроки = Получатели.НайтиСтроки(Новый Структура("Получатель", СтрМассива));
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					
					НовПолучатль = Получатели.Добавить();
					
					НовПолучатль.Получатель = СтрМассива;
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			НайденныеСтроки = Получатели.НайтиСтроки(Новый Структура("Получатель", ВыбранноеЗначение));
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				НовПолучатль = Получатели.Добавить();
				
				НовПолучатль.Получатель = ВыбранноеЗначение;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборАктивныхПользователей(Команда)
	
	ПодборАктивныхПользователейНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектронноеПисьмоОбычныйТекст(Команда)
	
	Если Не Элементы.ФормаЭлектронноеПисьмоОбычныйТекст.Пометка Тогда
		
		УстановитьЭлектронноеПисьмоОбычныйТекст(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектронноеПисьмоHTML(Команда)
	
	Если Не Элементы.ФормаЭлектронноеПисьмоHTML.Пометка Тогда
		
		УстановитьЭлектронноеПисьмоHTML(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПользователей(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора"							, Истина);
	ПараметрыОткрытия.Вставить("СкрытьПользователейБезПользователяИБ"	, Истина);
	ПараметрыОткрытия.Вставить("ПометкаУдаления"						, Ложь);
	ПараметрыОткрытия.Вставить("МножественныйВыбор"						, Истина);
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыОткрытия, Элементы.Получатели, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПисьмо()
	
	ОчиститьСообщения();
	ЕстьОшибочныеПолучатели = Ложь;
	СообщениеОтправлено 	= Ложь;
	
	Если ПоляЗаполненыКорректно() Тогда
		
		Попытка
			
			СообщениеОтправлено = ОтправитьПочтовоеСообщение(ЕстьОшибочныеПолучатели);
			
		Исключение
			
			ТекстОшибки 	= ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаголовокОшибки = НСтр("ru = 'Письмо не отправлено'");
			РаботаСПочтовымиСообщениямиКлиент.СообщитьОбОшибкеПодключения(УчетнаяЗапись, ЗаголовокОшибки, ТекстОшибки);
			
			Возврат;
			
		КонецПопытки;
		
	КонецЕсли;
	
	Если СообщениеОтправлено Тогда
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Сообщение отправлено:'"), ,
			?(ПустаяСтрока(ТемаПисьма), НСтр("ru = '<Без темы>'"), ТемаПисьма), БиблиотекаКартинок.Информация32);
		
		Если ЕстьОшибочныеПолучатели Тогда
			
			ПоказатьПредупреждение(, НСтр("ru = 'Письмо отправлено не всем получателям.'"));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодборАктивныхПользователейНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивСоединений 					= ПолучитьСоединенияИнформационнойБазы();
	МассивИдентификаторовПользователей 	= Новый Массив();
	
	Для Каждого СтрМассиваСоединений Из МассивСоединений Цикл
		
		ИДПользователя = "" + СтрМассиваСоединений.Пользователь.УникальныйИдентификатор;
		
		Если НЕ ИДПользователя = "00000000-0000-0000-0000-000000000000" Тогда
			
			МассивИдентификаторовПользователей.Добавить(ИДПользователя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ИдентификаторПользователяИБ В (&ИдентификаторыПользователяИБ)";
	
	Запрос.УстановитьПараметр("ИдентификаторыПользователяИБ", МассивИдентификаторовПользователей);
	
	РезультатВыполнения = Запрос.Выполнить();
	
	Если НЕ РезультатВыполнения.Пустой() Тогда
		
		Выборка = РезультатВыполнения.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НайденныеСтроки = Получатели.НайтиСтроки(Новый Структура("Получатель", Выборка.Пользователь));
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				НоваяСтрокаПолучателя = Получатели.Добавить();
				
				НоваяСтрокаПолучателя.Получатель = Выборка.Пользователь;
				
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПодпискаНаСобытиеПриИзмененииНаСервере()
	
	ОчиститьНастройкиПодписки 	= Ложь;
	ОчиститьТекстШаблона 		= Ложь;
	
	Если ЗначениеЗаполнено(ПодпискаНаСобытие) Тогда
		
		Если ЗначениеЗаполнено(ПодпискаНаСобытие.ШаблонЭлектронногоПисьма) Тогда
			
			ШаблонПисьма = ПодпискаНаСобытие.ШаблонЭлектронногоПисьма;
			
			Если ЗначениеЗаполнено(ШаблонПисьма) Тогда
				
				УстановитьТекстПоШаблону();
				
			КонецЕсли;
			
		Иначе
			
			ОчиститьТекстШаблона = Истина;
			
		КонецЕсли;
		
		Получатели.Очистить();
		НайденныеПодписчики = ПодпискаНаСобытие.Получатели.НайтиСтроки(Новый Структура("Исключен", Ложь));
		
		Для Каждого СтрПолучатели ИЗ НайденныеПодписчики Цикл
			
			НайденныеПолучатели = Получатели.НайтиСтроки(Новый Структура("Получатель", СтрПолучатели.Подписчик));
			
			Если НайденныеПолучатели.Количество() = 0 Тогда
				
				НовСтрокаПолучатели = Получатели.Добавить();
				
				НовСтрокаПолучатели.Получатель = СтрПолучатели.Подписчик;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ОчиститьНастройкиПодписки = Истина;
		
	КонецЕсли;
	
	Если ОчиститьНастройкиПодписки Тогда
		
		Получатели.Очистить();
		ОчиститьТекстШаблона = Истина;
		
	КонецЕсли;
	
	Если ОчиститьТекстШаблона Тогда
		
		ТемаПисьма = "";
		ТелоСообщенияОбычныйТекст.Очистить();
		ТелоПисьмаВHTML.УстановитьHTML("", Новый Структура);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Функция ПоляЗаполненыКорректно()
	
	Результат = Истина;
	
	Если Получатели.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Заполните получателя письма'"), , "ПочтовыеАдресаПолучателей");
			
		Результат = Ложь;
		
	КонецЕсли;
	
	МассивПолучателей = ПодготовитьАдресаПолучателей();
	
	Для Каждого ПолучательПочты Из МассивПолучателей Цикл
		
		Если Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(ПолучательПочты, Ложь) Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Неверный адрес электронной почты: %1'"), ПолучательПочты));
				
			Результат = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


&НаСервере
Функция ОтправитьПочтовоеСообщение(ЕстьОшибочныеПолучатели)
	
	ПараметрыПисьма = СформироватьПараметрыПисьма();
	
	Если ПараметрыПисьма = Неопределено Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Письмо 				= РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(УчетнаяЗапись, ПараметрыПисьма);
	РезультатОтправки 	= РаботаСПочтовымиСообщениями.ОтправитьПисьмо(УчетнаяЗапись, Письмо);
	РаботаСПочтовымиСообщениямиПереопределяемый.ПослеОтправкиПисьма(ПараметрыПисьма);
	
	ОшибочныеПолучатели = РезультатОтправки.ОшибочныеПолучатели;
	
	Если ОшибочныеПолучатели.Количество() > 0 Тогда
		
		Для Каждого ОшибочныйПолучатель Из ОшибочныеПолучатели Цикл
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: %2'"),
				ОшибочныйПолучатель.Ключ, ОшибочныйПолучатель.Значение);
				
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
			
		КонецЦикла;
		
		ЕстьОшибочныеПолучатели = Истина;
		
		Возврат Получатели.Количество() > ОшибочныеПолучатели.Количество();
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СформироватьПараметрыПисьма()
	
	ПараметрыПисьма = Новый Структура;
	Кому 			= Новый Массив;
	
	ПочтовыеАдресаПолучателей = ПодготовитьАдресаПолучателей();
	
	Для Каждого Получатель Из ПочтовыеАдресаПолучателей Цикл
		
		Кому.Добавить(Новый Структура("Адрес, Представление", Получатель, Получатель));
		
	КонецЦикла;
	
	Если Кому.Количество() > 0 Тогда
		
		ПараметрыПисьма.Вставить("Кому", Кому);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТемаПисьма) Тогда
		
		ПараметрыПисьма.Вставить("Тема", ТемаПисьма);
		
	КонецЕсли;
	
	Если ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.ОбычныйТекст Тогда
		
		ПараметрыПисьма.Вставить("Тело", ТелоСообщенияОбычныйТекст);
		
	Иначе
		
		ПараметрыПисьма.Вставить("Тело", ТелоПисьмаВHTML);
		
	КонецЕсли;
	
	Возврат ПараметрыПисьма;
	
КонецФункции

&НаСервере
Функция ПодготовитьАдресаПолучателей()
	
	МассивПолучателей 	= Новый Массив;
	МассивПользователей = Новый Массив;
	
	Для Каждого СтрПолучатель Из Получатели Цикл
		
		Если ТипЗнч(СтрПолучатель.Получатель) = Тип("Строка") Тогда
			
			МассивПолучателей.Добавить(СтрПолучатель.Получатель);
			
		Иначе
			
			МассивПользователей.Добавить(СтрПолучатель.Получатель);
			
		КонецЕсли;
		
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПользователиКонтактнаяИнформация.Представление КАК АдресЭП
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
	|ГДЕ
	|	ПользователиКонтактнаяИнформация.Ссылка В(&МассивПользователей)
	|	И ПользователиКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресэлектроннойПочты)";
	
	Запрос.УстановитьПараметр("МассивПользователей", МассивПользователей);
	
	РезультатВыполнения = Запрос.Выполнить();
	
	Если НЕ РезультатВыполнения.Пустой() Тогда
		
		Выборка = РезультатВыполнения.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			МассивПолучателей.Добавить(Выборка.АдресЭП);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивПолучателей;
	
КонецФункции

&НаСервере
Процедура УстановитьЭлектронноеПисьмоОбычныйТекст(ТребуетсяПереносТекста = Ложь)
	
	Элементы.ФормаВидТекстаЭлектронногоПисьма.Заголовок = НСтр("ru = 'Обычный текст'");
	Элементы.СообщениеЭлектронноеПисьмоHTML.Видимость 	= Ложь;
	Элементы.СообщениеЭлектронноеПисьмо.Видимость 		= Истина;
	Элементы.Страницы.ТекущаяСтраница 					= Элементы.СообщениеЭлектронноеПисьмо;
	Элементы.ФормаЭлектронноеПисьмоОбычныйТекст.Пометка = Истина;
	Элементы.ФормаЭлектронноеПисьмоHTML.Пометка 		= Ложь;
	ТипТекстаПисьма 									= Перечисления.СпособыРедактированияЭлектронныхПисем.ОбычныйТекст;
	
	Если ТребуетсяПереносТекста Тогда
		
		ШаблонОбычнымТекстом 		= ТелоПисьмаВHTML.ПолучитьТекст();
		ТелоСообщенияОбычныйТекст.УстановитьТекст(ШаблонОбычнымТекстом);
		ТекстШаблонаПисьма 			= ШаблонОбычнымТекстом;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЭлектронноеПисьмоHTML(ТребуетсяПереносТекста = Ложь)
	
	Элементы.ФормаВидТекстаЭлектронногоПисьма.Заголовок = "HTML";
	Элементы.СообщениеЭлектронноеПисьмо.Видимость 		= Ложь;
	Элементы.СообщениеЭлектронноеПисьмоHTML.Видимость 	= Истина;
	Элементы.Страницы.ТекущаяСтраница 					= Элементы.СообщениеЭлектронноеПисьмоHTML;
	Элементы.ФормаЭлектронноеПисьмоОбычныйТекст.Пометка = Ложь;
	Элементы.ФормаЭлектронноеПисьмоHTML.Пометка 		= Истина;
	ТипТекстаПисьма 									= Перечисления.СпособыРедактированияЭлектронныхПисем.HTML;
	
	Если ТребуетсяПереносТекста Тогда
		
		ВложенияФорматированныйДокумент = Новый Структура;
		ТелоСообщенияОбычныйТекстВHTML 	= СтрЗаменить(ТелоСообщенияОбычныйТекст.ПолучитьТекст(), Символы.ПС, "<br>");
		ТелоПисьмаВHTML.УстановитьHTML(ТелоСообщенияОбычныйТекстВHTML, ВложенияФорматированныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстПоШаблону()
	
	ПараметрыШаблона = ШаблоныСообщенийСлужебный.ПараметрыШаблона(ШаблонПисьма);
	
	ПараметрыТекстаСообщения = ШаблоныСообщенийСлужебный.ПараметрыИзТекстаСообщения(ПараметрыШаблона);
	
	ШаблоныСообщенийСлужебный.ЗаполнитьОбщиеРеквизиты(ПараметрыТекстаСообщения["ОбщиеРеквизиты"]);
	
	ТекстыИзШаблона = УстановитьЗначенияРеквизитовВТекстСообщения(ПараметрыШаблона, ПараметрыТекстаСообщения);
	
	Если ШаблонПисьма.ТипТекстаПисьма = Перечисления.СпособыРедактированияЭлектронныхПисем.ОбычныйТекст Тогда
		
		ВложенияФорматированныйДокумент = Новый Структура;
		ТелоСообщенияОбычныйТекстВHTML 	= СтрЗаменить(ТекстыИзШаблона.Текст, Символы.ПС, "<br>");
		ТелоПисьмаВHTML.УстановитьHTML(ТелоСообщенияОбычныйТекстВHTML, ВложенияФорматированныйДокумент);
		
		УстановитьЭлектронноеПисьмоОбычныйТекст(Истина);
		
	Иначе
		
		ТелоСообщенияОбычныйТекст.УстановитьТекст(ТекстыИзШаблона.Текст);
		
		УстановитьЭлектронноеПисьмоHTML(Истина);
		
	КонецЕсли;
	
	ТемаПисьма = ТекстыИзШаблона.Тема;
	
КонецПроцедуры

&НаСервере
Функция УстановитьЗначенияРеквизитовВТекстСообщения(ПараметрыШаблона, ПараметрыТекстаСообщения)
	
	Результат = Новый Структура("Тема, Текст");
	
	Результат.Тема 	= ШаблоныСообщенийСлужебный.ВставитьПараметрыВСтрокуСогласноТаблицеПараметров(ПараметрыШаблона.Тема,
	 ПараметрыТекстаСообщения);
	Результат.Текст = ШаблоныСообщенийСлужебный.ВставитьПараметрыВСтрокуСогласноТаблицеПараметров(ПараметрыШаблона.Текст,
	 ПараметрыТекстаСообщения);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
