
#Область ИнициализацияПеременных

&НаКлиенте
Перем ИдентификаторЗамераПроведение;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализацияФормы();
		
	УстановитьВидимостьДоступностьОбъектов();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        ИдентификаторЗамераПроведение = 
		ОценкаПроизводительностиКлиент.ЗамерВремени("ПроведениеДокумента.Интерактивно.ЗаписьВОчередьПриемкиПЛК", 
		                                            Истина);
	КонецЕсли;
	
	Если Объект.НачалоПериода > Объект.ОкончаниеПериода Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Начало периода должно быть меньше окончания периода!'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		
		ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведение, "");
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
		
	Оповестить("ИзмененаОчередь", Объект.Ссылка);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ОценкаПроизводительностиКлиент.УстановитьПризнакОшибкиЗамера(ИдентификаторЗамераПроведение, Ложь);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	гкс_ОбщегоНазначенияПЛККлиент.ПровестиИЗакрыть(ЭтотОбъект, Ложь);	
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	гкс_ОбщегоНазначенияПЛККлиент.Провести(ЭтотОбъект, Ложь);
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
		
	ЗначениеОтбора = Новый Структура;
	ЗначениеОтбора.Вставить("Контрагент", Объект.Контрагент);
	ЗначениеОтбора.Вставить("Номенклатура", Объект.Номенклатура);
	ЗначениеОтбора.Вставить("Статус", 
		ПредопределенноеЗначение("Перечисление.гкс_СтатусыСпецификацийКДоговорамКонтрагентов.Действует"));
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ЗначениеОтбора);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбораСпецификации", ЭтотОбъект);
	
	ОткрытьФорму("Документ.гкс_СпецификацияКДоговоруКонтрагента.Форма.ФормаВыбораПоНоменклатуре", ПараметрыФормы,
		ЭтотОбъект, , , , ОбработкаВыбора,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				 				 
КонецПроцедуры

&НаКлиенте
Процедура ТочкаМаршрутаПриИзменении(Элемент)
	ИнициализацияФормы();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	Если Параметры.Ключ.Пустая() Тогда
		Статус = ПредопределенноеЗначение("Перечисление.гкс_СтатусыЭлектроннойОчереди.Ожидается");
	Иначе
		Статус = ПолучитьТекущийСтатус();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьОбъектов()
	
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
	
	Элементы.ТочкаМаршрута.ТолькоПросмотр = НЕ ЭтоПолноправныйПользователь;
	
	Элементы.Отменено.Видимость = Объект.Отменено;
	
	Если ЭтоКладовщикВесовщик Тогда
		
		СекундВЧасе = гкс_ОбщегоНазначенияКлиентСервер.СекундВЧасе();
		ЧасовКонтроля = 2;
		
		БлижайшиеДваЧаса = ТекущаяДатаСеанса() + ЧасовКонтроля * СекундВЧасе;
		
		Если Объект.НачалоПериода >= БлижайшиеДваЧаса Тогда
			ТолькоПросмотр = Истина;
		КонецЕсли;
				
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьТекущийСтатус()
	
	Возврат РегистрыСведений.гкс_СтатусыЗаписейВОчередиПриемкиПЛК.ТекущийСтатус(Объект.Ссылка);
		
КонецФункции

&НаСервереБезКонтекста
Функция ОрганизацияСпецификации(Спецификация)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Спецификация, "Организация");
	
КонецФункции

#Область ОбработчикиОбратныхВызовов

&НаКлиенте
Процедура ПриЗакрытииФормыВыбораСпецификации(Значение, ДопПараметры) Экспорт
	
	Если Значение = Неопределено Тогда
		Объект.Спецификация = Неопределено;
		Объект.Организация = Неопределено;
	Иначе
		Объект.Спецификация = Значение;
		Объект.Организация = ОрганизацияСпецификации(Значение);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти