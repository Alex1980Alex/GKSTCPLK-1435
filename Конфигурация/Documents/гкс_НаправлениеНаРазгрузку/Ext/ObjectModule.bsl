#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
	
// проверка на наличие уже созданного документа гкс_НаправлениеНаРазгрузку  по  документу регистрации
// 
// Параметры:
//  Регистрация - ДокументСсылка.гкс_РегистрацияНаПЛК
// 
// Возвращаемое значение:
//  Булево - Истина, если есть документ
//
Функция СуществуетДокументПоРегистрации(Регистрация, Ошибки = Неопределено) Экспорт
	
	НаправлениеНаРазгрузкуСсылка = Документы.гкс_НаправлениеНаРазгрузку.ПолучитьПоРегистрации(Регистрация);
	
	Если ЗначениеЗаполнено(НаправлениеНаРазгрузкуСсылка) 
		И (ЭтоНовый() ИЛИ НаправлениеНаРазгрузкуСсылка <> Ссылка) Тогда
			
		Результат = Истина;
		ТекстОшибки = НСтр("ru = 'По документу %1 
						|уже существует ""Направление на разгрузку"": %2'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, Регистрация, НаправлениеНаРазгрузкуСсылка);				
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстОшибки);		
	Иначе	
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции	

#КонецОбласти	
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// для уникальности НаправленияОтгрузки по Регистрации: проверка на наличие уже созданного документа
	Ошибки = Неопределено;
	Если СуществуетДокументПоРегистрации(ДокументРегистрации, Ошибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
		Возврат;
	КонецЕсли;	
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ЗапретИзмененияДокументаПоРеестру(Отказ) Тогда		
       Возврат;
	КонецЕсли;
	
	гкс_ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ЗаполнитьОрганизацию();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗапретИзмененияДокументаПоРеестру(Отказ) Тогда		
       Возврат;
	КонецЕсли;
	
	гкс_ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	гкс_ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	гкс_ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ТипРегистрации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРегистрации, "ТипРегистрации");
	Если ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка Тогда
		ПроверяемыеРеквизиты.Добавить("СлужебнаяНоменклатура");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьОрганизацию()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда 
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРегистрации, "Организация");
	КонецЕсли;
	
КонецПроцедуры

Функция ЗапретИзмененияДокументаПоРеестру(Отказ)
	
	Если гкс_ПриемкаТранспорта.ЗапретИзмененияДокументаПоРеестру(Ссылка) Тогда		
		Отказ = Истина;
		ИмяСобытия = НСтр("ru = 'Запрет изменения документа'");
		ТекстШаблона = НСтр("ru = 'Не удалось записать документ: %1 т.к. уже оформлен реестр ЗПП-3'");
				
		ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,
			УровеньЖурналаРегистрации.Предупреждение, Метаданные.Документы.гкс_НаправлениеНаРазгрузку, 
			Ссылка, СтрШаблон(ТекстШаблона, Ссылка));

		Возврат Истина;
	   
	Иначе
		Возврат Ложь;
	КонецЕсли;
   
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
#КонецЕсли
