#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;	

	Если Статус = Перечисления.гкс_СтатусыСпецификацийКДоговорамКонтрагентов.НеСогласована
		ИЛИ Статус = Перечисления.гкс_СтатусыСпецификацийКДоговорамКонтрагентов.Отклонена Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если Статус = Перечисления.гкс_СтатусыСпецификацийКДоговорамКонтрагентов.Новая Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	ПроверкаИдентификаторовСтроки();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	гкс_ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Статус = Перечисления.гкс_СтатусыСпецификацийКДоговорамКонтрагентов.НеСогласована;
	
	УстановитьСтатус("НеСогласована", Неопределено);
	
КонецПроцедуры

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

#Область Прочее

// Устанавливает статус для объекта документа
//
// Параметры:
// 		НовыйСтатус - Строка - Имя статуса, который будет установлен у заказов
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров установки статуса
//
// Возвращаемое значение:
// 		Булево - Истина, в случае успешной установки нового статуса
//
Функция УстановитьСтатус(НовыйСтатус, ДополнительныеПараметры) Экспорт

	ЗначениеНовогоСтатуса = Перечисления.гкс_СтатусыСпецификацийКДоговорамКонтрагентов[НовыйСтатус];
		
	Статус = ЗначениеНовогоСтатуса;
	
	Возврат ПроверитьЗаполнение();

КонецФункции         

// Процедура - Проверка идентификаторов строки
// проверяет заполнение идентификаторов строки в ТС Товары, 
// если реквизит пустой заполяет его
// необходимо, для случаев загрузки из других систем
//
Процедура ПроверкаИдентификаторовСтроки()
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		СтрокаТЧ.ИдентификаторСтроки	= ?(ПустаяСтрока(СтрокаТЧ.ИдентификаторСтроки),
		Строка(Новый УникальныйИдентификатор),
		СтрокаТЧ.ИдентификаторСтроки);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
