#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ЭлектроннаяОчередьОтгрузки");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = гкс_ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, Документ);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицагкс_ОчередьОтгрузкиПЛК(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицагкс_СтатусыЗаписейВОчередиПриемкиПЛК(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат гкс_ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ТочкаМаршрута)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	ДанныеДокумента.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ДанныеДокумента.Номенклатура КАК Номенклатура,
	|	ДанныеДокумента.НомерДоговора КАК НомерДоговора,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.НомерТранспортногоСредства КАК НомерТранспортногоСредства,
	|	ДанныеДокумента.Отменено КАК Отменено,
	|	ДанныеДокумента.Вес КАК Вес
	|ИЗ
	|	Документ.гкс_ЗаписьВОчередьОтгрузкиПЛК КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",				Реквизиты.Период);
	Запрос.УстановитьПараметр("ТочкаМаршрута",		Реквизиты.ТочкаМаршрута);
	Запрос.УстановитьПараметр("НачалоПериода",		Реквизиты.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",	Реквизиты.ОкончаниеПериода);
	Запрос.УстановитьПараметр("Номенклатура",		Реквизиты.Номенклатура);
	Запрос.УстановитьПараметр("Договор",			Реквизиты.НомерДоговора);
	Запрос.УстановитьПараметр("Контрагент",			Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("НомерТранспортногоСредства",	Реквизиты.НомерТранспортногоСредства);
	Запрос.УстановитьПараметр("Вес",				Реквизиты.Вес);								
	Запрос.УстановитьПараметр("Отменено",			Реквизиты.Отменено);
	Запрос.УстановитьПараметр("ТекущаяДата",		ТекущаяДатаСеанса());
		
КонецПроцедуры

Процедура ТекстЗапросаТаблицагкс_ОчередьОтгрузкиПЛК(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "гкс_ОчередьОтгрузкиПЛК";
	
	Если НЕ гкс_ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Номенклатура КАК Номенклатура,
	|	&НачалоПериода КАК НачалоПериода,
	|	&ОкончаниеПериода КАК ОкончаниеПериода,
	|	&Договор КАК Договор,
	|	&Контрагент КАК Контрагент,
	|	&НомерТранспортногоСредства КАК НомерТранспортногоСредства
	|ГДЕ
	|	НЕ &Отменено";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВТ_ОчередьПриемкиПЛК(Запрос)
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	Статусы.Период КАК Период,
	|	ИСТИНА КАК Активность,
	|	Статусы.ТочкаМаршрута КАК ТочкаМаршрута,
	|	&НачалоПериода КАК НачалоПериода,
	|	Статусы.ЗаписьВОчередь КАК ЗаписьВОчередь,
	|	Статусы.Статус КАК Статус,
	|	Статусы.Комментарий КАК Комментарий,
	|	Статусы.ЧасовойПояс КАК ЧасовойПояс
	|ПОМЕСТИТЬ ВТ_ОчередьПриемкиПЛК
	|ИЗ
	|	РегистрСведений.гкс_СтатусыЗаписейВОчередиПриемкиПЛК.СрезПоследних(, ЗаписьВОчередь = &Ссылка) КАК Статусы
	|ГДЕ
	|	НЕ &Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	Статусы.Период,
	|	ИСТИНА,
	|	Статусы.ТочкаМаршрута,
	|	&НачалоПериода,
	|	Статусы.ЗаписьВОчередь,
	|	ВЫБОР
	|		КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.гкс_СтатусыЭлектроннойОчереди.Ожидается)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.гкс_СтатусыЭлектроннойОчереди.Отменен)
	|		ИНАЧЕ Статусы.Статус
	|	КОНЕЦ,
	|	Статусы.Комментарий,
	|	Статусы.ЧасовойПояс
	|ИЗ
	|	РегистрСведений.гкс_СтатусыЗаписейВОчередиПриемкиПЛК.СрезПоследних(, ЗаписьВОчередь = &Ссылка) КАК Статусы
	|ГДЕ
	|	&Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	&ТекущаяДата,
	|	ИСТИНА,
	|	&ТочкаМаршрута,
	|	&НачалоПериода,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.гкс_СтатусыЭлектроннойОчереди.Ожидается),
	|	"""",
	|	""""
	|ГДЕ
	|	НЕ &Отменено";
	
	Запрос.Выполнить();
	
КонецПроцедуры
	
Процедура ТекстЗапросаТаблицагкс_СтатусыЗаписейВОчередиПриемкиПЛК(Запрос, ТекстыЗапроса, Регистры)
	
	// 1. Если отменено, то, если текущий статус Ожидается, то устанавливаем Отменен
	// 2. Если не отменено и не установлен текущий статус, то установить Ожидается
	// 3. Если не отменено и установлен статус, то обновляем НачалоПериода
	
	ИмяРегистра = "гкс_СтатусыЗаписейВОчередиПриемкиПЛК";
	
	Если НЕ гкс_ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстЗапросаТаблицаВТ_ОчередьПриемкиПЛК(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТ_ОчередьПриемкиПЛК.Период КАК Период,
	|	ИСТИНА КАК Активность,
	|	ВТ_ОчередьПриемкиПЛК.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ВТ_ОчередьПриемкиПЛК.НачалоПериода КАК НачалоПериода,
	|	ВТ_ОчередьПриемкиПЛК.ЗаписьВОчередь КАК ЗаписьВОчередь,
	|	ВТ_ОчередьПриемкиПЛК.Статус КАК Статус,
	|	ВТ_ОчередьПриемкиПЛК.Комментарий КАК Комментарий,
	|	ВТ_ОчередьПриемкиПЛК.ЧасовойПояс КАК ЧасовойПояс
	|ИЗ
	|	ВТ_ОчередьПриемкиПЛК КАК ВТ_ОчередьПриемкиПЛК
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

#КонецОбласти 
	
#КонецОбласти 

#КонецЕсли
