#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВариантыОтчетов

// Определяет список команд отчетов.
//
// Параметры:
//  КомандыОтчетов - см. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//  Параметры - см. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

// СтандартныеПодсистемы.Печать

// Переопределяет настройки печати для объекта.
//
// Параметры:
//  Настройки - см. УправлениеПечатью.НастройкиПечатиОбъекта.
//
Процедура ПриОпределенииНастроекПечати(Настройки) Экспорт
	
	Настройки.ПриДобавленииКомандПечати = Истина;
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Отраслевая форма ЗПП-16
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ЗПП16";
	КомандаПечати.Представление = НСтр("ru = 'Приказ об отпуске хлебопродуктов (ЗПП-16)'");
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;    
	КомандаПечати.Порядок       = 10;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  ПараметрыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыПечати
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЗПП16") Тогда
			ТабличныйДокумент = ПечатьЗПП16(МассивОбъектов, ОбъектыПечати);
			
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"ПФ_MXL_ЗПП16",
				НСтр("ru = 'Приказ об отпуске хлебопродуктов (ЗПП-16)'"),
				ТабличныйДокумент, ,
				"Документ.гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16.ПФ_MXL_ЗПП16");
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует табличный документ с печатной формой ЗПП-16,
//
// Параметры:
//  МассивОбъектов - Массив из ЛюбаяСсылка - список объектов, для которых была выполняется команда печати;
//  ОбъектыПечати  - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//
// Возвращаемое значение:
//   ТабличныйДокумент   - печатная форма
//
Функция ПечатьЗПП16(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ЗПП16";

	Макет = УправлениеПечатью.МакетПечатнойФормы(
		"Документ.гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16.ПФ_MXL_ЗПП16");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаДляФормированияПечатнойФормыЗПП16(НомераТаблиц);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Шапка = РезультатЗапроса[НомераТаблиц.Шапка].Выбрать();
	
	Накладные = РезультатЗапроса[НомераТаблиц.Накладные].Выгрузить();
	Накладные.Индексы.Добавить("Ссылка");

	ПараметрыЗПП16 = Новый Структура;
	ПараметрыЗПП16.Вставить("Накладные", Накладные);

	РуководительЛабораторииФИО = гкс_ФормированиеПечатныхФорм.РуководительЛабораторииФИО();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Строка");

		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Руководитель = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(
			Шапка.Руководитель);
		ОбластьМакета.Параметры.ГлавныйБухгалтер = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(
			Шапка.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.РуководительЛаборатории = РуководительЛабораторииФИО;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ПараметрыЗПП16.Вставить("Ссылка", Шапка.Ссылка);
		
		ПечатьЗПП16ОборотнаяСторона(ТабличныйДокумент, Макет, ПараметрыЗПП16);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьПоступлениеТоваров()

// формирует оборотную сторону ЗПП16
//
// Параметры:
//  ТабличныйДокумент  - ТабличныйДокумент - Табличный документ
//  Макет              - ТабличныйДокумент - Макет
//  ПараметрыЗПП16     - Структура - параметры формирования оборотной стороны
//
Процедура ПечатьЗПП16ОборотнаяСторона(ТабличныйДокумент, Макет, ПараметрыЗПП16)

	ВсегоСтрокОборотнойСтороны = 7;
	ВывелиСтрок = 0;
	Накладные = ПараметрыЗПП16.Накладные;
	Отбор = Новый Структура("Ссылка", ПараметрыЗПП16.Ссылка);
	СтрокиДокумента = Накладные.НайтиСтроки(Отбор);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяШапка");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяСтрока");
	
	ГруппКолонок = 3;
	Счетчик = 1;
	Для Каждого Строка Из СтрокиДокумента Цикл
		Если Счетчик > ГруппКолонок Тогда
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ВывелиСтрок = ВывелиСтрок + 1;
			Счетчик = 1;
			ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяСтрока");
		КонецЕсли;
		ОбластьМакета.Параметры["ДатаНак" + Счетчик] = Строка.ДатаНакладной;
		ОбластьМакета.Параметры["НомерНак" + Счетчик] = Строка.НомерНакладной;
		ОбластьМакета.Параметры["МассаНетто" + Счетчик] = Строка.МассаНетто;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	ТабличныйДокумент.Вывести(ОбластьМакета);
	ВывелиСтрок = ВывелиСтрок + 1;
	ВывелиСтрок = ВывелиСтрок + 1;
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяСтрокаПустая");
	Для Счетчик = ВывелиСтрок По ВсегоСтрокОборотнойСтороны Цикл
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяПодвал");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

// Возвращает текст запроса для формирования печатной формы ЗПП-16
//
// Возвращаемое значение:
//   Строка   - текст запроса
//
Функция ТекстЗапросаДляФормированияПечатнойФормыЗПП16(НомераТаблиц)
	
	НомераТаблиц.Вставить("Шапка", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Накладные", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПриказНаОтпускПродукции.Ссылка КАК Ссылка,
	|	ПриказНаОтпускПродукции.Номер КАК Номер,
	|	ПриказНаОтпускПродукции.Дата КАК Дата,
	|	ПриказНаОтпускПродукции.Организация КАК Организация,
	|	ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК ОрганизацияНаименованиеПолное,
	|	ЕСТЬNULL(Организации.КодПоОКПО, """") КАК ОКПО,
	|	ПриказНаОтпускПродукции.Контрагент КАК Контрагент,
	|	ПриказНаОтпускПродукции.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ПриказНаОтпускПродукции.Через КАК ДоверенноеЛицо,
	|	ПриказНаОтпускПродукции.НомерДоверенности КАК НомерДоверенности,
	|	ПриказНаОтпускПродукции.ДатаДоверенности КАК ДатаДоверенности,
	|	ПриказНаОтпускПродукции.НомерНакладной КАК НомерНакладной,
	|	ПриказНаОтпускПродукции.ДатаНакладной КАК ДатаНакладной,
	|	ПриказНаОтпускПродукции.СрокДействия КАК СрокДействия,
	|	ПриказНаОтпускПродукции.Ответственный КАК ОтветственноеЛицо,
	|	ПриказНаОтпускПродукции.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ПриказНаОтпускПродукции.Номенклатура.ЕдиницаИзмерения,
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ПриказНаОтпускПродукции.КоличествоОтгрузки КАК Количество,
	|	ПриказНаОтпускПродукции.Склад КАК Склад,
	|	ЕСТЬNULL(ОтветственноеЛицоРуководитель.Наименование, """") КАК Руководитель,
	|	ЕСТЬNULL(ОтветственноеЛицоГлавныйБухгалтер.Наименование, """") КАК ГлавныйБухгалтер
	|ИЗ
	|	Документ.гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16 КАК ПриказНаОтпускПродукции
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гкс_ОтветственныеЛица КАК ОтветственноеЛицоРуководитель
	|			ПО Организации.Руководитель = ОтветственноеЛицоРуководитель.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гкс_ОтветственныеЛица КАК ОтветственноеЛицоГлавныйБухгалтер
	|			ПО Организации.ГлавныйБухгалтер = ОтветственноеЛицоГлавныйБухгалтер.Ссылка
	|		ПО ПриказНаОтпускПродукции.Организация = Организации.Ссылка
	|ГДЕ
	|	ПриказНаОтпускПродукции.Ссылка В (&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16Накладные.Ссылка КАК Ссылка,
	|	гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16Накладные.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16Накладные.ДокументРегистрации.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК
	|		ДатаНакладной,
	|	ЕСТЬNULL(гкс_ТранспортныйДокумент.НомерДокумента, """") КАК НомерНакладной,
	|	гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16Накладные.Нетто КАК МассаНетто
	|ИЗ
	|	Документ.гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16.Накладные КАК гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16Накладные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_СвязьРегистрацииИТранспортногоДокумента КАК
	|			гкс_СвязьРегистрацииИТранспортногоДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ТранспортныйДокумент КАК гкс_ТранспортныйДокумент
	|			ПО гкс_СвязьРегистрацииИТранспортногоДокумента.ТранспортныйДокумент = гкс_ТранспортныйДокумент.Ссылка
	|		ПО гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16Накладные.ДокументРегистрации = гкс_СвязьРегистрацииИТранспортногоДокумента.ДокументРегистрации
	|ГДЕ
	|	гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16Накладные.Ссылка В (&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли