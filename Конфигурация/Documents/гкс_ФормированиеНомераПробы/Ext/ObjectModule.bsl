#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗапретИзмененияДокументаПоРеестру(Отказ) Тогда		
       Возврат;
	КонецЕсли;
	
	гкс_ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДозаполнитьРеквизитыОбъекта();
	СформироватьНомерПробыПоНеобходимости();
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДопПараметры = гкс_ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	ЗаполнитьДопПараметры(ДопПараметры);
	
	гкс_ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ, ДопПараметры);
	
	Если Не Отказ Тогда
		Документы.гкс_ФормированиеНомераПробы.СформироватьЛабораторныйАнализПоНеобходимости(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	гкс_ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("ДокументРегистрации") Тогда
			
			СтрокаРегистрация = СписокРегистраций.Добавить();
			СтрокаРегистрация.ДокументРегистрации = ДанныеЗаполнения.ДокументРегистрации;
			
		ИначеЕсли ДанныеЗаполнения.Свойство("ТаблицаРегистраций") Тогда
			
			Для Каждого СтрокаТаблицы Из ДанныеЗаполнения.ТаблицаРегистраций Цикл
				СтрокаРегистрация = СписокРегистраций.Добавить();
				СтрокаРегистрация.ДокументРегистрации = СтрокаТаблицы.ДокументРегистрации;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДопПараметры(ДопПараметры)
	
	ДопПараметры.ДополнительныеСвойства = Новый Структура;
	ДопПараметры.ДополнительныеСвойства.Вставить("ТипПробы", ТипПробы);
	
КонецПроцедуры

Процедура ДозаполнитьРеквизитыОбъекта()
	
	ЗаполнитьОрганизациюВСпискеРегистраций();
	
	Если ЭтоНовый() Тогда
		Если ТипПробы = Перечисления.гкс_ТипыПроб.Композитная И СписокРегистраций.Количество() > 0 Тогда
			ЗаполнятьДатыПоРегистрацииПЛК();
		Иначе
			ЗаполнитьМестноеВремя();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОрганизациюВСпискеРегистраций()
	
	НужноЗаполнятьОрганизацию = Ложь;
	Для Каждого СтрокаРегистрации Из СписокРегистраций Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаРегистрации.Организация) Тогда
			НужноЗаполнятьОрганизацию = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ НужноЗаполнятьОрганизацию Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыРегистраций = 
	ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокРегистраций.ВыгрузитьКолонку("ДокументРегистрации"), "Организация");
		
	Для Каждого СтрокаРегистрации Из СписокРегистраций Цикл
		
		Если ЗначениеЗаполнено(СтрокаРегистрации.Организация) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРегистрации.Организация = РеквизитыРегистраций[СтрокаРегистрации.ДокументРегистрации];		
		
	КонецЦикла;
	
КонецПроцедуры 

Процедура ЗаполнитьМестноеВремя()
	
	Если ЗначениеЗаполнено(МестнаяДата) Тогда
		Возврат;
	КонецЕсли;
	
	ЧасовойПоясТочки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТочкаМаршрута, "гкс_ЧасовойПоясТочкиМаршрута");
		
	Если ЗначениеЗаполнено(ЧасовойПоясТочки) Тогда
		МестнаяДата = МестноеВремя(ТекущаяУниверсальнаяДата(), ЧасовойПоясТочки);			
	Иначе
		МестнаяДата = Дата;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнятьДатыПоРегистрацииПЛК()

	РегистрацияПЛК = ПервыйДокументИзСпискаРегистраций();
	Если ЗначениеЗаполнено(РегистрацияПЛК) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РегистрацияПЛК, "Дата, МестнаяДата");
	КонецЕсли;	

КонецПроцедуры

Функция ЗапретИзмененияДокументаПоРеестру(Отказ)
	
	Если гкс_ПриемкаТранспорта.ЗапретИзмененияДокументаПоРеестру(Ссылка) Тогда		
		Отказ = Истина;
		ИмяСобытия = НСтр("ru = 'Запрет изменения документа'");
		ТекстШаблона = НСтр("ru = 'Не удалось записать документ: %1 т.к. уже оформлен реестр ЗПП-3'");
				
		ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации(ИмяСобытия,
			УровеньЖурналаРегистрации.Предупреждение, Метаданные.Документы.гкс_ФормированиеНомераПробы, 
			Ссылка, СтрШаблон(ТекстШаблона, Ссылка));

		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
   
КонецФункции

#Область НомераПроб

Процедура СформироватьНомерПробыПоНеобходимости()
	
	Если ЗначениеЗаполнено(НомерПробы) Тогда
		Возврат;
	КонецЕсли;
	
	НомерПробыОбъект = Справочники.гкс_НомерПробы.СоздатьЭлемент();
	НомерПробыОбъект.Заполнить(ДанныеЗаполненияДляНомераПробы());
	
	Попытка 
		НомерПробыОбъект.Записать();
	Исключение
		ВызватьИсключение;
	КонецПопытки;
	
	НомерПробы = НомерПробыОбъект.Ссылка;
	
КонецПроцедуры

Функция ДанныеЗаполненияДляНомераПробы()
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ТипПробы", ТипПробы);
	
	Если ТипПробы = Перечисления.гкс_ТипыПроб.Единичная И СписокРегистраций.Количество() > 0 Тогда
	
		Регистрация = ПервыйДокументИзСпискаРегистраций();
		ДанныеЗаполнения.Вставить("Регистрация", Регистрация);
	
	Иначе
		ДанныеЗаполнения.Вставить("Регистрация", СписокРегистраций.ВыгрузитьКолонку("ДокументРегистрации"));		
	КонецЕсли;
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Функция ПервыйДокументИзСпискаРегистраций()
	
	Результат = Неопределено;
	
	Если СписокРегистраций.Количество() > 0 Тогда
		Результат = СписокРегистраций[0].ДокументРегистрации;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции	

#КонецОбласти

#КонецОбласти

#КонецЕсли
