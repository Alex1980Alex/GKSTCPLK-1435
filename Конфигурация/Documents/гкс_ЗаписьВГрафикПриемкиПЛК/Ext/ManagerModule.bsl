#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ЭлектроннаяОчередьПриемки");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = гкс_ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если НЕ ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений		
		ЗаполнитьПараметрыИнициализации(Запрос, Документ, ДопПараметры);
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		ТекстЗапросаТаблицаГрафикПриемкиПЛК(ТекстыЗапроса, Регистры);	
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат гкс_ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции
  
#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ТочкаМаршрута)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти 
	
#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры)
	
	МенеджерВременныхТаблиц = Неопределено;
	
	Если ДопПараметры <> Неопределено
		И ДопПараметры.Свойство("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц) Тогда
		
		МенеджерВременныхТаблиц = ?(МенеджерВременныхТаблиц = Неопределено,
									Новый МенеджерВременныхТаблиц,
									МенеджерВременныхТаблиц);
		
	Иначе
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
												 
КонецПроцедуры

Процедура ТекстЗапросаТаблицаГрафикПриемкиПЛК(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "гкс_ГрафикПриемкиПЛК";
	
	Если НЕ гкс_ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументЗаписи.НачалоПериода КАК НачалоПериода,
	|	ДокументЗаписи.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ДокументЗаписи.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ДокументЗаписи.Номенклатура КАК Номенклатура,
	|	ДокументЗаписи.УсловиеПроезда КАК УсловиеПроезда,
	|	ДокументЗаписи.КоличествоТранспортныхСредствВЧас КАК КоличествоТранспортныхСредствВЧас,
	|	ДокументЗаписи.КоличествоТранспортныхСредствВЧасПоЭО КАК КоличествоТранспортныхСредствВЧасПоЭО
	|ИЗ
	|	Документ.гкс_ЗаписьВГрафикПриемкиПЛК КАК ДокументЗаписи
	|ГДЕ
	|	ДокументЗаписи.Ссылка = &Ссылка
	|	И НЕ ДокументЗаписи.Отменено";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
