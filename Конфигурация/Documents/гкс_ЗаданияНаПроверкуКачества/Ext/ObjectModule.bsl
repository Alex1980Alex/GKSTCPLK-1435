#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
// Заполняет табличную часть Транспортные средства на основании поля ТранспортныйДокумент.
//
Процедура ЗаполнитьТабличнуюЧастьТранспортныеСредства() Экспорт
	
	ТранспортныеСредства.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦБТ_ТранспортныйДокументТранспортныеСредства.ТранспортноеСредство КАК ТранспортноеСредство,
		|	ИСТИНА КАК Учитывать
		|ИЗ
		|	Документ.гкс_ТранспортныйДокумент.ТранспортныеСредства КАК ЦБТ_ТранспортныйДокументТранспортныеСредства
		|ГДЕ
		|	ЦБТ_ТранспортныйДокументТранспортныеСредства.Ссылка = &ТранспортныйДокумент";
	
	Запрос.УстановитьПараметр("ТранспортныйДокумент", ТранспортныйДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТранспортныеСредства.Загрузить(РезультатЗапроса.Выгрузить());
	
	Если ТранспортныеСредства.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Проверьте заполнение транспортных средств в выбранном транспортном документе'"));		
	КонецЕсли;
	
	
КонецПроцедуры

// Заполняет табличную часть Анализы на основании последнего документа гкс_НормативнаяСертификацияНоменклатуры.
//
Процедура ЗаполнитьТабличнуюЧастьАнализы() Экспорт
	
	Анализы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = Документы.гкс_ЗаданияНаПроверкуКачества.ТекстЗапросаПолучениеСпискаНормативныПоказателейАнализа();
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрута);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ДатаПоУмолчанию", Дата(2099, 1, 1));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Анализы.Загрузить(РезультатЗапроса.Выгрузить());
	
	Если Анализы.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
			НСтр("ru = 'Проверьте наличие действующей Нормативной сертификации для приемки ЖД транспорта по %1 и %2'"), 
			ТочкаМаршрута, Номенклатура));		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	гкс_ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	гкс_ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	гкс_ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	гкс_ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		гкс_ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
		ЗаполнитьТабличнуюЧастьТранспортныеСредства();
		ЗаполнитьТабличнуюЧастьАнализы();
		
		Для Каждого СтрокаТЧ Из ТранспортныеСредства Цикл
			СтрокаТЧ.Учитывать = СтрокаТЧ.ТранспортноеСредство = ДанныеЗаполнения.ТранспортноеСредство;
		КонецЦикла	

	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#КонецЕсли


