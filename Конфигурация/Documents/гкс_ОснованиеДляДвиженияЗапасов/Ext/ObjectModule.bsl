// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура перезаполняет Табличную часть КачественныеПоказатели по данным 
// док-та Лабораторный анализ
// 
// Параметры:
// 	ЛабораторныйАнализ - ДокументСсылка.гкс_ЛабораторныйАнализ - Документ с качественными показателями
// 	Отказ - Булево - Признак ошибок
//
Процедура ПерезаполнитьПоЛабАнализу(ЛабораторныйАнализ, Отказ) Экспорт
			
	Заполнить(ЛабораторныйАнализ);
	
	Если Не ЗначениеЗаполнено(КачественныеПоказатели) Тогда
		Возврат;
	КонецЕсли;	
		
	гкс_ОбщегоНазначения.СохранитьДокумент(ЭтотОбъект, Отказ, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		ЗаполнитьРеквизитыПоУсловиямРегистрации(ДанныеЗаполнения);
					
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.гкс_ЛабораторныйАнализ") Тогда	
		ЛабораторныйАнализ = ДанныеЗаполнения;
		
	КонецЕсли;
	
	Если гкс_ПриемкаТранспорта.ЭтоЛабораторныйАнализДляОснованияДвиженияЗапасов(ЛабораторныйАнализ) Тогда
		 ЗаполнитьКачественныеПоказателиПоЛабораторномуАнализу();
	Иначе
		 ЛабораторныйАнализ = Документы.гкс_ЛабораторныйАнализ.ПустаяСсылка();
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура перезаполняет документ Основание для движение запосов по данным Лабораторного анализа
//
Процедура ЗаполнитьКачественныеПоказателиПоЛабораторномуАнализу()
		
	КачественныеПоказатели.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛабораторныйАнализКачественныеПоказатели.Показатель КАК Показатель,
	|	ЛабораторныйАнализКачественныеПоказатели.Значение КАК Значение,
	|	ЛабораторныйАнализКачественныеПоказатели.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.гкс_ЛабораторныйАнализ.КачественныеПоказатели КАК ЛабораторныйАнализКачественныеПоказатели
	|ГДЕ
	|	ЛабораторныйАнализКачественныеПоказатели.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЛабораторныйАнализ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = КачественныеПоказатели.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи); 
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПоУсловиямРегистрации(ДанныеЗаполнения)
	
	ДокументРегистрации = Неопределено;
	ДанныеЗаполнения.Свойство("Регистрация", ДокументРегистрации);
	Если ЗначениеЗаполнено(ДокументРегистрации) 
		И ТипЗнч(ДокументРегистрации) = Тип("ДокументСсылка.гкс_РегистрацияНаПЛК") Тогда
		
		ИменаРеквизитов = "Внутригрупповой, Спецификация, Контрагент, Собственник, Организация, СДИЗ";
		РеквизитыРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРегистрации, ИменаРеквизитов);
		
		УсловиеПоставки = ОпределитьУсловиеПоставкиПоРегистрации(РеквизитыРегистрации);
		Организация		= РеквизитыРегистрации.Организация;
		Собственник		= ОпределитьСобственникаПоДаннымЗаполнения(РеквизитыРегистрации);
		
		ПереопределитьПунктПогрузкиРазгрузки(ДанныеЗаполнения);
		ДатаРазгрузки 	= ОпределитьДатуРазгрузки(ДокументРегистрации); 
		ДатаПогрузки 	= ДатаРазгрузки;
		
		СДИЗ = РеквизитыРегистрации.СДИЗ;
	КонецЕсли;
	
КонецПроцедуры

// Определить дату разгрузки.
// 
// Параметры: 
//  ДокументРегистрации - ДокументСсылка.гкс_РегистрацияНаПЛК - Документ регистрации
// 
// Возвращаемое значение:
//  Дата - дата 
Функция ОпределитьДатуРазгрузки(ДокументРегистрации)
	
	Возврат Документы.гкс_Взвешивание.ДатаВзвешиванияПоРегистрации(ДокументРегистрации);
	
КонецФункции

// Определить условие поставки по регистрации.
// 
// Параметры:
//  ЭтоПриемка - Булево - Это приемка
//  РеквизитыРегистрации - Структура - Структура с полями:
//  	* Внутригрупповой - Булево -
//  	* Спецификация - ДокументСсылка.гкс_СпецификацияКДоговоруКонтрагента - 
//  	* Контрагент - СправочникСсылка.Контрагенты - 
//  	* Собственник - СправочникСсылка.Контрагенты, СправочникСсылка.Организации -
//  	* Организация - СправочникСсылка.Организации -
// 
// Возвращаемое значение:
//  СправочникСсылка.гкс_УсловияПоставки, Неопределено - условие поставки по регистрации
Функция ОпределитьУсловиеПоставкиПоРегистрации(РеквизитыРегистрации)
	
	Если Не ЭтоПриемка Тогда
		Возврат Справочники.гкс_УсловияПоставки.Отгрузка;
	Иначе
		Возврат Справочники.гкс_УсловияПоставки.Приемка;
	КонецЕсли;

КонецФункции

// Определить собственника по данным заполнения.
// 
// Параметры:
//  РеквизитыРегистрации - Структура -См. описание ОпределитьУсловиеПоставкиПоРегистрации()
// 
// Возвращаемое значение:
//  СправочникСсылка.Контрагенты - Собственник по данным заполнения
Функция ОпределитьСобственникаПоДаннымЗаполнения(РеквизитыРегистрации)
	
	СобственникПоДаннымЗаполнения = Справочники.Контрагенты.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(РеквизитыРегистрации.Собственник) Тогда
			
		Если ТипЗнч(РеквизитыРегистрации.Собственник) = Тип("СправочникСсылка.Организации")	Тогда
		
				СобственникПоДаннымЗаполнения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
															РеквизитыРегистрации.Собственник, 
												            "КонтрагентОрганизации");
			Иначе									                          
				СобственникПоДаннымЗаполнения = РеквизитыРегистрации.Собственник;
		
		КонецЕсли;
	КонецЕсли;
	
	Возврат СобственникПоДаннымЗаполнения;

КонецФункции

// Переопределение пункта погрузки / разгрузки выполняется только для типа регистрации "Отгрузка"
//
Процедура ПереопределитьПунктПогрузкиРазгрузки(ДанныеЗаполнения)
	
	Если ЭтоПриемка Тогда 
		Возврат;
	КонецЕсли;
	
	ТекТранспортныйДокумент = Документы.гкс_ТранспортныйДокумент.ПустаяСсылка();
	
	Если Не ДанныеЗаполнения.Свойство("ТранспортныйДокумент", ТекТранспортныйДокумент) 
		И Не ЗначениеЗаполнено(ТекТранспортныйДокумент) Тогда

		Возврат;
	КонецЕсли;

	РеквизитыТД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекТранспортныйДокумент, "ПунктРазгрузки, ПунктПогрузки");
	ТочкаМаршрута = РеквизитыТД.ПунктПогрузки;
	ПунктРазгрузки = РеквизитыТД.ПунктРазгрузки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли	