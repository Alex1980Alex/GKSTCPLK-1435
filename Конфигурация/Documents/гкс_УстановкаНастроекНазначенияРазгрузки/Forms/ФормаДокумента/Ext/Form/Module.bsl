
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
   ТекущийОбъект.Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	НоменклатураПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНазначенияРазгрузки

&НаКлиенте
Процедура ЗаполнитьТекущимиНастройками(Команда)
	
	ОчиститьСообщения();
	Если Объект.НазначенияРазгрузки.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='В документе заполнена таблица ""Назначения разгрузки"". Перезаполнить?'");
		ОповещениеОтвет = Новый ОписаниеОповещения("ОтветЗаполнитьТекущимиНастройками", ЭтотОбъект);
		
		ПоказатьВопрос(ОповещениеОтвет, ТекстВопроса,
			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТекущимиНастройкамиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветЗаполнитьТекущимиНастройками(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьТекущимиНастройкамиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СегментацияКачестваНоменклатуры.СлужебнаяНоменклатура КАК СлужебнаяНоменклатура
	|ИЗ
	|	РегистрСведений.гкс_СегментацияКачестваНоменклатуры КАК СегментацияКачестваНоменклатуры
	|ГДЕ
	|	СегментацияКачестваНоменклатуры.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если Не РезультатЗапроса.Пустой() Тогда
		ЗначенияДляСпискаВыбора = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("СлужебнаяНоменклатура");	
	Иначе
		ЗначенияДляСпискаВыбора = Новый Массив;
	КонецЕсли;
	
	Элементы.НазначенияРазгрузкиСлужебнаяНоменклатура.СписокВыбора.ЗагрузитьЗначения(ЗначенияДляСпискаВыбора);
	
	// перезаполним табличную часть
	ЗаполнитьТекущимиНастройкамиНаСервере();

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовФормы()
			
	Если Параметры.Ключ.Пустая() И Параметры.Свойство("ИзАРМа") Тогда
		Элементы.ТочкаМаршрута.Видимость = Ложь;
		Элементы.ВидПеревозки.Видимость = Ложь;
		Элементы.Номер.Видимость = Ложь;
		Элементы.Дата.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущимиНастройкамиНаСервере()
	
	Объект.НазначенияРазгрузки.Очистить();
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НастройкиНазначенияРазгрузки.Силос КАК Силос,
	|	НастройкиНазначенияРазгрузки.СлужебнаяНоменклатура КАК СлужебнаяНоменклатура,
	|	НастройкиНазначенияРазгрузки.ЯмаРазгрузки КАК ЯмаРазгрузки,
	|	НастройкиНазначенияРазгрузки.ТочкаВъезда КАК ТочкаВъезда
	|ИЗ
	|	РегистрСведений.гкс_НастройкиНазначенияРазгрузки.СрезПоследних(
	|			,
	|			ТочкаМаршрута = &ТочкаМаршрута
	|				И ВидПеревозки = &ВидПеревозки
	|				И Номенклатура = &Номенклатура) КАК НастройкиНазначенияРазгрузки
	|ГДЕ
	|	НастройкиНазначенияРазгрузки.Действует";
	
	Запрос.УстановитьПараметр("ТочкаМаршрута", Объект.ТочкаМаршрута);
	Запрос.УстановитьПараметр("ВидПеревозки", Объект.ВидПеревозки);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ДанныеЗапроса = РезультатЗапроса.Выгрузить();
	    Объект.НазначенияРазгрузки.Загрузить(ДанныеЗапроса);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

