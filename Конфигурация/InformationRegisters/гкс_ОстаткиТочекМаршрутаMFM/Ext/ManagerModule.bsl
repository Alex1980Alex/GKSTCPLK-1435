#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Проверяет переполнение точки маршрута
// Параметры: 
// ТочкаМаршрута - СправочникСсылка.гкс_ТочкаМаршрута
// Количество - Число
// Возвращаемое значение:
// - Булево. Истина, если переполнено
Функция ТочкаМаршрутаПереполнена(ТочкаМаршрута, Количество) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьПроверкуВместимостиСкладов = 
		ПолучитьФункциональнуюОпцию("гкс_ИспользоватьКонтрольВместимостиСкладов");
		
	Вместимость = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТочкаМаршрута, "Вместимость");
	
	Если Не ИспользоватьПроверкуВместимостиСкладов Или Вместимость = 0 Тогда
		Возврат Ложь;
	КонецЕсли;        
	
	ОстатокНаСкладе = ОстатокНаСкладеМФМ(ТочкаМаршрута);
	ИтогоКоличество = ОстатокНаСкладе + Количество;
	
	Возврат ИтогоКоличество >= Вместимость;
		
КонецФункции      


// Получает массив точек маршрута, где указана вместимость
// Возвращаемое значение:
// - Массив
Функция ТочкиМаршрутаДляПолученияОстатков() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьПроверкуВместимостиСкладов = 
		ПолучитьФункциональнуюОпцию("гкс_ИспользоватьКонтрольВместимостиСкладов");
		
	ДанныеЗапроса = Неопределено;
	
	Если Не ИспользоватьПроверкуВместимостиСкладов Тогда
		Возврат ДанныеЗапроса;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ТочкиМаршрута.Ссылка) КАК Идентификатор
	               |ИЗ
	               |	Справочник.гкс_ТочкиМаршрута КАК ТочкиМаршрута
	               |ГДЕ
	               |	ТочкиМаршрута.ТипТочкиМаршрута = ЗНАЧЕНИЕ(Перечисление.ТипТочкиМаршрута.Склад)
	               |	И ТочкиМаршрута.Вместимость <> 0
	               |	И НЕ ТочкиМаршрута.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ДанныеЗапроса = Результат.Выгрузить().ВыгрузитьКолонку("Идентификатор");
	КонецЕсли;  
	
	Возврат ДанныеЗапроса;
	
КонецФункции

// Получение остатки на складе по данным регистра
// Параметры: 
// ТочкаМаршрута - СправочникСсылка.гкс_ТочкаМаршрута
// Возвращаемое значение:
// - Число
Функция ОстатокНаСкладеМФМ(ТочкаМаршрута) Экспорт
	
	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрута);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ОстаткиТочекМаршрутаMFM.Количество КАК Количество
	               |ИЗ
	               |	РегистрСведений.гкс_ОстаткиТочекМаршрутаMFM КАК ОстаткиТочекМаршрутаMFM
	               |ГДЕ
	               |	ОстаткиТочекМаршрутаMFM.ТочкаМаршрута = &ТочкаМаршрута";
	Результат = Запрос.Выполнить();
	
	Остаток = 0;
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Остаток = Выборка.Количество;
	КонецЕсли;
	
	Возврат Остаток;

КонецФункции

#КонецОбласти 

#КонецЕсли