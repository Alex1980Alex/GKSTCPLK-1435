#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс
 
// Процедура добавляет запись в регистр по переданным значениям структуры.
Процедура ДобавитьЗапись(Запись, Загрузка = Ложь) Экспорт
    
    гкс_ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(Запись, "гкс_ВнешниеПробы", Загрузка);
    
КонецПроцедуры
 
Функция СтруктураЗаписи() Экспорт
    
    СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Период");
	СтруктураЗаписи.Вставить("ВидПробы");
	СтруктураЗаписи.Вставить("ДатаИзменения");
    СтруктураЗаписи.Вставить("ДатаПогрузки");
    СтруктураЗаписи.Вставить("ДатаПробы");
    СтруктураЗаписи.Вставить("ИДКомпозитнойПробы");
    СтруктураЗаписи.Вставить("ИДПробы");
    СтруктураЗаписи.Вставить("Комментарий");
    СтруктураЗаписи.Вставить("МестоИнспекции");
    СтруктураЗаписи.Вставить("НомерДокумента");
    СтруктураЗаписи.Вставить("НомерЗаявки");
    СтруктураЗаписи.Вставить("НомерТС");
	СтруктураЗаписи.Вставить("Организация");
    СтруктураЗаписи.Вставить("Показатель");
	СтруктураЗаписи.Вставить("Продукция");
    СтруктураЗаписи.Вставить("СтанцияНазначения");
    СтруктураЗаписи.Вставить("СтанцияОтправления");
	СтруктураЗаписи.Вставить("Сюрвейер");
    СтруктураЗаписи.Вставить("ТранспортноеСредство");
    СтруктураЗаписи.Вставить("Элеватор");
    СтруктураЗаписи.Вставить("ВесБрутто");
    СтруктураЗаписи.Вставить("ВесТары");
    СтруктураЗаписи.Вставить("ВесНетто");
    СтруктураЗаписи.Вставить("ЗначениеПоказателя");
	СтруктураЗаписи.Вставить("ВходящиеДанные");

    Возврат СтруктураЗаписи;
    
КонецФункции

// Процедура удаляет набор записей в регистре по переданным значениям структуры.
Процедура УдалитьЗапись(СтруктураЗаписи, Загрузка = Ложь) Экспорт
	
	гкс_ОбменДаннымиСервер.УдалитьНаборЗаписейВРегистреСведений(СтруктураЗаписи, "гкс_ВнешниеПробы", Загрузка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнициализироватьТаблицуВнешнейПробы() Экспорт
	
	ТипДата 					= Новый ОписаниеТипов("Дата");
	ТипЧисло					= Новый ОписаниеТипов("Число");
	ТипСтрока 					= Новый ОписаниеТипов("Строка");
	ТипВидПробы 				= Новый ОписаниеТипов("ПеречислениеСсылка.гкс_НазначенияИспользованияКачества");
	ТипПродукция 				= Новый ОписаниеТипов("СправочникСсылка.гкс_ПродукцияWarehouse");
	ТипПоказатель 				= Новый ОписаниеТипов("СправочникСсылка.гкс_ПоказателиКачестваWarehouse");
	ТипОрганизация              = Новый ОписаниеТипов("СправочникСсылка.Организации");
	ТипКонтрагенты 				= Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	ТипТочкиМаршрута 			= Новый ОписаниеТипов("СправочникСсылка.гкс_ТочкиМаршрута");
	ТипТранспортныеСредства 	= Новый ОписаниеТипов("СправочникСсылка.ТранспортныеСредства");
	ТипКлассификаторСтанцийЖД 	= Новый ОписаниеТипов("СправочникСсылка.гкс_КлассификаторСтанцийЖД");
	ТипВходящиеДанныеWarehouse 	= Новый ОписаниеТипов("СправочникСсылка.гкс_ВходящиеДанныеWarehouse");
	
	ТаблицаВнешниеПробы = Новый ТаблицаЗначений;
	// Значения шапки
	ТаблицаВнешниеПробы.Колонки.Добавить("Период",					ТипДата);
	ТаблицаВнешниеПробы.Колонки.Добавить("ВидПробы",				ТипВидПробы);
	ТаблицаВнешниеПробы.Колонки.Добавить("ДатаПробы",				ТипДата);
	ТаблицаВнешниеПробы.Колонки.Добавить("ДатаПогрузки", 			ТипДата);
	ТаблицаВнешниеПробы.Колонки.Добавить("ДатаИзменения", 			ТипДата);
	ТаблицаВнешниеПробы.Колонки.Добавить("ИДКомпозитнойПробы", 		ТипСтрока);
	ТаблицаВнешниеПробы.Колонки.Добавить("ИДПробы", 				ТипСтрока);
	ТаблицаВнешниеПробы.Колонки.Добавить("Комментарий", 			ТипСтрока);
	ТаблицаВнешниеПробы.Колонки.Добавить("МестоИнспекции", 			ТипСтрока);
	ТаблицаВнешниеПробы.Колонки.Добавить("НомерДокумента", 			ТипСтрока);
	ТаблицаВнешниеПробы.Колонки.Добавить("НомерЗаявки", 			ТипСтрока);
	ТаблицаВнешниеПробы.Колонки.Добавить("ВходящиеДанные", 			ТипВходящиеДанныеWarehouse);
	// Значение справочные
	ТаблицаВнешниеПробы.Колонки.Добавить("СтанцияОтправления", 		ТипКлассификаторСтанцийЖД);
	ТаблицаВнешниеПробы.Колонки.Добавить("СтанцияНазначения", 		ТипКлассификаторСтанцийЖД);
	ТаблицаВнешниеПробы.Колонки.Добавить("Сюрвейер", 				ТипКонтрагенты);
	ТаблицаВнешниеПробы.Колонки.Добавить("Элеватор", 				ТипТочкиМаршрута);
	ТаблицаВнешниеПробы.Колонки.Добавить("НомерТС", 				ТипСтрока);
	ТаблицаВнешниеПробы.Колонки.Добавить("ТранспортноеСредство", 	ТипТранспортныеСредства);
	ТаблицаВнешниеПробы.Колонки.Добавить("Показатель", 				ТипПоказатель);
	ТаблицаВнешниеПробы.Колонки.Добавить("Продукция", 				ТипПродукция);
	ТаблицаВнешниеПробы.Колонки.Добавить("Организация", 			ТипОрганизация);
	// Значение показателей
	ТаблицаВнешниеПробы.Колонки.Добавить("ВесБрутто", 				ТипЧисло);
	ТаблицаВнешниеПробы.Колонки.Добавить("ВесТары", 				ТипЧисло);
	ТаблицаВнешниеПробы.Колонки.Добавить("ВесНетто", 				ТипЧисло);
	ТаблицаВнешниеПробы.Колонки.Добавить("ЗначениеПоказателя", 		ТипЧисло);
	
	Возврат ТаблицаВнешниеПробы;
	
КонецФункции

Функция ВнешниеПробыПоВходящимДанным(ВходящиеДанные) Экспорт
	
	Запрос 		 = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВнешниеПробы.ВидПробы КАК ВидПробы,
	|	ВнешниеПробы.ДатаИзменения КАК ДатаИзменения,
	|	ВнешниеПробы.ДатаПогрузки КАК ДатаПогрузки,
	|	ВнешниеПробы.ДатаПробы КАК ДатаПробы,
	|	ВнешниеПробы.ИДКомпозитнойПробы КАК ИДКомпозитнойПробы,
	|	ВнешниеПробы.ИДПробы КАК ИДПробы,
	|	ВнешниеПробы.Комментарий КАК Комментарий,
	|	ВнешниеПробы.МестоИнспекции КАК МестоИнспекции,
	|	ВнешниеПробы.Продукция КАК Продукция,
	|	ВнешниеПробы.НомерДокумента КАК НомерДокумента,
	|	ВнешниеПробы.НомерЗаявки КАК НомерЗаявки,
	|	ВнешниеПробы.НомерТС КАК НомерТС,
	|	ВнешниеПробы.Организация КАК Организация,
	|	ВнешниеПробы.Показатель КАК Показатель,
	|	ВнешниеПробы.СтанцияНазначения КАК СтанцияНазначения,
	|	ВнешниеПробы.СтанцияОтправления КАК СтанцияОтправления,
	|	ВнешниеПробы.Сюрвейер КАК Сюрвейер,
	|	ВнешниеПробы.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВнешниеПробы.Элеватор КАК Элеватор,
	|	ВнешниеПробы.ВесБрутто КАК ВесБрутто,
	|	ВнешниеПробы.ВесТары КАК ВесТары,
	|	ВнешниеПробы.ВесНетто КАК ВесНетто,
	|	ВнешниеПробы.ЗначениеПоказателя КАК ЗначениеПоказателя
	|ИЗ
	|	РегистрСведений.гкс_ВнешниеПробы КАК ВнешниеПробы
	|ГДЕ
	|	ВнешниеПробы.ВходящиеДанные = &ВходящиеДанные";
	
	Запрос.УстановитьПараметр("ВходящиеДанные", ВходящиеДанные);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецЕсли
