
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет запись в регистр.
//
// Параметры:
//  Подписка                         - СправочникСсылка.гкс_ПодпискиНаРассылкиИОповещения- подписка на оповещение.
//  ИсточникОповещения               - Произвольный - источник оповещения.
//  ДатаОтправки                     - Дата - Дата, в которую должно отправиться оповещение.
//  ДатаАктуальностиОтправки         - Дата - Дата, до которой имеет смысл отправлять оповещение.
//
Процедура ВыполнитьЗаписьВРегистр(Подписка, ИсточникОповещения, 
	                              ДатаОтправки, ДатаАктуальностиОтправки) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.гкс_ОчередьСобытийДляОповещений.СоздатьМенеджерЗаписи();
	Запись.Период                   = ТекущаяДатаСеанса();
	Запись.Подписка            		= Подписка;
	Запись.ИсточникОповещения       = ИсточникОповещения;
	Запись.ДатаОтправки             = ДатаОтправки;
	Запись.ДатаАктуальностиОтправки = ДатаАктуальностиОтправки;
	
	Запись.Записать(Истина);

КонецПроцедуры

// Удаляет записи из очереди по виду оповещения ранее даты отработки.
//
// Параметры:
//  Подписка  - СправочникСсылка.ВидыОповещенийКлиентам - подписка, события по которому должны быть удалены.
//  ДатаУдаления  - Дата - Дата, ранее которой удаляются оповещения из очереди.
//
Процедура УдалитьЗаписиПоВидуОповещенияИзОчереди(Подписка, ДатаУдаления) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОчередьСобытийДляОповещений.Период КАК Период,
	|	ОчередьСобытийДляОповещений.Подписка КАК Подписка,
	|	ОчередьСобытийДляОповещений.ИсточникОповещения КАК ИсточникОповещения
	|ИЗ
	|	РегистрСведений.гкс_ОчередьСобытийДляОповещений КАК ОчередьСобытийДляОповещений
	|ГДЕ
	|	ОчередьСобытийДляОповещений.Подписка = &Подписка
	|	И ОчередьСобытийДляОповещений.Период <= &ДатаУдаления";
	
	Запрос.УстановитьПараметр("Подписка", Подписка);
	Запрос.УстановитьПараметр("ДатаУдаления", ДатаУдаления);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.гкс_ОчередьСобытийДляОповещений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.Подписка.Установить(Выборка.Подписка);
		НаборЗаписей.Отбор.ИсточникОповещения.Установить(Выборка.ИсточникОповещения);
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли