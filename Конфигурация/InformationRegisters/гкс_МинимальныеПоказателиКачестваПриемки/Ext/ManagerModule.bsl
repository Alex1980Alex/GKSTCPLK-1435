
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
// Возвращаемое значение:
//  Структура - со свойствами:
//     * НезависимыеРегистры - Массив Из ОбъектМетаданныхРегистрСведений -
//     * ПодчиненныеРегистры - Массив Из ОбъектМетаданныхРегистрСведений -
//                           - Массив Из ОбъектМетаданныхРегистрНакопления -
//                           - Массив Из ОбъектМетаданныхРегистрБухгалтерии -
//                           - Массив Из ОбъектМетаданныхРегистрРасчета  - список подчиненных регистратору регистров, который записываются учетным механизмом.
//     * КонтрольныеРегистрыИзменений - Массив Из ОбъектМетаданныхРегистрСведений -
//                                    - Массив Из ОбъектМетаданныхРегистрНакопления -
//                                    - Массив Из ОбъектМетаданныхРегистрБухгалтерии -
//                                    - Массив Из ОбъектМетаданныхРегистрРасчета - список подчиненных регистратору регистров,
//                                                                                 по которым необходимо контролировать изменения.
//     * КонтрольныеРегистрыЗаданий - Массив Из ОбъектМетаданныхРегистрСведений -
//                                  - Массив Из ОбъектМетаданныхРегистрНакопления -
//                                  - Массив Из ОбъектМетаданныхРегистрБухгалтерии -
//                                  - Массив Из ОбъектМетаданныхРегистрРасчета - список подчиненных регистратору регистров,
//                                                                               по изменению которых необходимо формировать задания.
//     * ЕстьПроизводныеДвижения - Булево - формируются вторичные движения используя данные уже записанных регистров,
//                                          сделанных в том числе другими механизмами.
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = гкс_ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(
			Метаданные.РегистрыСведений.гкс_МинимальныеПоказателиКачестваПриемки);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по регистру.
//
// Параметры:
//   ТаблицыДляДвижений - Структура - таблицы данных документа
//   Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//   Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	гкс_ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений,
		Движения, "гкс_МинимальныеПоказателиКачестваПриемки");
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// Процедура добавляет запись в регистр по переданным значениям структуры.
Процедура ДобавитьЗапись(Запись, Загрузка = Ложь) Экспорт
	
    ОбменДаннымиСлужебный.ДобавитьЗаписьВРегистрСведений(Запись,
    	"гкс_МинимальныеПоказателиКачестваПриемки", Загрузка);
	
КонецПроцедуры

// Удаляет набор записей в регистре по переданным значениям структуры.
//
// Параметры:
//  Запись - Структура - структура, по значениям которой необходимо удалить набор записей.
//  Загрузка - Булево - признак, выполнять загрузку в режиме обмена или нет
// 
Процедура УдалитьЗапись(Запись, Загрузка = Ложь) Экспорт
	
    ОбменДаннымиСлужебный.УдалитьНаборЗаписейВРегистреСведений(Запись,
    	"гкс_МинимальныеПоказателиКачестваПриемки", Загрузка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
	
#КонецЕсли