#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДобавитьОбъектВФильтрРазрешенныхОбъектов(Объект, Получатель) Экспорт
	
	Если НЕ ОбъектЕстьВРегистре(Объект, Получатель) Тогда
		
		СтруктураЗаписи = Новый Структура;
		СтруктураЗаписи.Вставить("Получатель", Получатель);
		СтруктураЗаписи.Вставить("Ссылка", Объект);
		
		ДобавитьЗапись(СтруктураЗаписи, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОбъектЕстьВРегистре(Объект, Получатель) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	| ИСТИНА КАК Существует
	|ИЗ
	|	РегистрСведений.гкс_ДанныеОбъектовДляРегистрацииВОбменах КАК Таблица
	|ГДЕ
	|	  Таблица.Получатель = &Получатель
	|	И Таблица.Ссылка = &Объект
	|";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Получатель", Получатель);
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.Текст = ТекстЗапроса;
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура добавляет запись в регистр по переданным значениям структуры.
Процедура ДобавитьЗапись(СтруктураЗаписи, Загрузка = Ложь)
	
	гкс_ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи,  
	                                                      "гкс_ДанныеОбъектовДляРегистрацииВОбменах", 
	                                                      Загрузка);
	
КонецПроцедуры

// Процедура добавляет запись в регистр по переданным значениям структуры.
Процедура УдалитьЗапись(СтруктураЗаписи, Загрузка = Ложь) Экспорт
	
	гкс_ОбменДаннымиСервер.УдалитьНаборЗаписейВРегистреСведений(СтруктураЗаписи,  
	                                                            "гкс_ДанныеОбъектовДляРегистрацииВОбменах", 
	                                                            Загрузка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли