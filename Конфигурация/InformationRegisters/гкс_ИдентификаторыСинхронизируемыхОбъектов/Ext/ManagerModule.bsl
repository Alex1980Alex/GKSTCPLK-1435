#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура добавляет запись в регистр по переданным значениям структуры.
Процедура ДобавитьЗапись(СтруктураЗаписи, Загрузка = Ложь) Экспорт
	
	гкс_ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи, 
	"гкс_ИдентификаторыСинхронизируемыхОбъектов", Загрузка);
	
КонецПроцедуры

Функция ЗаписьЕстьВРегистре(СтруктураЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаписьЕстьВРегистре();
	Запрос.УстановитьПараметр("Приложение", СтруктураЗаписи.Приложение);
	Запрос.УстановитьПараметр("Ссылка", СтруктураЗаписи.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

// Процедура удаляет набор записей в регистре по переданным значениям структуры.
Процедура УдалитьЗапись(СтруктураЗаписи, Загрузка = Ложь) Экспорт
	
	гкс_ОбменДаннымиСервер.УдалитьНаборЗаписейВРегистреСведений(СтруктураЗаписи, 
	"гкс_ИдентификаторыСинхронизируемыхОбъектов", Загрузка);
	
КонецПроцедуры

// Преобразует ссылку на объект текущей информационной базы в строковое представление УИД.
// Если в регистре ПубличныеИдентификаторыСинхронизируемыхОбъектов есть такая ссылка, возвращается УИД из регистра.
// В противном случае возвращается УИД переданной ссылки.
// 
// Параметры:
//  УзелИнформационнойБазы - Ссылка на узел плана обмена, в который происходит выгрузка данных.
//  СсылкаНаОбъект - ссылка на объект информационной базы, для которого необходимо получить
//                   уникальный идентификатор объекта XDTO.
//
// Возвращаемое значение:
//  Строка - Уникальный идентификатор объекта.
Функция ПубличныйИдентификаторПоСсылкеОбъекта(Приложение, СсылкаНаОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Определение публичной ссылки через ссылку на объект.
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПубличныйИдентификаторПоСсылкеОбъекта();
	Запрос.УстановитьПараметр("Приложение", Приложение);
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат XMLСтрока(СсылкаНаОбъект);
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		Возврат СокрЛП(Выборка.Идентификатор);
		
	Иначе
		
		СтруктураЗаписи = Новый Структура();
		СтруктураЗаписи.Вставить("Приложение", Приложение);
		СтруктураЗаписи.Вставить("Ссылка", СсылкаНаОбъект);
		УдалитьЗапись(СтруктураЗаписи, Истина);
		
	КонецЕсли;
	
	Возврат XMLСтрока(СсылкаНаОбъект);

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТекстыЗапроса

Функция ТекстЗапросаПубличныйИдентификаторПоСсылкеОбъекта()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектов КАК Таблица
	|ГДЕ
	|	Таблица.Приложение = &Приложение
	|	И Таблица.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаписьЕстьВРегистре()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьЗапись
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектов КАК Таблица
	|ГДЕ
	|	Таблица.Приложение = &Приложение
	|	И Таблица.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли