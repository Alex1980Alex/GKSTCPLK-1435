#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура УстановитьНастройку(ИмяНастройки, Значение) Экспорт
	
	Настройки = гкс_ОбщегоНазначения.СоотвествиеВСтруктуру(ПустойСловарьНастроек());
	Если НЕ Настройки.Свойство(ИмяНастройки) Тогда
		
		ТекстИсключения = НСтр("ru='Попытка задать несуществующую настройку: '") + ИмяНастройки; 
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		ЗаписьНабора = НаборЗаписей.Добавить();
	Иначе
		ЗаписьНабора = НаборЗаписей[0];
	КонецЕсли;
	
	ЗаписьНабора[ИмяНастройки] = Значение;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция ЗначениеНастройки(ИмяНастройки) Экспорт

	Возврат ПолучитьНастройки().Получить(ИмяНастройки);
	
КонецФункции

Функция ТипПодключенияКомпоненты() Экспорт
	
	Изолированно = ПолучитьНастройки().Получить("ТипПодключенияИзолированно");
		
	Если Изолированно Тогда
		Результат = ТипПодключенияВнешнейКомпоненты.Изолированно;
	Иначе	
		Результат = ТипПодключенияВнешнейКомпоненты.НеИзолированно;
	КонецЕсли;
	
	Возврат Результат;
			
КонецФункции

Функция ПолучитьНастройкиВСтруктуре() Экспорт

	НастройкиВСтруктуре = Новый Структура;
	НастройкиВСоотвествии = ПолучитьНастройки();
	Для Каждого Настройка Из НастройкиВСоотвествии Цикл
		НастройкиВСтруктуре.Вставить(Настройка.Ключ, Настройка.Значение);	
	КонецЦикла;
	
	Возврат НастройкиВСтруктуре;
	
КонецФункции

Функция ПолучитьНастройки() Экспорт

	Настройки = ПустойСловарьНастроек();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаНастройкиИнтеграционногоАдаптера();
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Настройки;
	КонецЕсли;
	
	ИменаНастроек = РезультатЗапроса.Колонки;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Для Каждого Настройка Из ИменаНастроек Цикл 
			Настройки[Настройка.Имя] = Выборка[Настройка.Имя];
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПустойСловарьНастроек()
	
	ПустойСловарьНастроек = Новый Соответствие;
	ВсеНастройки = Метаданные.РегистрыСведений.гкс_НастройкиИнтеграционногоАдаптера.Ресурсы;	
	Для Каждого Настройка Из ВсеНастройки Цикл
		ПустойСловарьНастроек.Вставить(Настройка.Имя, Настройка.Тип.ПривестиЗначение());
	КонецЦикла;
		
	Возврат ПустойСловарьНастроек;
		
КонецФункции

#Область ТекстыЗапросов

Функция ТекстЗапросаНастройкиИнтеграционногоАдаптера()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВсеНастройки.МаксимальноеКоличествоПотоковОбработки КАК МаксимальноеКоличествоПотоковОбработки,
	|	ВсеНастройки.РазмерПорцииОбработки КАК РазмерПорцииОбработки,
	|	ВсеНастройки.СрокХраненияВходящихСообщений КАК СрокХраненияВходящихСообщений,
	|	ВсеНастройки.СрокХраненияИсходящихСообщений КАК СрокХраненияИсходящихСообщений,
	|	ВсеНастройки.СрокХраненияЛогаЗапросовАсинхронногоСервиса КАК СрокХраненияЛогаЗапросовАсинхронногоСервиса,
	|	ВсеНастройки.СрокХраненияСообщенийСОшибкамиОбработки КАК СрокХраненияСообщенийСОшибкамиОбработки,
	|	ВсеНастройки.СтрокаСоединенияУчастникаОбмена КАК СтрокаСоединенияУчастникаОбмена,
	|	ВсеНастройки.ТаймаутОбработкиПорцииСообщений КАК ТаймаутОбработкиПорцииСообщений,
	|	ВсеНастройки.МаксимальноеКоличествоНеудачныхОбработок КАК МаксимальноеКоличествоНеудачныхОбработок,
	|	ВсеНастройки.РазмерПорцииОбработкиОчередиОтложенногоФормирования КАК РазмерПорцииОбработкиОчередиОтложенногоФормирования,
	|	ВсеНастройки.МаксимальноеКоличествоПотоковОбработкиОчередиОтложенногоФормирования КАК МаксимальноеКоличествоПотоковОбработкиОчередиОтложенногоФормирования,
	|	ВсеНастройки.ТаймаутОбработкиПорцииОчередиОтложенногоФормирования КАК ТаймаутОбработкиПорцииОчередиОтложенногоФормирования,
	|	ВсеНастройки.СрокХраненияОчередиОтложенногоФормирования КАК СрокХраненияОчередиОтложенногоФормирования,
	|	ВсеНастройки.ИспользоватьОтдельнуюСхемуДляСлужебныхСообщений КАК ИспользоватьОтдельнуюСхемуДляСлужебныхСообщений,
	|	ВсеНастройки.ТипПодключенияИзолированно КАК ТипПодключенияИзолированно
	|ИЗ
	|	РегистрСведений.гкс_НастройкиИнтеграционногоАдаптера КАК ВсеНастройки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
