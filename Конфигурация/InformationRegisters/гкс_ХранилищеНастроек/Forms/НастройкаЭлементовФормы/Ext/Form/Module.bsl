#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("КлючОбъекта", 			КлючОбъекта);
	Параметры.Свойство("КлючНастроек", 			КлючНастроек);
	Параметры.Свойство("ЭтоПросмотрНастройки",	ЭтоПросмотрНастройки);
	
	УстановитьДоступностьЭлементов();
	ЗаполнитьДеревоЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ОбновитьНастройки И Не ЭтоПросмотрНастройки Тогда
		ТекстСообщения = 
		НСтр("ru = 'Сохраненные настройки будут работать после перезапуска ""АРМ Приемки и отгрузки на ПЛК""'");		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	ИначеЕсли ОбновитьНастройки И ЭтоПросмотрНастройки Тогда
		ТекстСообщения = НСтр("ru = 'Настройки записаны'");		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидимостьПриИзменении(Элемент) 
	
	ТекДанные = Элементы.ДеревоЭлементов.ТекущиеДанные;
	ТекДанные.Видимость = НастройкаВидимость;	
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоМаксимальнаяШиринаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоЭлементов.ТекущиеДанные;
	ТекДанные.АвтоМаксимальнаяШирина = НастройкаАвтоМаксимальнаяШирина;
	ИзменитьВидимостьМаксимальнаяШирина();
	
КонецПроцедуры

&НаКлиенте
Процедура ШиринаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоЭлементов.ТекущиеДанные;
	ТекДанные.Ширина = НастройкаШирина;
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальнаяШиринаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоЭлементов.ТекущиеДанные;
	ТекДанные.МаксимальнаяШирина = НастройкаМаксимальнаяШирина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ДеревоЭлементовПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элемент.ТекущиеДанные;	
	ЗаполнитьЗначениеНастройкиСтроки(ТекДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНаСервере();
	Закрыть(ОбновитьНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	Закрыть(ОбновитьНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПереместитьВверх(Команда)
	
	Смещение = -1;
	ПереместитьСтрокуНаКлиенте(Смещение)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПереместитьВниз(Команда)
	
	Смещение = 1;
	ПереместитьСтрокуНаКлиенте(Смещение)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
	
	Элементы.ФормаЗаписатьИЗакрыть.Доступность 	= ЭтоПолноправныйПользователь;
	Элементы.ФормаЗаписать.Доступность 			= ЭтоПолноправныйПользователь;
	Элементы.ГруппаНастройки.Доступность 		= ЭтоПолноправныйПользователь;
	Элементы.ДеревоЭлементовЗаголовок.ТолькоПросмотр 	= Не ЭтоПолноправныйПользователь;	
	Элементы.ДеревоЭлементовНомерПП.ТолькоПросмотр 		= Не ЭтоПолноправныйПользователь;	
	Элементы.ДеревоЭлементовЭлемент.ТолькоПросмотр 		= Не ЭтоПолноправныйПользователь;	
	Элементы.ДеревоЭлементовКомандаПереместитьВверх.Доступность 	= ЭтоПолноправныйПользователь;	
	Элементы.ДеревоЭлементовКомандаПереместитьВниз.Доступность 		= ЭтоПолноправныйПользователь;
	Элементы.ДеревоЭлементовКонтекстноеМенюКомандаПереместитьВверх.Доступность 	= ЭтоПолноправныйПользователь;	
	Элементы.ДеревоЭлементовКонтекстноеМенюКомандаПереместитьВниз.Доступность 	= ЭтоПолноправныйПользователь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	Настройки = ПодготовитьНастройкиКСохранению();	
	РегистрыСведений.гкс_ХранилищеНастроек.СохраненитьНастройку(КлючОбъекта, КлючНастроек, Настройки); 
	ОбновитьНастройки = Истина;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьНастройкиКСохранению()

	Настройки = Новый Соответствие;	
	ВременноеДерево = РеквизитФормыВЗначение("ДеревоЭлементов");	
	ПрочитатьДеревоРекурсивно(Настройки, ВременноеДерево);
	
	Возврат Настройки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоЭлементов()
	
	Если ЭтоПросмотрНастройки Тогда
		ДанныеЭлементов = РегистрыСведений.гкс_ХранилищеНастроек.ПолучитьСохраненныеНастройки(КлючОбъекта, КлючНастроек);
	Иначе
		Параметры.Свойство("ДанныеЭлементов", ДанныеЭлементов);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеЭлементов) Тогда 
		Возврат;
	КонецЕсли;
	
	ВременноеДерево = РеквизитФормыВЗначение("ДеревоЭлементов");
	
	ЗаполнитьДеревоРекурсивно(ДанныеЭлементов, ВременноеДерево);
	
	ВременноеДерево.Строки.Сортировать("НомерПП Возр", Истина);
	ЗначениеВРеквизитФормы(ВременноеДерево, "ДеревоЭлементов");
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДеревоРекурсивно(Настройки, ВременноеДерево)	
	
	Для Каждого СтрокаДерева Из ВременноеДерево.Строки Цикл
		
		ДанныеПодчиненныхЭлементов = Новый Соответствие;
		
		Если СтрокаДерева.НомерПП = 0 Тогда
			// Превый элемент, название списка
			ПрочитатьДеревоРекурсивно(ДанныеПодчиненныхЭлементов, СтрокаДерева);
			Настройки.Вставить(СтрокаДерева.Элемент, ДанныеПодчиненныхЭлементов);
		Иначе
			НастройкиЭлементов = Новый Структура;
			НастройкиЭлементов.Вставить("Видимость", 				СтрокаДерева.Видимость);
			НастройкиЭлементов.Вставить("НомерПП", 					СтрокаДерева.НомерПП);
			НастройкиЭлементов.Вставить("НовыйИндекс", 				СтрокаДерева.НовыйИндекс);
			НастройкиЭлементов.Вставить("СтарыйИндекс", 			СтрокаДерева.СтарыйИндекс);
			НастройкиЭлементов.Вставить("ИзмененПорядок", 			СтрокаДерева.ИзмененПорядок);
			НастройкиЭлементов.Вставить("Ширина", 					СтрокаДерева.Ширина);
			НастройкиЭлементов.Вставить("МаксимальнаяШирина", 		СтрокаДерева.МаксимальнаяШирина);
			НастройкиЭлементов.Вставить("АвтоМаксимальнаяШирина", 	СтрокаДерева.АвтоМаксимальнаяШирина);
			НастройкиЭлементов.Вставить("ЭтоГруппаКолонок", 		СтрокаДерева.ЭтоГруппаКолонок);
			НастройкиЭлементов.Вставить("ЭтоФлажок", 				СтрокаДерева.ЭтоФлажок);
			НастройкиЭлементов.Вставить("Заголовок", 				СтрокаДерева.Заголовок);
			НастройкиЭлементов.Вставить("ИндексКартинки", 			СтрокаДерева.ИндексКартинки);
			
			Если СтрокаДерева.ЭтоГруппаКолонок Тогда
				ПрочитатьДеревоРекурсивно(ДанныеПодчиненныхЭлементов, СтрокаДерева);
				НастройкиЭлементов.Вставить("ЭлементыГруппы", ДанныеПодчиненныхЭлементов);
			КонецЕсли;
			
			Настройки.Вставить(СтрокаДерева.Элемент, НастройкиЭлементов);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоРекурсивно(ЗначенияДерева, ВременноеДерево)
	
	Для Каждого СтрокаДерева Из ЗначенияДерева Цикл
		
		ЗначениеСтроки = СтрокаДерева.Значение;
		
		Если ТипЗнч(ЗначениеСтроки) = Тип("Соответствие") Тогда
			ВерхнийУровень = ВременноеДерево.Строки.Добавить();
			ВерхнийУровень.Элемент = СтрокаДерева.Ключ;
			ВерхнийУровень.Заголовок = СтрокаДерева.Ключ;
			ВерхнийУровень.ИндексКартинки = 1;
			ЗаполнитьДеревоРекурсивно(ЗначениеСтроки, ВерхнийУровень);			
		Иначе			
			НижнийУровень = ВременноеДерево.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НижнийУровень, ЗначениеСтроки);
			НижнийУровень.Элемент = СтрокаДерева.Ключ;
			Если ТипЗнч(ЗначениеСтроки) = Тип("Структура") И ЗначениеСтроки.ЭтоГруппаКолонок Тогда
				ЗаполнитьДеревоРекурсивно(ЗначениеСтроки.ЭлементыГруппы, НижнийУровень);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьНастроек(ВидимостьНастроек, ЭтоВерхняяИерархия)
	
	Элементы.НастройкаШирина.Видимость 		= Не ЭтоВерхняяИерархия;
	Элементы.НастройкаВидимость.Видимость 	= Не ЭтоВерхняяИерархия;
	
	Элементы.НастройкаАвтоМаксимальнаяШирина.Видимость 	= ВидимостьНастроек И Не ЭтоВерхняяИерархия;	
	Элементы.НастройкаМаксимальнаяШирина.Видимость 		= ВидимостьНастроек И Не ЭтоВерхняяИерархия;
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьЗначениеНастройкиСтроки(ТекДанные)
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РасширенныеНастройки = Не ТекДанные.ЭтоГруппаКолонок И Не ТекДанные.ЭтоФлажок;
	ЭтоВерхняяИерархия = ТекДанные.НомерПП = 0;
	
	УстановитьВидимостьНастроек(РасширенныеНастройки, ЭтоВерхняяИерархия);
	
	НастройкаВидимость 	= ТекДанные.Видимость;
	НастройкаШирина 	= ТекДанные.Ширина;
	
	Если РасширенныеНастройки Тогда		
		НастройкаАвтоМаксимальнаяШирина 	= ТекДанные.АвтоМаксимальнаяШирина;
		НастройкаМаксимальнаяШирина 		= ТекДанные.МаксимальнаяШирина;
		ИзменитьВидимостьМаксимальнаяШирина(ЭтоВерхняяИерархия);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидимостьМаксимальнаяШирина(ЭтоВерхняяИерархия = Ложь)
	
	Элементы.НастройкаМаксимальнаяШирина.Видимость = Не НастройкаАвтоМаксимальнаяШирина И Не ЭтоВерхняяИерархия;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьСтрокуНаКлиенте(Смещение)
	
	ТекДанные = Элементы.ДеревоЭлементов.ТекущиеДанные;
	
	ТекРодитель = ТекДанные.ПолучитьРодителя();
	Если ТекРодитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиДереваРодителя = ТекРодитель.ПолучитьЭлементы();	
	ИндексТек = СтрокиДереваРодителя.Индекс(ТекДанные);
	
	ИндексСмещеннаяСтрока = ИндексТек + Смещение;
	
	Если ИндексСмещеннаяСтрока < 0 Тогда
		// Отменить перемещение. Выше нулевого уровня смещать некуда.
		Возврат;
	КонецЕсли;
	
	СмещеннаяСтрока = СтрокиДереваРодителя.Получить(ИндексСмещеннаяСтрока);
	
	СтрокиДереваРодителя.Сдвинуть(ИндексТек, Смещение);
	
	ТекДанные.НомерПП = ТекДанные.НомерПП + Смещение;
	ТекДанные.НовыйИндекс = ТекДанные.НовыйИндекс + Смещение;
	ТекДанные.ИзмененПорядок = Истина;
	
	СмещеннаяСтрока.НомерПП = СмещеннаяСтрока.НомерПП - Смещение;
	СмещеннаяСтрока.НовыйИндекс = СмещеннаяСтрока.НовыйИндекс - Смещение;
	
КонецПроцедуры

#КонецОбласти