
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выбирает записи в графике отгрузки за период 
//
// Параметры:
//  Период - Структура - период с свойствами ДатаНачала и ДатаОкончания
//
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - записи графика отгрузки
//
Функция ЗаписиГрафикаЗаПериод(Период) Экспорт
	
	ЗапросГрафика = Новый Запрос;
	ЗапросГрафика.Текст = 
	"ВЫБРАТЬ
	|	ГрафикОтгрузкиПЛК.Номенклатура КАК Номенклатура,
	|	ГрафикОтгрузкиПЛК.НачалоПериода КАК НачалоПериода,
	|	ГрафикОтгрузкиПЛК.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ГрафикОтгрузкиПЛК.Регистратор КАК Регистратор,
	|	ГрафикОтгрузкиПЛК.КоличествоТранспортныхСредствВЧас КАК КоличествоТранспортныхСредствВЧас,
	|	ГрафикОтгрузкиПЛК.КоличествоТранспортныхСредствВЧасПоЭО КАК КоличествоТранспортныхСредствВЧасПоЭО
	|ИЗ
	|	РегистрСведений.гкс_ГрафикОтгрузкиПЛК КАК ГрафикОтгрузкиПЛК
	|ГДЕ
	|	ГрафикОтгрузкиПЛК.НачалоПериода <= &ОкончаниеПериода
	|	И ГрафикОтгрузкиПЛК.ОкончаниеПериода >= &НачалоПериода";
	
	ЗапросГрафика.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	ЗапросГрафика.УстановитьПараметр("ОкончаниеПериода", Период.ДатаОкончания);
	
	РезультатЗапроса = ЗапросГрафика.Выполнить();
	
	ВыборкаГрафика = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаГрафика;
	
КонецФункции

Функция КоличествоТранспортныхСредствВЧас(Дата, Номенклатура = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				|	ГрафикОтгрузкиПЛК.КоличествоТранспортныхСредствВЧас КАК КоличествоТранспортныхСредствВЧас,
				|	МАКСИМУМ(ГрафикОтгрузкиПЛК.НачалоПериода) КАК НачалоПериода
				|ИЗ
				|	РегистрСведений.гкс_ГрафикОтгрузкиПЛК КАК ГрафикОтгрузкиПЛК
				|ГДЕ
				|	ГрафикОтгрузкиПЛК.Активность
				|	//ЕстьНоменклатура И ГрафикОтгрузкиПЛК.Номенклатура = &Номенклатура
				|	И ГрафикОтгрузкиПЛК.НачалоПериода <= &НачалоПериода
				|
				|СГРУППИРОВАТЬ ПО
				|	ГрафикОтгрузкиПЛК.КоличествоТранспортныхСредствВЧас
				|
				|УПОРЯДОЧИТЬ ПО
				|	НачалоПериода УБЫВ";
		
	Запрос.УстановитьПараметр("НачалоПериода", Дата);
	
	Если Номенклатура <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ЕстьНоменклатура", ""); 
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.КоличествоТранспортныхСредствВЧас;
	КонецЕсли;
	
КонецФункции

// Проверяет есть ли место в графике по заданным параметрам
//
// Параметры:
//  ДанныеГрафика - Структура - структура параметров
//
// Возвращаемое значение:
//  Булево - есть или нет.
//
Функция ЕстьСвободноеМесто(Период, Номенклатура, График = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК ЕстьЗанятыеМеста
	|ИЗ
	|	РегистрСведений.гкс_ГрафикОтгрузкиПЛК КАК График
	|ГДЕ
	|	График.НачалоПериода < &ОкончаниеПериода
	|	И График.ОкончаниеПериода > &НачалоПериода
	|	И График.Активность
	|	И График.Номенклатура = &Номенклатура"; 
	
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

	Если ЗначениеЗаполнено(График) Тогда
		
		Запрос.УстановитьПараметр("Ссылка", График);
		Запрос.Текст = Запрос.Текст + "
		|	И НЕ График.Регистратор = &Ссылка";
		
	КонецЕсли;
		
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

// Проверяет заполнен ли график по заданным параметрам
//
// Параметры:
//  ДанныеГрафика - Структура - структура параметров
//
// Возвращаемое значение:
//  Булево - заполнен или нет.
//
Функция ГрафикЗаполнен(Период, Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК ГрафикСуществует
	|ИЗ
	|	РегистрСведений.гкс_ГрафикОтгрузкиПЛК КАК График
	|ГДЕ
	|	График.НачалоПериода <= &НачалоПериода
	|	И График.ОкончаниеПериода >= &ОкончаниеПериода
	|	И График.Активность
	|	И График.Номенклатура = &Номенклатура";

	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Возврат НЕ Запрос.Выполнить().Пустой(); 
		
КонецФункции

Функция СтатистикаПоТранспортнымСредствамДляЗаполнения(ДанныеОбъекта) Экспорт
	
	Результат = Новый Структура("КоличествоТранспортныхСредствВЧас, КоличествоТранспортныхСредствВЧасПоЭО", 0, 0);
	
	Запрос = Новый Запрос;	
	Запрос.Текст = ТекстЗапросаСтатистикаПоТранспортнымСредствамДляЗаполнения();
	
	Запрос.УстановитьПараметр("НачалоПериода", ДанныеОбъекта.НачалоПериода);	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТекстыЗапросов

Функция ТекстЗапросаСтатистикаПоТранспортнымСредствамДляЗаполнения()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ГрафикОтгрузкиПЛК.КоличествоТранспортныхСредствВЧас КАК КоличествоТранспортныхСредствВЧас,
	|	ГрафикОтгрузкиПЛК.КоличествоТранспортныхСредствВЧасПоЭО КАК КоличествоТранспортныхСредствВЧасПоЭО
	|ИЗ
	|	РегистрСведений.гкс_ГрафикОтгрузкиПЛК КАК ГрафикОтгрузкиПЛК
	|ГДЕ
	|	ГрафикОтгрузкиПЛК.ОкончаниеПериода <= &НачалоПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГрафикОтгрузкиПЛК.ОкончаниеПериода УБЫВ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли