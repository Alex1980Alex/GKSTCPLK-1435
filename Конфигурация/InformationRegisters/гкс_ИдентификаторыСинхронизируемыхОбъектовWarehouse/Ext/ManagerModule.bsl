#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
    
#Область ПрограммныйИнтерфейс
 
// Процедура добавляет запись в регистр по переданным значениям структуры.
//
// Параметры:
//  СтруктураЗаписи - Структура - структура, по значениям которой необходимо создать набор записей и заполнить этот
//                                набор.
//  Загрузка     	- Булево - Параметр "ОбменДанными.Загрузка".
//
Процедура ДобавитьЗапись(Запись, Загрузка = Ложь) Экспорт
    
    гкс_ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(
		Запись, 
		"гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse", 
		Загрузка);
    
КонецПроцедуры

// Процедура изменяет существующую запись в регистр.
//
// Параметры:
//  СтруктураЗаписи - Структура - структура, по значениям которой необходимо создать набор записей и заполнить этот
//                                набор.
//
Процедура ДополнитьСсылкуВЗаписьРегистра(СтруктураЗаписи) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Идентификатор.Установить(СтруктураЗаписи.Идентификатор);
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Прочитать();
	НаборЗаписей.Заполнить(СтруктураЗаписи);		
	
	НаборЗаписей.Записать();
			
КонецПроцедуры

// Возращает струтуру записи регистра
//
// Возвращаемое значение:
//  Структура - наименования измерений регистра.
//
Функция СтруктураЗаписи() Экспорт
    
    СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Идентификатор");
	СтруктураЗаписи.Вставить("Ссылка");
	СтруктураЗаписи.Вставить("НаименованиеОбъекта");
	СтруктураЗаписи.Вставить("ТипОбъекта");

    Возврат СтруктураЗаписи;
    
КонецФункции

// Процедура удаляет набор записей в регистре по переданным значениям структуры.
//
// Параметры:
//  СтруктураЗаписи - Структура - структура, по значениям которой необходимо удалить набор записей.
//  Загрузка     	- Булево - Параметр "ОбменДанными.Загрузка".
//
Процедура УдалитьЗапись(СтруктураЗаписи, Загрузка = Ложь) Экспорт
	
	гкс_ОбменДаннымиСервер.УдалитьНаборЗаписейВРегистреСведений(
		СтруктураЗаписи, 
		"гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse", 
		Загрузка);
	
КонецПроцедуры

// Получает ссылку на объект переданному УИДу.
// 
// Параметры:
//  Идентификатор - Строка - Уникальный идентификатор объекта.
//
// Возвращаемое значение:
//  СсылкаНаОбъект, Неопределено - ссылка на объект информационной базы.
//
Функция СсылкеОбъектаПоИдентификатору(Идентификатор) Экспорт
	
	СсылкаНаОбъект 	= Неопределено;
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= ТекстЗапросаСсылкеОбъектаПоИдентификатору();
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		СсылкаНаОбъект = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат СсылкаНаОбъект;

КонецФункции

Функция ЗаписьЕстьВРегистре(СтруктураЗаписи) Экспорт
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= ТекстЗапросаЗаписьЕстьВРегистре();
	Запрос.УстановитьПараметр("Ссылка", СтруктураЗаписи.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Получает уникальный идентификатор объекта по ссылке на объект.
// 
// Параметры:
//  СсылкаНаОбъект, Неопределено - ссылка на объект информационной базы.
//
// Возвращаемое значение:
//  Идентификатор - Строка - Уникальный идентификатор объекта.
//
Функция ИдентификаторПоСсылкеНаОбъекта(СсылкаНаОбъект) Экспорт
	
	Идентификатор 	= "";
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= ТекстЗапросаИдентификаторПоСсылкеНаОбъекта();
	Запрос.УстановитьПараметр("СсылкаНаОбъект", СсылкаНаОбъект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Идентификатор = Выборка.Идентификатор;
	КонецЕсли;
	
	Возврат Идентификатор;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТекстыЗапроса

Функция ТекстЗапросаСсылкеОбъектаПоИдентификатору()
	
	Возврат 
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК Таблица
	|ГДЕ
	|	Таблица.Идентификатор = &Идентификатор";
	
КонецФункции

Функция ТекстЗапросаИдентификаторПоСсылкеНаОбъекта()
	
	Возврат 
	"ВЫБРАТЬ
	|	Таблица.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &СсылкаНаОбъект";
	
КонецФункции

Функция ТекстЗапросаЗаписьЕстьВРегистре()
	
	Возврат 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьЗапись
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли