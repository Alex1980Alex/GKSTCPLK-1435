#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом
// 
// Параметры:
// Ограничение - См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ТочкаМаршрута)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Зарегистировать в АРМ Приемки на ПЛК
// 
// Параметры:
//	ДокументРегистрации - ДокументСсылка.гкс_РегистрацияНаПЛК
//
Процедура ЗарегистрироватьВАРМПриемкиНаПЛК(ДокументРегистрации) Экспорт
	
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.ДокументРегистрации.Установить(ДокументРегистрации);
	
	Таблица = ВыполнитьПолноеЗаполнениеИнформацииПоРегистрации(ДокументРегистрации);
	
	Если Таблица <> Неопределено Тогда
		Набор.Загрузить(Таблица);
	КонецЕсли;
	
	Набор.Записать();
	
КонецПроцедуры

// Возвращает текст запроса динамического списка арм допуски
// 
// Возвращаемое значение:
// 	Строка - Текст запроса
// 
Функция ПолучитьТекстЗапросаДинамическогоСпискаДопуски() Экспорт
	ЗапросТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РССтатусыДопускаВагоновКВскрытию.ДокументРегистрации КАК ДокументРегистрации,
	|	РССтатусыДопускаВагоновКВскрытию.Вагон КАК Вагон,
	|	РССтатусыДопускаВагоновКВскрытию.ВскрытиеЗапрещено КАК ВскрытиеЗапрещено,
	|	РССтатусыДопускаВагоновКВскрытию.ДопускКВскрытию КАК ДопускКВскрытию
	|ПОМЕСТИТЬ ВТ_СтатусыДопускаВагоновКВскрытию
	|ИЗ
	|	РегистрСведений.гкс_СтатусыДопускаВагоновКВскрытию.СрезПоследних(, ) КАК РССтатусыДопускаВагоновКВскрытию
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистрации,
	|	Вагон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрации КАК ДокументРегистрации,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА
	|			ВТ_СтатусыДопускаВагоновКВскрытию.ДопускКВскрытию = ЗНАЧЕНИЕ(Перечисление.гкс_ДопускиКВскрытиюВагонов.Фитосанитарный)
	|			ТОГДА ВТ_СтатусыДопускаВагоновКВскрытию.ВскрытиеЗапрещено
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК Фитосанитарный,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА
	|			ВТ_СтатусыДопускаВагоновКВскрытию.ДопускКВскрытию = ЗНАЧЕНИЕ(Перечисление.гкс_ДопускиКВскрытиюВагонов.Фумигационный)
	|			ТОГДА ВТ_СтатусыДопускаВагоновКВскрытию.ВскрытиеЗапрещено
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК Фумигационный,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА
	|			ВТ_СтатусыДопускаВагоновКВскрытию.ДопускКВскрытию = ЗНАЧЕНИЕ(Перечисление.гкс_ДопускиКВскрытиюВагонов.Претензионный)
	|			ТОГДА ВТ_СтатусыДопускаВагоновКВскрытию.ВскрытиеЗапрещено
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК Претензионный
	|ПОМЕСТИТЬ ВТ_ДопускиКВскрытиюВагонов
	|ИЗ
	|	РегистрСведений.гкс_АРМПриемкиНаПЛКСписокРегистраций КАК АРМПриемкиНаПЛКСписокРегистраций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатусыДопускаВагоновКВскрытию КАК ВТ_СтатусыДопускаВагоновКВскрытию
	|		ПО АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрации = ВТ_СтатусыДопускаВагоновКВскрытию.ДокументРегистрации
	|		И АРМПриемкиНаПЛКСписокРегистраций.ТранспортноеСредство = ВТ_СтатусыДопускаВагоновКВскрытию.Вагон
	|СГРУППИРОВАТЬ ПО
	|	АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";	
	Возврат ЗапросТекст;
КонецФункции

// Возвращает текст запроса для динамического списка АРМа приемки и отгрузки на ПЛК 
//
// Параметры:
//   ЭтоЖД - Булево - это ЖД перевозка
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ПолучитьТекстЗапросаДинамическогоСписка(ЭтоЖД) Экспорт
	
	ЗапросТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АРМПриемкиНаПЛКСписокРегистраций.ТочкаМаршрута КАК ТочкаМаршрута,
		|	АРМПриемкиНаПЛКСписокРегистраций.ВидПеревозки КАК ВидПеревозки,
		|	АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрации КАК ДокументРегистрации,
		|	АРМПриемкиНаПЛКСписокРегистраций.ТипРегистрации КАК ТипРегистрации,
		|	АРМПриемкиНаПЛКСписокРегистраций.ТранспортноеСредство КАК ТранспортноеСредство,
		|	АРМПриемкиНаПЛКСписокРегистраций.Состояние КАК Состояние,
		|	АРМПриемкиНаПЛКСписокРегистраций.ВесБрутто КАК ВесБрутто,
		|	АРМПриемкиНаПЛКСписокРегистраций.ВесТары КАК ВесТары,
		|	ВЫБОР
		|		КОГДА АРМПриемкиНаПЛКСписокРегистраций.ВесТары = 0
		|			ТОГДА 0
		|		ИНАЧЕ АРМПриемкиНаПЛКСписокРегистраций.ВесБрутто - АРМПриемкиНаПЛКСписокРегистраций.ВесТары
		|	КОНЕЦ КАК ВесНетто,
		|	АРМПриемкиНаПЛКСписокРегистраций.ВесБруттоДокумент КАК ВесБруттоДокумент,
		|	АРМПриемкиНаПЛКСписокРегистраций.ВесНеттоДокумент КАК ВесНеттоДокумент,
		|	АРМПриемкиНаПЛКСписокРегистраций.ВесТарыДокумент КАК ВесТарыДокумент,
		|	АРМПриемкиНаПЛКСписокРегистраций.Водитель КАК Водитель,
		|	АРМПриемкиНаПЛКСписокРегистраций.ВремяЗаписи КАК ВремяЗаписи,
		|	АРМПриемкиНаПЛКСписокРегистраций.Дата КАК Дата,
		|	АРМПриемкиНаПЛКСписокРегистраций.ДатаСостояния КАК ДатаСостояния,
		|	АРМПриемкиНаПЛКСписокРегистраций.Спецификация КАК Спецификация,
		|	ЕСТЬNULL(АРМПриемкиНаПЛКСписокРегистраций.Спецификация.Номер, """") КАК НомерСпецификации,
		|	АРМПриемкиНаПЛКСписокРегистраций.ДокументНаправлениеНаРазгрузку КАК ДокументНаправлениеНаРазгрузку,
		|	АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрацииАнализов КАК ДокументРегистрацииАнализов,
		|	АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрацииВъезда КАК ДокументРегистрацииВъезда,
		|	АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрацииВыезда КАК ДокументРегистрацииВыезда,
		|	АРМПриемкиНаПЛКСписокРегистраций.ДокументФормированиеНомераПробы КАК ДокументФормированиеНомераПробы,
		|	АРМПриемкиНаПЛКСписокРегистраций.ЖиваяОчередь КАК ЖиваяОчередь,
		|	АРМПриемкиНаПЛКСписокРегистраций.Комментарий КАК Комментарий,
		|	АРМПриемкиНаПЛКСписокРегистраций.Контрагент КАК Контрагент,
		|	АРМПриемкиНаПЛКСписокРегистраций.Номенклатура КАК Номенклатура,
		|	АРМПриемкиНаПЛКСписокРегистраций.Номер КАК Номер,
		|	АРМПриемкиНаПЛКСписокРегистраций.НомерПробы КАК НомерПробы,
		|	АРМПриемкиНаПЛКСписокРегистраций.НомерДокументаПоставщика КАК НомерДокументаПоставщика,
		|	АРМПриемкиНаПЛКСписокРегистраций.ОтклонениеБрутто КАК ОтклонениеБрутто,
		|	ВЫБОР
		|		КОГДА АРМПриемкиНаПЛКСписокРегистраций.ВесТары = 0
		|			ТОГДА 0
		|		ИНАЧЕ АРМПриемкиНаПЛКСписокРегистраций.ВесНеттоДокумент - АРМПриемкиНаПЛКСписокРегистраций.ВесБрутто + АРМПриемкиНаПЛКСписокРегистраций.ВесТары
		|	КОНЕЦ КАК ОтклонениеНетто,
		|	АРМПриемкиНаПЛКСписокРегистраций.СкладПлан КАК СкладПлан,
		|	АРМПриемкиНаПЛКСписокРегистраций.ЯмаРазгрузки КАК ЯмаРазгрузки,
		|	АРМПриемкиНаПЛКСписокРегистраций.ТипРегистрации = ЗНАЧЕНИЕ(Перечисление.гкс_ТипРегистрации.Приемка) КАК ИндексКартинкиТипРегистрации,
		|	АРМПриемкиНаПЛКСписокРегистраций.ТранспортныйДокумент КАК ТранспортныйДокумент,
		|	ВЫБОР
		|	КОГДА АРМПриемкиНаПЛКСписокРегистраций.ВидПеревозки = ЗНАЧЕНИЕ(Перечисление.гкс_ТипыТранспортныхСредствДоставки.ЖДТранспорт)
		|		ТОГДА АРМПриемкиНаПЛКСписокРегистраций.СтанцияЖД.НаименованиеПолное
		|	ИНАЧЕ АРМПриемкиНаПЛКСписокРегистраций.ПунктПогрузки
		|	КОНЕЦ КАК ПунктПогрузки,                            
		|	АРМПриемкиНаПЛКСписокРегистраций.СтанцияЖД КАК СтанцияЖД,
		|	АРМПриемкиНаПЛКСписокРегистраций.Отправитель КАК Отправитель,
		|	АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрации В (&ВыбранныеРегистрации) КАК Отметка,
		|	//ЭтоWarehouseЕСТЬNULL(ВТ_ВнешниеПробы.ЗначениеПоказателя, 0) КАК Протеин,
		|	//ЭтоЖДВТ_ДопускиКВскрытиюВагонов.Фитосанитарный КАК Фитосанитарный,
		|	//ЭтоЖДВТ_ДопускиКВскрытиюВагонов.Фумигационный КАК Фумигационный,
		|	//ЭтоЖДВТ_ДопускиКВскрытиюВагонов.Претензионный КАК Претензионный
		|	//ЭтоАвтоНЕОПРЕДЕЛЕНО КАК ЖДПутьНаПЛК,
		|	//ЭтоАвто"""" КАК НомерВСцепке,
		|	//ЭтоАвтоЛОЖЬ КАК Фитосанитарный,
		|	//ЭтоАвтоЛОЖЬ КАК Фумигационный,
		|	//ЭтоАвтоЛОЖЬ КАК Претензионный
		|ИЗ
		|	РегистрСведений.гкс_АРМПриемкиНаПЛКСписокРегистраций КАК АРМПриемкиНаПЛКСписокРегистраций
		|		//ЭтоЖДЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопускиКВскрытиюВагонов КАК ВТ_ДопускиКВскрытиюВагонов
		|		//ЭтоЖДПО АРМПриемкиНаПЛКСписокРегистраций.ДокументРегистрации = ВТ_ДопускиКВскрытиюВагонов.ДокументРегистрации
		|		//ЭтоWarehouseЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВнешниеПробы КАК ВТ_ВнешниеПробы
		|		//ЭтоWarehouseПО АРМПриемкиНаПЛКСписокРегистраций.ТранспортноеСредство = ВТ_ВнешниеПробы.ТранспортноеСредство
		|";
	
	ЗапросТекстВнешниеПробы =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВнешниеПробы.ТранспортноеСредство КАК ТранспортноеСредство,
		|	МАКСИМУМ(ВнешниеПробы.ДатаПробы) КАК ДатаПробы
		|ПОМЕСТИТЬ ВТ_ДатыПроб
		|ИЗ
		|	РегистрСведений.гкс_ВнешниеПробы КАК ВнешниеПробы
		|ГДЕ
		|	ВнешниеПробы.Показатель = ЗНАЧЕНИЕ(Справочник.гкс_ПоказателиКачестваWarehouse.ПротеинЭкспрессЗерновыеМасличные)
		|СГРУППИРОВАТЬ ПО
		|	ВнешниеПробы.ТранспортноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТранспортноеСредство,
		|	ДатаПробы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ДатыПроб.ТранспортноеСредство КАК ТранспортноеСредство,
		|	МАКСИМУМ(ЕСТЬNULL(ВнешниеПробы.ЗначениеПоказателя, 0)) КАК ЗначениеПоказателя
		|ПОМЕСТИТЬ ВТ_ВнешниеПробы
		|ИЗ
		|	ВТ_ДатыПроб КАК ВТ_ДатыПроб
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_ВнешниеПробы КАК ВнешниеПробы
		|		ПО ВТ_ДатыПроб.ТранспортноеСредство = ВнешниеПробы.ТранспортноеСредство
		|		И ВТ_ДатыПроб.ДатаПробы = ВнешниеПробы.ДатаПробы
		|		И ВнешниеПробы.Показатель = ЗНАЧЕНИЕ(Справочник.гкс_ПоказателиКачестваWarehouse.ПротеинЭкспрессЗерновыеМасличные)
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДатыПроб.ТранспортноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТранспортноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
	Если ЭтоЖД Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "//ЭтоЖД", "");
		
		ИспользоватьИнтеграциюСWarehouse = ПолучитьФункциональнуюОпцию("гкс_ИспользоватьИнтеграциюСWarehouse");
		Если ИспользоватьИнтеграциюСWarehouse Тогда
			ЗапросТекст = ЗапросТекстВнешниеПробы + СтрЗаменить(ЗапросТекст, "//ЭтоWarehouse", "");
		КонецЕсли;
	Иначе
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "//ЭтоАвто", "");
	КонецЕсли;
	
	Возврат ЗапросТекст;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Возвращает записи для регистрации в АРМе на ПЛК 
//
// Параметры:
//   ДокументРегистрации - ДокументСсылка.гкс_РегистрацияНаПЛК - документ регистрации
//
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица для загрузки в регистр.
//
Функция ВыполнитьПолноеЗаполнениеИнформацииПоРегистрации(ДокументРегистрации)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполнениеИнформацииПоРегистрации();
	
	Запрос.УстановитьПараметр("ДокументРегистрации", ДокументРегистрации);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ЗаписьВРегистр = Неопределено;
	Иначе
		ЗаписьВРегистр = РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
	Возврат ЗаписьВРегистр;
	
КонецФункции

Функция ТекстЗапросаЗаполнениеИнформацииПоРегистрации()
	
	Возврат 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РССостоянияРегистрацииСрезПоследних.ТочкаМаршрута КАК ТочкаМаршрута,
	|	РССостоянияРегистрацииСрезПоследних.ВидПеревозки КАК ВидПеревозки,
	|	РССостоянияРегистрацииСрезПоследних.ТипРегистрации КАК ТипРегистрации,
	|	РССостоянияРегистрацииСрезПоследних.ДокументРегистрации КАК ДокументРегистрации,
	|	РССостоянияРегистрацииСрезПоследних.ТранспортноеСредство КАК ТранспортноеСредство,
	|	РССостоянияРегистрацииСрезПоследних.Период КАК Период,
	|	РССостоянияРегистрацииСрезПоследних.Состояние КАК Состояние,
	|	РССостоянияРегистрацииСрезПоследних.МестнаяДата КАК МестнаяДата
	|ПОМЕСТИТЬ ВТ_СостоянияРегистрации
	|ИЗ
	|	РегистрСведений.гкс_СостоянияРегистрации.СрезПоследних(, ДокументРегистрации = &ДокументРегистрации) КАК РССостоянияРегистрацииСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияРегистрацииСрезПоследних.ТочкаМаршрута КАК ТочкаМаршрута,
	|	СостоянияРегистрацииСрезПоследних.ВидПеревозки КАК ВидПеревозки,
	|	СостоянияРегистрацииСрезПоследних.ТипРегистрации КАК ТипРегистрации,
	|	СостоянияРегистрацииСрезПоследних.ДокументРегистрации КАК ДокументРегистрации,
	|	СостоянияРегистрацииСрезПоследних.ТранспортноеСредство КАК ТранспортноеСредство,
	|	СостоянияРегистрацииСрезПоследних.Период КАК Период,
	|	СостоянияРегистрацииСрезПоследних.Состояние КАК Состояние,
	|	МАКСИМУМ(ЕСТЬNULL(ВзвешиваниеВъезд.Ссылка, НЕОПРЕДЕЛЕНО)) КАК ДокументРегистрацииВъезда,
	|	МАКСИМУМ(ЕСТЬNULL(ВзвешиваниеВыезд.Ссылка, НЕОПРЕДЕЛЕНО)) КАК ДокументРегистрацииВыезда,
	|	МАКСИМУМ(ЕСТЬNULL(ЛабораторныйАнализ.Ссылка, НЕОПРЕДЕЛЕНО)) КАК ДокументРегистрацииАнализов,
	|	МАКСИМУМ(ЕСТЬNULL(НаправлениеНаРазгрузку.Ссылка, НЕОПРЕДЕЛЕНО)) КАК ДокументНаправлениеНаРазгрузку,
	|	МАКСИМУМ(ЕСТЬNULL(ФормированиеНомераПробы.Ссылка, НЕОПРЕДЕЛЕНО)) КАК ДокументФормированиеНомераПробы,
	|	СостоянияРегистрацииСрезПоследних.МестнаяДата КАК МестнаяДата,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Комментарии.Комментарий, """") КАК СТРОКА(300)) КАК Комментарий,
	|	ЕСТЬNULL(ВТ_СостоянияРегистрации.ТранспортныйДокумент, НЕОПРЕДЕЛЕНО) КАК ТранспортныйДокумент
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	ВТ_СостоянияРегистрации КАК СостоянияРегистрацииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК ДокументРегистрация
	|		ПО СостоянияРегистрацииСрезПоследних.ДокументРегистрации = ДокументРегистрация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_Взвешивание КАК ВзвешиваниеВъезд
	|		ПО СостоянияРегистрацииСрезПоследних.ДокументРегистрации = ВзвешиваниеВъезд.ДокументРегистрации
	|			И (ВзвешиваниеВъезд.Проведен)
	|			И (ВзвешиваниеВъезд.ТипВзвешивания = ЗНАЧЕНИЕ(Перечисление.гкс_ТипыВзвешивания.Въезд))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_Взвешивание КАК ВзвешиваниеВыезд
	|		ПО СостоянияРегистрацииСрезПоследних.ДокументРегистрации = ВзвешиваниеВыезд.ДокументРегистрации
	|			И (ВзвешиваниеВыезд.Проведен)
	|			И (ВзвешиваниеВыезд.ТипВзвешивания = ЗНАЧЕНИЕ(Перечисление.гкс_ТипыВзвешивания.Выезд))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ЛабораторныйАнализ КАК ЛабораторныйАнализ
	|		ПО СостоянияРегистрацииСрезПоследних.ДокументРегистрации = ЛабораторныйАнализ.гкс_ДокументРегистрации
	|			И (ЛабораторныйАнализ.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_НаправлениеНаРазгрузку КАК НаправлениеНаРазгрузку
	|		ПО СостоянияРегистрацииСрезПоследних.ДокументРегистрации = НаправлениеНаРазгрузку.ДокументРегистрации
	|			И (НаправлениеНаРазгрузку.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ФормированиеНомераПробы.СписокРегистраций КАК ФормированиеНомераПробы
	|		ПО СостоянияРегистрацииСрезПоследних.ДокументРегистрации = ФормированиеНомераПробы.ДокументРегистрации
	|			И (ВЫРАЗИТЬ(ФормированиеНомераПробы.Ссылка КАК Документ.гкс_ФормированиеНомераПробы).Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_КомментарииКСтатусуКачествоНеПринято КАК Комментарии
	|		ПО СостоянияРегистрацииСрезПоследних.ДокументРегистрации = Комментарии.ДокументРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_СвязьРегистрацииИТранспортногоДокумента КАК ВТ_СостоянияРегистрации
	|		ПО СостоянияРегистрацииСрезПоследних.ДокументРегистрации = ВТ_СостоянияРегистрации.ДокументРегистрации
	|ГДЕ
	|	НЕ СостоянияРегистрацииСрезПоследних.Состояние В (ЗНАЧЕНИЕ(Перечисление.гкс_СостоянияРегистрации.Убыл), ЗНАЧЕНИЕ(Перечисление.гкс_СостоянияРегистрации.НеПринято))
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияРегистрацииСрезПоследних.ВидПеревозки,
	|	СостоянияРегистрацииСрезПоследних.ТипРегистрации,
	|	СостоянияРегистрацииСрезПоследних.ДокументРегистрации,
	|	СостоянияРегистрацииСрезПоследних.Период,
	|	СостоянияРегистрацииСрезПоследних.ТранспортноеСредство,
	|	СостоянияРегистрацииСрезПоследних.Состояние,
	|	ЕСТЬNULL(ВзвешиваниеВыезд.КачествоНеПринято, ЛОЖЬ),
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Комментарии.Комментарий, """") КАК СТРОКА(300)),
	|	СостоянияРегистрацииСрезПоследних.ТочкаМаршрута,
	|	СостоянияРегистрацииСрезПоследних.МестнаяДата,
	|	ЕСТЬNULL(ВТ_СостоянияРегистрации.ТранспортныйДокумент, НЕОПРЕДЕЛЕНО)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистрацииВъезда,
	|	ДокументРегистрацииВыезда,
	|	ДокументНаправлениеНаРазгрузку,
	|	ДокументФормированиеНомераПробы,
	|	ТранспортныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВзвешиваниеВъезд.Вес, 0) КАК ВесВъезд,
	|	ЕСТЬNULL(ВзвешиваниеВыезд.Вес, 0) КАК ВесВыезд,
	|	ЕСТЬNULL(НаправлениеНаРазгрузку.Склад, НЕОПРЕДЕЛЕНО) КАК Склад,
	|	ЕСТЬNULL(НаправлениеНаРазгрузку.ЯмаРазгрузки, НЕОПРЕДЕЛЕНО) КАК ЯмаРазгрузки,
	|	ЕСТЬNULL(ФормированиеНомераПробы.НомерПробы, НЕОПРЕДЕЛЕНО) КАК НомерПробы,
	|	ВТ_Данные.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ВТ_Данные.ВидПеревозки КАК ВидПеревозки,
	|	ВТ_Данные.ТипРегистрации КАК ТипРегистрации,
	|	ВТ_Данные.ДокументРегистрации КАК ДокументРегистрации,
	|	ВТ_Данные.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВТ_Данные.Период КАК Период,
	|	ВТ_Данные.Состояние КАК Состояние,
	|	ВТ_Данные.ДокументРегистрацииВъезда КАК ДокументРегистрацииВъезда,
	|	ВТ_Данные.ДокументРегистрацииВыезда КАК ДокументРегистрацииВыезда,
	|	ВТ_Данные.ДокументРегистрацииАнализов КАК ДокументРегистрацииАнализов,
	|	ВТ_Данные.ДокументНаправлениеНаРазгрузку КАК ДокументНаправлениеНаРазгрузку,
	|	ВТ_Данные.ДокументФормированиеНомераПробы КАК ДокументФормированиеНомераПробы,
	|	ВТ_Данные.МестнаяДата КАК МестнаяДата,
	|	ВТ_Данные.Комментарий КАК Комментарий,
	|	ВТ_Данные.ТранспортныйДокумент КАК ТранспортныйДокумент,
	|	ЕСТЬNULL(ДокТранспортныйДокумент.ПунктПогрузки, НЕОПРЕДЕЛЕНО) КАК ПунктПогрузки,
	|	ЕСТЬNULL(ДокТранспортныйДокумент.Отправитель, НЕОПРЕДЕЛЕНО) КАК Отправитель,
	|	ЕСТЬNULL(ТочкиМаршрута.КодСтанцииЖД, НЕОПРЕДЕЛЕНО) КАК СтанцияЖД
	|ПОМЕСТИТЬ ВТ_Расчет
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_Взвешивание КАК ВзвешиваниеВъезд
	|		ПО ВТ_Данные.ДокументРегистрацииВъезда = ВзвешиваниеВъезд.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_Взвешивание КАК ВзвешиваниеВыезд
	|		ПО ВТ_Данные.ДокументРегистрацииВыезда = ВзвешиваниеВыезд.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_НаправлениеНаРазгрузку КАК НаправлениеНаРазгрузку
	|		ПО ВТ_Данные.ДокументНаправлениеНаРазгрузку = НаправлениеНаРазгрузку.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ФормированиеНомераПробы КАК ФормированиеНомераПробы
	|		ПО ВТ_Данные.ДокументФормированиеНомераПробы = ФормированиеНомераПробы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ТранспортныйДокумент КАК ДокТранспортныйДокумент
	|		ПО ВТ_Данные.ТранспортныйДокумент = ДокТранспортныйДокумент.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.гкс_ТочкиМаршрута КАК ТочкиМаршрута
	|		ПО (ДокТранспортныйДокумент.ПунктПогрузки = ТочкиМаршрута.Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Расчет.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВТ_Расчет.МестнаяДата КАК ДатаСостояния,
	|	ВТ_Расчет.Состояние КАК Состояние,
	|	ВТ_Расчет.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ВТ_Расчет.ДокументРегистрации КАК ДокументРегистрации,
	|	ВТ_Расчет.ТипРегистрации КАК ТипРегистрации,
	|	ВТ_Расчет.ВидПеревозки КАК ВидПеревозки,
	|	ВТ_Расчет.ДокументРегистрацииВъезда КАК ДокументРегистрацииВъезда,
	|	ВТ_Расчет.ДокументРегистрацииВыезда КАК ДокументРегистрацииВыезда,
	|	ВТ_Расчет.ДокументРегистрацииАнализов КАК ДокументРегистрацииАнализов,
	|	ВТ_Расчет.ДокументНаправлениеНаРазгрузку КАК ДокументНаправлениеНаРазгрузку,
	|	ВТ_Расчет.ДокументФормированиеНомераПробы КАК ДокументФормированиеНомераПробы,
	|	ДокументРегистрацияНаПЛК.Номер КАК Номер,
	|	ДокументРегистрацияНаПЛК.МестнаяДата КАК Дата,
	|	ДокументРегистрацияНаПЛК.Водитель КАК Водитель,
	|	ДокументРегистрацияНаПЛК.Контрагент КАК Контрагент,
	|	ДокументРегистрацияНаПЛК.Номенклатура КАК Номенклатура,
	|	ДокументРегистрацияНаПЛК.НомерДокументаПоставщика КАК НомерДокументаПоставщика,
	|	ЕСТЬNULL(ДокументРегистрацияНаПЛК.ВесБрутто, 0) КАК ВесБруттоДокумент,
	|	ЕСТЬNULL(ДокументРегистрацияНаПЛК.ВесНетто, 0) КАК ВесНеттоДокумент,
	|	ЕСТЬNULL(ДокументРегистрацияНаПЛК.ВесТары, 0) КАК ВесТарыДокумент,
	|	ВЫБОР
	|		КОГДА ВТ_Расчет.ТипРегистрации = ЗНАЧЕНИЕ(Перечисление.гкс_ТипРегистрации.Приемка)
	|			ТОГДА ВТ_Расчет.ВесВъезд
	|		ИНАЧЕ ВТ_Расчет.ВесВыезд
	|	КОНЕЦ КАК ВесБрутто,
	|	ВЫБОР
	|		КОГДА ВТ_Расчет.ТипРегистрации <> ЗНАЧЕНИЕ(Перечисление.гкс_ТипРегистрации.Приемка)
	|			ТОГДА ВТ_Расчет.ВесВъезд
	|		ИНАЧЕ ВТ_Расчет.ВесВыезд
	|	КОНЕЦ КАК ВесТары,
	|	ВТ_Расчет.Склад КАК СкладПлан,
	|	ВТ_Расчет.ЯмаРазгрузки КАК ЯмаРазгрузки,
	|	ВТ_Расчет.НомерПробы КАК НомерПробы,
	|	ВЫБОР
	|		КОГДА ВТ_Расчет.ТипРегистрации = ЗНАЧЕНИЕ(Перечисление.гкс_ТипРегистрации.Приемка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_Расчет.ДокументРегистрацииВыезда = НЕОПРЕДЕЛЕНО
	|						ТОГДА 0
	|					ИНАЧЕ ВТ_Расчет.ВесВъезд - ВТ_Расчет.ВесВъезд
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_Расчет.ДокументРегистрацииВъезда = НЕОПРЕДЕЛЕНО
	|					ТОГДА 0
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ВТ_Расчет.ДокументРегистрацииВыезда = НЕОПРЕДЕЛЕНО
	|							ТОГДА 0
	|						ИНАЧЕ ВТ_Расчет.ВесВыезд
	|					КОНЕЦ - ВТ_Расчет.ВесВъезд
	|			КОНЕЦ
	|	КОНЕЦ КАК ВесНетто,
	|	ВЫБОР
	|		КОГДА ВТ_Расчет.ТипРегистрации = ЗНАЧЕНИЕ(Перечисление.гкс_ТипРегистрации.Приемка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_Расчет.ДокументРегистрацииВъезда = НЕОПРЕДЕЛЕНО
	|						ТОГДА 0
	|					ИНАЧЕ ВТ_Расчет.ВесВъезд
	|				КОНЕЦ - ЕСТЬNULL(ДокументРегистрацияНаПЛК.ВесБрутто, 0)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_Расчет.ДокументРегистрацииВыезда = НЕОПРЕДЕЛЕНО
	|					ТОГДА 0
	|				ИНАЧЕ ВТ_Расчет.ВесВыезд
	|			КОНЕЦ - ЕСТЬNULL(ДокументРегистрацияНаПЛК.ВесБрутто, 0)
	|	КОНЕЦ КАК ОтклонениеБрутто,
	|	ВЫБОР
	|		КОГДА ВТ_Расчет.ТипРегистрации = ЗНАЧЕНИЕ(Перечисление.гкс_ТипРегистрации.Приемка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_Расчет.ДокументРегистрацииВыезда = НЕОПРЕДЕЛЕНО
	|						ТОГДА 0
	|					ИНАЧЕ ВТ_Расчет.ВесВъезд - ВТ_Расчет.ВесВыезд - ЕСТЬNULL(ДокументРегистрацияНаПЛК.ВесНетто, 0)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_Расчет.ДокументРегистрацииВъезда = НЕОПРЕДЕЛЕНО
	|					ТОГДА 0
	|				ИНАЧЕ ВТ_Расчет.ВесВыезд - ВТ_Расчет.ВесВъезд - ЕСТЬNULL(ДокументРегистрацияНаПЛК.ВесНетто, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК ОтклонениеНетто,
	|	ЕСТЬNULL(ЗаписьВОчередьПриемкиПЛК.НачалоПериода, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ВремяЗаписи,
	|	ЕСТЬNULL(ДокументРегистрацияНаПЛК.Спецификация, ЗНАЧЕНИЕ(Документ.гкс_СпецификацияКДоговоруКонтрагента.ПустаяСсылка)) КАК Спецификация,
	|	ВЫБОР
	|		КОГДА РегистрацииПоЭлектроннойОчереди.ЗаписьВОчередь ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЖиваяОчередь,
	|	ВТ_Расчет.Комментарий КАК Комментарий,
	|	ВТ_Расчет.ТранспортныйДокумент КАК ТранспортныйДокумент,
	|	ВТ_Расчет.ПунктПогрузки КАК ПунктПогрузки,
	|	ВТ_Расчет.Отправитель КАК Отправитель,
	|	ВТ_Расчет.СтанцияЖД КАК СтанцияЖД
	|ИЗ
	|	ВТ_Расчет КАК ВТ_Расчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК ДокументРегистрацияНаПЛК
	|		ПО ВТ_Расчет.ДокументРегистрации = ДокументРегистрацияНаПЛК.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_РегистрацииПоЭлектроннойОчереди КАК РегистрацииПоЭлектроннойОчереди
	|		ПО ВТ_Расчет.ДокументРегистрации = РегистрацииПоЭлектроннойОчереди.РегистрацияНаПЛК
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ЗаписьВОчередьПриемкиПЛК КАК ЗаписьВОчередьПриемкиПЛК
	|		ПО (РегистрацииПоЭлектроннойОчереди.ЗаписьВОчередь = ЗаписьВОчередьПриемкиПЛК.Ссылка)";
		
КонецФункции

#КонецОбласти

#КонецЕсли