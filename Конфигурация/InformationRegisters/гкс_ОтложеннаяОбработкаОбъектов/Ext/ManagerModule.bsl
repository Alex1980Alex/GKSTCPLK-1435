#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записать информацию об отложенной обработке. 
// 
// Параметры:
//  ОписаниеОбъекта - см. гкс_ОтложеннаяОбработкаОбъектов.СтруктураЗаписиОбъектаОтложеннойОбработки
Процедура ЗаписатьИнформациюОбОтложеннойОбработке(Знач ОписаниеОбъекта) Экспорт 
	
	Если НЕ ТипЗнч(ОписаниеОбъекта.ДополнительныеСвойства) = Тип("ХранилищеЗначения") Тогда
		ОписаниеОбъекта.ДополнительныеСвойства = Новый ХранилищеЗначения(ОписаниеОбъекта.ДополнительныеСвойства, Новый СжатиеДанных(9));	
	КонецЕсли;
	гкс_ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(ОписаниеОбъекта, "гкс_ОтложеннаяОбработкаОбъектов");

КонецПроцедуры

Процедура УдалитьСсылкуНаОбъектИзОтложеннойОбработки(СсылкаНаОбъект) Экспорт
	
	СтрукутраЗаписи = Новый Структура;
	СтрукутраЗаписи.Вставить("Объект", СсылкаНаОбъект);
	
	гкс_ОбменДаннымиСервер.УдалитьНаборЗаписейВРегистреСведений(СтрукутраЗаписи, "гкс_ОтложеннаяОбработкаОбъектов");
	
КонецПроцедуры

// Вычисляет, находиться ли переданный объект в очереди отложенной обработки
//
// Параметры:
//  Объект - ДокументСсылка -  
//
// Возвращаемое значение: 
//  Булево - признак того, что объект находиться в очереди отложенной обработки
//
Функция ОбъектВОчередиОтложеннойОбработки(Объект) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("Объект", Объект);
    Запрос.Текст = ТекстЗапросаОбъектВОчередиОтложеннойОбработки();
    
    Возврат НЕ Запрос.Выполнить().Пустой();
    
КонецФункции
 
// Структура записи.
// 
// Возвращаемое значение:
//  Структура - Структура записи:
// * ДатаОбъекта - Дата -  
// * Объект - Неопределено, ДокументСсылка - 
// * КоличествоНеудачныхОбработок - Число - 
// * СообщениеОбОшибкеОбработки - Строка - 
// * Действие - ПеречислениеСсылка.гкс_ДействияОтложеннойОбработки - 
// * ДополнительныеСвойства - Неопределено, Произвольный - 
Функция СтруктураЗаписи() Экспорт
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("ДатаОбъекта", гкс_ОбщегоНазначенияКлиентСервер.ПустаяДата());
	СтруктураЗаписи.Вставить("Объект", Неопределено);
	СтруктураЗаписи.Вставить("КоличествоНеудачныхОбработок", 0);
	СтруктураЗаписи.Вставить("СообщениеОбОшибкеОбработки", "");
	СтруктураЗаписи.Вставить("Действие", Перечисления.гкс_ДействияОтложеннойОбработки.ПустаяСсылка());
	СтруктураЗаписи.Вставить("ДополнительныеСвойства", Неопределено);
	
	Возврат СтруктураЗаписи;
	
КонецФункции

Функция ДанныеОтложеннойОбработкиОбъекта(Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", Объект);       
	Запрос.Текст = ТекстЗапросаДанныеОтложеннойОбработкиОбъекта();
	
	Возврат гкс_ОбщегоНазначения
	             .СтрокаТаблицыЗначенийВСтруктуру(Запрос.Выполнить().Выгрузить()[0]);
	
КонецФункции
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьОтложеннуюОбработкуОбъекта(СсылкаНаОбъект, ДополнительныеСвойства, Действие) Экспорт
	
	Если ЗначениеЗаполнено(ДополнительныеСвойства) Тогда
		гкс_ОбщегоНазначенияКлиентСервер.ПроверитьПараметр("ВыполнитьОтложеннуюОбработкуОбъекта", 
				                                           "ДополнительныеСвойства", 
				                                           ДополнительныеСвойства, 
	                                                       Новый ОписаниеТипов("Структура"));
	КонецЕсли;
	
	Попытка
		Объект = СсылкаНаОбъект.ПолучитьОбъект();
		ЗаполнитьСвойстваОтложенногоОбъекта(Объект, ДополнительныеСвойства);
		
		Если Объект.ПроверитьЗаполнение() Тогда			
			Объект.Записать(РежимЗаписиПоДействию(Действие));			
		Иначе
			ВызватьИсключение НСтр("ru='Ошибка проверки заполнения реквизитов'");
		КонецЕсли;
		
	Исключение
		ВызватьИсключение гкс_ОбщегоНазначения.РасширенноеОписаниеОшибки(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Функция РежимЗаписиПоДействию(Действие)
	
	РежимЗаписи = РежимЗаписиДокумента.Запись;			
	Если Действие = Перечисления.гкс_ДействияОтложеннойОбработки.Проведение Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;				
	ИначеЕсли Действие = Перечисления.гкс_ДействияОтложеннойОбработки.ОтменаПроведения Тогда									
		РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;				
	КонецЕсли;
	
	Возврат РежимЗаписи;
	
КонецФункции

Процедура ЗаполнитьСвойстваОтложенногоОбъекта(Объект, ДополнительныеСвойства) 
	
	Если ТипЗнч(ДополнительныеСвойства) = Тип("Структура") Тогда
		гкс_ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Объект.ДополнительныеСвойства, 
		                                                    ДополнительныеСвойства, 
		                                                    Истина);	
	КонецЕсли;
	
	Объект.ДополнительныеСвойства.Вставить("ОтложенноеПроведение");
	Объект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
	// При проведении документа снимаем запрет на выполнение ПРО,
	// т.к. ПРО были проигнорированы при обычной записи документа с целью оптимизации скорости загрузки данных.
	Если Объект.ДополнительныеСвойства.Свойство("ОтключитьМеханизмРегистрацииОбъектов") Тогда				
		Объект.ДополнительныеСвойства.Удалить("ОтключитьМеханизмРегистрацииОбъектов");				
	КонецЕсли;
		
КонецПроцедуры

Функция ОбъектыОтложеннойОбработки() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаОбъектыКОтложеннойОбработке();	
	Запрос.УстановитьПараметр("МаксимальноеКоличествоНеудачныхОбработок", МаксимальноеКоличествоНеудачныхОбработок());
	
	Выборка = Запрос.Выполнить().Выбрать();

	Возврат Выборка;
	
КонецФункции

Функция МаксимальноеКоличествоНеудачныхОбработок()
	
	МаксимальноеКоличествоНеудачныхОбработок = 
	гкс_ОчередьСообщенийRMQПовтИсп.НастройкаИнтеграционногоАдаптера("МаксимальноеКоличествоНеудачныхОбработок");
	Если НЕ ЗначениеЗаполнено(МаксимальноеКоличествоНеудачныхОбработок) Тогда		
		МаксимальноеКоличествоНеудачныхОбработок = 5;		
	КонецЕсли;
	
	Возврат МаксимальноеКоличествоНеудачныхОбработок;
	
КонецФункции

#Область ТекстыЗапросов

Функция ТекстЗапросаОбъектыКОтложеннойОбработке()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ВсеОбъекты.ДатаОбъекта КАК ДатаОбъекта,
	|	ВсеОбъекты.Объект КАК Объект,
	|	ВсеОбъекты.Действие КАК Действие,
	|	ВсеОбъекты.ДополнительныеСвойства КАК ДополнительныеСвойства,
	|	ВсеОбъекты.КоличествоНеудачныхОбработок КАК КоличествоНеудачныхОбработок,
	|	ВсеОбъекты.СообщениеОбОшибкеОбработки КАК СообщениеОбОшибкеОбработки
	|ИЗ
	|	РегистрСведений.гкс_ОтложеннаяОбработкаОбъектов КАК ВсеОбъекты
	|ГДЕ
	|	ВсеОбъекты.КоличествоНеудачныхОбработок < &МаксимальноеКоличествоНеудачныхОбработок
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОбъекта";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбъектВОчередиОтложеннойОбработки()
    
    ТекстЗапроса = 
    "ВЫБРАТЬ
    |   1 КАК ЕстьВОчереди
    |ИЗ
    |   РегистрСведений.гкс_ОтложеннаяОбработкаОбъектов КАК ВсеОбъекты
    |ГДЕ
    |   ВсеОбъекты.Объект = &Объект";
    
    Возврат ТекстЗапроса;
    
КонецФункции

Функция ТекстЗапросаДанныеОтложеннойОбработкиОбъекта()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ОчередьОтложеннойОбработки.ДатаОбъекта,
	|	ОчередьОтложеннойОбработки.Объект,
	|	ОчередьОтложеннойОбработки.КоличествоНеудачныхОбработок,
	|	ОчередьОтложеннойОбработки.СообщениеОбОшибкеОбработки,
	|	ОчередьОтложеннойОбработки.Действие,
	|	ОчередьОтложеннойОбработки.ДополнительныеСвойства
	|ИЗ
	|	РегистрСведений.гкс_ОтложеннаяОбработкаОбъектов КАК ОчередьОтложеннойОбработки
	|ГДЕ
	|	ОчередьОтложеннойОбработки.Объект = &Объект";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
