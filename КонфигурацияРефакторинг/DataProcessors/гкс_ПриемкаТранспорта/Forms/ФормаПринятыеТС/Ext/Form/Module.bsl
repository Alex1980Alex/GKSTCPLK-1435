#Область ОбработкиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ИнициализироватьРеквизитыФормы();
	УстановитьОтборДинамическихСписковДополнительныйСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Перем Ошибки;
	
	Если Не ЕстьПравоНаРедактированиеРеестр Тогда
		ТекстСообщения = НСтр("ru = 'У пользователя не доступа к редактированию Реестр накладных ЗПП-3'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	Если Отказ Тогда
		Возврат;
    КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОтключитьОбработчикОжидания("ОбработчикОжиданияОбновитьДанные");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборНачалоПериодаПриИзменении(Элемент)
	
	Если ОтборКонецПериода < ОтборНачалоПериода Тогда
		ОтборКонецПериода = КонецДня(ОтборНачалоПериода);
	КонецЕсли;
	
	УстановитьОтборДинамическихСписковДополнительныйСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонецПериодаПриИзменении(Элемент)
	
	Если ОтборКонецПериода < ОтборНачалоПериода Тогда
		ОтборНачалоПериода = НачалоДня(ОтборКонецПериода);
	КонецЕсли;
	
	УстановитьОтборДинамическихСписковДополнительныйСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНоменклатураПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписковДополнительныйСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписковДополнительныйСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПеревозкиПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписковДополнительныйСписок();

КонецПроцедуры

&НаКлиенте
Процедура ТипРегистрацииПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписковДополнительныйСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныйСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДополнительныйСписок.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если Поле.Имя = "ДополнительныйСписокДокументРегистрацииНомер" 
				Или Поле.Имя = "ДополнительныйСписокДокументРегистрации" Тогда
			ДокументОткрытия = ТекущиеДанные.ДокументРегистрации;
			Если ЗначениеЗаполнено(ДокументОткрытия) Тогда
				ИмяФормыДокумента = "Документ.гкс_РегистрацияНаПЛК.Форма.ФормаДокумента";
				гкс_ПриемкаНаПЛККлиент.ОткрытьДокумент(ЭтотОбъект, ДокументОткрытия, ИмяФормыДокумента, Истина);
			КонецЕсли;
		
		ИначеЕсли Поле.Имя = "ДополнительныйСписокРеестрНакладныхНомер" 
				Или Поле.Имя = "ДополнительныйСписокРеестрНакладных" Тогда
			ДокументОткрытия = ТекущиеДанные.РеестрНакладных;
			Если ЗначениеЗаполнено(ДокументОткрытия) Тогда
				ИмяФормыДокумента = "Документ.гкс_РеестрНакладныхЗПП3.Форма.ФормаДокумента";
				гкс_ПриемкаНаПЛККлиент.ОткрытьДокумент(ЭтотОбъект, ДокументОткрытия, ИмяФормыДокумента, Ложь);
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборТочкаМаршрутаПриИзменении(Элемент)
	УстановитьОтборДинамическихСписковДополнительныйСписок();
КонецПроцедуры

#КонецОбласти

#Область ОбработкаКомандФормы

&НаКлиенте
Процедура КомандаСформироватьЗПП3(Команда)
	
	ТекущиеДанные = Элементы.ДополнительныйСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.НомерПробы) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Отсутствуют данные о номере пробы.'"));
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполнения = ЗначенияЗаполненияДляФормированияРеестраЗПП3(ТекущиеДанные.НомерПробы);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);

	ОткрытьФорму("Документ.гкс_РеестрНакладныхЗПП3.Форма.ФормаДокумента", 
		ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор, , , , 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	            
	ВключитьОбработчикОжидания();

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область Инициалиализация

&НаСервере
Процедура ИнициализироватьРеквизитыФормы()
	
	ИнициализироватьРеквизитыОтбора();
	ИнициализироватьТекущегоПользователя();
	ИнициализироватьРеквизитыПравПользователя();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьРеквизитыОтбора()
	
	Если гкс_ПриемкаТранспортаВызовСервера.ФормироватьКомпозитныйЛабораторныйАнализ() Тогда

		ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка;
		ВидПеревозки = Перечисления.гкс_ТипыТранспортныхСредствДоставки.ЖДТранспорт;
		
	Иначе 	
		Параметры.Свойство("ВидПеревозки", ВидПеревозки);
		Параметры.Свойство("ТипРегистрации", ТипРегистрации);	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОтборНачалоПериода) Тогда
		ОтборНачалоПериода = НачалоДня(ТекущаяДатаСеанса());
		Если ОтборКонецПериода < ОтборНачалоПериода Тогда
			ОтборКонецПериода = КонецДня(ОтборНачалоПериода);
		КонецЕсли;
	КонецЕсли;
	
	ИнициализироватьТочкуМаршрута();	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьТекущегоПользователя()
	
	Пользователь = Пользователи.ТекущийПользователь();
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь(); 
	
КонецПроцедуры
 
&НаСервере
Процедура ИнициализироватьРеквизитыПравПользователя()
	
	ЕстьПравоНаРедактированиеРеестр = ПравоНаРедактированияРеестрНакладныхЗПП();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьТочкуМаршрута()
	
	ИспользоватьНесколькоАЛЦ = ПолучитьФункциональнуюОпцию("гкс_ИспользоватьНесколькоАЛЦ");
	
	Если НЕ ИспользоватьНесколькоАЛЦ Тогда
		// Один ПЛК - автоматически из константы
		ОтборТочкаМаршрута = Константы.гкс_ТочкаМаршрутаБазы.Получить();
		Элементы.ОтборТочкаМаршрута.Доступность = Ложь;
	Иначе
		// Несколько АЛЦ - ручной выбор
		Элементы.ОтборТочкаМаршрута.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти 

&НаКлиенте
Процедура ВключитьОбработчикОжидания()
		
	ИнтервалОбработчика = 15;
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновитьДанные", ИнтервалОбработчика);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияОбновитьДанные()
		
	Элементы.ДополнительныйСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДинамическихСписковДополнительныйСписок()
			
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ДополнительныйСписок, "ВидПеревозки", 
		ВидПеревозки, Истина);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ДополнительныйСписок, "ТипРегистрации", 
		ТипРегистрации, Истина);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ДополнительныйСписок, "НачалоПериода", 
		ОтборНачалоПериода, Истина);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ДополнительныйСписок, "КонецПериода", 
		КонецДня(ОтборКонецПериода), Истина);
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ДополнительныйСписок, "Номенклатура", 
		ОтборНоменклатура, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(ОтборНоменклатура));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ДополнительныйСписок, "Контрагент", 
		ОтборКонтрагент, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(ОтборКонтрагент));
	
	Если ЗначениеЗаполнено(ОтборТочкаМаршрута) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ДополнительныйСписок, "ТочкаМаршрута",
			ОтборТочкаМаршрута, Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ДополнительныйСписок,
			"ТочкаМаршрутаИспользование", Истина, Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ДополнительныйСписок,
			"ТочкаМаршрутаИспользование", Ложь, Истина);
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Функция ЕстьПравоНаРедактирование(ИмяОбъекта)
	Возврат ПравоДоступа("Добавление", Метаданные.Документы[ИмяОбъекта]);
КонецФункции                     

&НаСервере
Функция ПравоНаРедактированияРеестрНакладныхЗПП()
	
	Возврат ЕстьПравоНаРедактирование("гкс_РеестрНакладныхЗПП3");	
	
КонецФункции

&НаСервере
Функция ЗначенияЗаполненияДляФормированияРеестраЗПП3(НомерПробы)
	
	Возврат Документы.гкс_ФормированиеНомераПробы.ЗначенияЗаполненияДляФормированияРеестраЗПП3(НомерПробы);
	
КонецФункции

#КонецОбласти
