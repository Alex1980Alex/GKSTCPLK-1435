#Если ТолстыйКлиентОбычноеПриложение ИЛИ Сервер ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДанныеGUID() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеGUID = ДанныеGUIDПоУмолчанию();
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		СтрокаGUID = Строка(Ссылка.УникальныйИдентификатор());
		
		ДанныеGUID.Вставить("GUID", СтрокаGUID);
		ДанныеGUID.Вставить("ВерсияGUID", ВерсияGUID(СтрокаGUID));
		ДанныеGUID.Вставить("ТипЗначения", Ссылка.Метаданные().ПолноеИмя());
		ДанныеGUID.Вставить("ДатаСоздания", ДатаВремяGUID(СтрокаGUID));
		
	КонецЕсли;
		
	Возврат ДанныеGUID;
	
КонецФункции

Функция СсылкаПоGUID(СтрокаGUID) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
		
	КлассыМетаданныеПоиска = "Справочники
	|Документы
	|ПланыВидовХарактеристик";

	ОбъектНайден = Ложь;
	Ссылка = Неопределено;
	
	Для ИндексСтроки = 1 По СтрЧислоСтрок(КлассыМетаданныеПоиска) Цикл 
		
		КлассМетаданных = СтрПолучитьСтроку(КлассыМетаданныеПоиска, ИндексСтроки);
		
		Для Каждого ОбъектМетаданных Из  Метаданные[КлассМетаданных] Цикл 
			
			МенеджерМетаданных = гкс_ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ОбъектМетаданных.ПолноеИмя());
			Ссылка = МенеджерМетаданных.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаGUID));
			
			Если НЕ Ссылка.ПолучитьОбъект() = Неопределено Тогда 
				
				ОбъектНайден = Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ОбъектНайден Тогда
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ссылка;
		 	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДатаВремяGUID(СтрокаGUID)
	
	// Например ГУИД равен: bdb62d89-cede-11e4-b12b-d4ae52b5e909
	// Дата содержится в первых символах, bdb62d89-cede-11e4 которые нужно переставить задом наперед: 11e4-cede-bdb62d89
	Строка16 = Сред(СтрокаGUID, 15, 4) + Сред(СтрокаGUID, 10, 4) + Сред(СтрокаGUID, 1, 8);
	
	// Убираем "лишние" знаки "-"(тире).
	Строка16 = СтрЗаменить(Строка16, "-", "");
	
	// Убираем первый символ, так как в нем содержится версия стандарта (зашит в седьмой октет)
	Строка15 = Сред(Строка16, 2);
	
	// Получаем timestamp в 60 бит : 1E4 CEDE BDB6 2D89
	ЧислоСек = 0;
	Для Позиция = 1 По СтрДлина(Строка15) Цикл
		ЧислоСек = ЧислоСек + Найти("123456789abcdef",Сред(Строка15,Позиция,1))*Pow(16,СтрДлина(Строка15) - Позиция);
	КонецЦикла;
	ЧислоСек = ЧислоСек / 10000000;
	
	ДатаНачалаПоГригорианскомуКалендарю = Дата(1582, 10, 15, 00, 00, 00);
	// Прибавляем к дате начала Григореанского календаря
	Возврат ДатаНачалаПоГригорианскомуКалендарю + ЧислоСек + СмещениеСтандартногоВремени() + СмещениеЛетнегоВремени();
	
КонецФункции

Функция ВерсияGUID(СтрокаGUID)
    
    // Пусть ГУИД равен: bdb62d89-cede-11e4-b12b-d4ae52b5e909
    // Тогда номер версии содержится в старшем байте седьмого октета
    Версия = Число(Сред(СтрокаGUID, 15, 1));
    
    СтрокаВерсий = "Version 1. Time-based
    | Version 2. DCE Security (POSIX)
    | Version 3. Name-based (MD5 hashing)
    | Version 4. Random
    | Version 5. Name-based (SHA-1 hashing)
    | Unknown version";
    
    Возврат СтрПолучитьСтроку(СтрокаВерсий, Мин(СтрЧислоСтрок(СтрокаВерсий), Версия));
    
КонецФункции

Функция ДанныеGUIDПоУмолчанию()
	
	ДанныеGUID = Новый Структура;
	
	ДанныеGUID.Вставить("GUID", "");
	ДанныеGUID.Вставить("ВерсияGUID", "");
	ДанныеGUID.Вставить("ТипЗначения", "");
	ДанныеGUID.Вставить("ДатаСоздания", Дата(1,1,1));

	Возврат ДанныеGUID;
	
КонецФункции

#КонецОбласти

#Иначе	
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте'");
#КонецЕсли