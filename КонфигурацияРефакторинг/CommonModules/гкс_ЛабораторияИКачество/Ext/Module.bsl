// @strict-types

#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. гкс_ПроведениеДокументов.СвойстваДокумента).
//
// Возвращаемое значение:
//  Структура - параметры учетного механизма (См. гкс_ПроведениеДокументов.ПараметрыУчетногоМеханизма()).
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = гкс_ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.гкс_ЗаданияНаПроверкуКачества);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.гкс_МинимальныеПоказателиКачестваПриемки);
		
		Параметры.НезависимыеРегистры.Добавить(Метаданные.РегистрыСведений.гкс_КомпозитныеПробы);
		Параметры.НезависимыеРегистры.Добавить(Метаданные.РегистрыСведений.гкс_КомментарииКСтатусуКачествоНеПринято);
		
	КонецЕсли;
	
	Параметры.ЕстьПроизводныеДвижения = Истина;
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам.
//
// Параметры:
//   ТаблицыДляДвижений - Структура - таблицы данных документа
//   Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//   Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	гкс_ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, 
											  "гкс_ЗаданияНаПроверкуКачества");
 	гкс_ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения,
 											  "гкс_МинимальныеПоказателиКачестваПриемки");
	
КонецПроцедуры

Процедура ПередЗаписьюДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписиДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗнчДокумента = ТипЗнч(Документ);
	ТипЗнчДокументаСсылка = ТипЗнч(Документ.Ссылка);
	
	ЭтоОтменаПроведенияДокумента = 
				(Документ.ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.РежимЗаписи = 
										РежимЗаписиДокумента.ОтменаПроведения);
	
	Если ЭтоОтменаПроведенияДокумента И ТипЗнч(Документ) = Тип("ДокументОбъект.гкс_ФормированиеНомераПробы") Тогда
		
		Набор = РегистрыСведений.гкс_КомпозитныеПробы.СоздатьНаборЗаписей();
		Набор.Отбор.КомпозитнаяПроба.Установить(Документ.Ссылка);
		Набор.Записать();

	КонецЕсли;
		 
КонецПроцедуры

// Процедура формирования движений по независимым регистрам основных средств.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Документ - ДокументСсылка - ссылка на документ
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ЗаписатьДанные(ТаблицыДляДвижений, Документ, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицыДляДвижений.Свойство("Таблицагкс_КомпозитныеПробы") Тогда
		
		Набор = РегистрыСведений.гкс_КомпозитныеПробы.СоздатьНаборЗаписей();
		Набор.Отбор.КомпозитнаяПроба.Установить(Документ.Ссылка);
		Набор.Загрузить(ТаблицыДляДвижений["Таблицагкс_КомпозитныеПробы"]);
		Набор.Записать();
		
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.гкс_ЛабораторныйАнализ") Тогда	
		ЗаписатьКомментарийЕслиКачествоНеПринятоИначеОчистить(
		          РегистрыСведений.гкс_СостоянияРегистрации.ДокументРегистрации(Документ), 
				  ТаблицыДляДвижений);
	КонецЕсли; 
	
КонецПроцедуры

// Определяет дату документа для Реестра накладных в зависимости от лабораторного анализа
//
// Параметры:
//  ЛабораторныйАнализ - ДокументСсылка.гкс_ЛабораторныйАнализ - лабораторный анализ
//  ДатаРеестра - Дата - текущая дата реестра
//
// Возвращаемое значение:
//  Дата - дата и время для документа "Реестр накладных(ЗПП-3)"
//
Функция ДатаРеестраНакладных(ЛабораторныйАнализ, ДатаРеестра) Экспорт
	
	КоличествоМинутДоКонцаДня = -9;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	гкс_ФормированиеНомераПробы.Ссылка КАК Ссылка,
	|	гкс_ФормированиеНомераПробы.ПроизводственныеСуткиРегистрации КАК ПроизводственныеСутки,
	|	ВЫБОР
	|		КОГДА ДЕНЬГОДА(гкс_ФормированиеНомераПробы.ПроизводственныеСуткиРегистрации) <> ДЕНЬГОДА(&ДатаРеестра)
	|			ТОГДА ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(гкс_ФормированиеНомераПробы.ПроизводственныеСуткиРегистрации, ДЕНЬ), МИНУТА, &Приращение)
	|		ИНАЧЕ &ДатаРеестра
	|	КОНЕЦ КАК ДатаРеестра
	|ИЗ
	|	Документ.гкс_ЛабораторныйАнализ КАК гкс_ЛабораторныйАнализ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_ФормированиеНомераПробы КАК гкс_ФормированиеНомераПробы
	|		ПО гкс_ЛабораторныйАнализ.гкс_ДокументРегистрации = гкс_ФормированиеНомераПробы.Ссылка
	|ГДЕ
	|	гкс_ЛабораторныйАнализ.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("ДатаРеестра", ДатаРеестра);
	Запрос.УстановитьПараметр("Ссылка", ЛабораторныйАнализ);
	Запрос.УстановитьПараметр("Приращение", КоличествоМинутДоКонцаДня);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Результат = ВыборкаДетальныеЗаписи.ДатаРеестра;                           
	Иначе
		Результат = ДатаРеестра;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаписатьКомментарийЕслиКачествоНеПринятоИначеОчистить(ДокументРегистрации, ТаблицыДляДвижений)
	
	НаборЗаписей = РегистрыСведений.гкс_КомментарииКСтатусуКачествоНеПринято.СоздатьНаборЗаписей();								  
	НаборЗаписей.Отбор.ДокументРегистрации.Установить(ДокументРегистрации);
	
	Если ТаблицыДляДвижений.Свойство("Таблицагкс_КомментарииКСтатусуКачествоНеПринято") 
		И ТаблицыДляДвижений["Таблицагкс_КомментарииКСтатусуКачествоНеПринято"].Количество() > 0 Тогда											  
		НаборЗаписей.Заполнить(ТаблицыДляДвижений["Таблицагкс_КомментарииКСтатусуКачествоНеПринято"]);
	КонецЕсли;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

