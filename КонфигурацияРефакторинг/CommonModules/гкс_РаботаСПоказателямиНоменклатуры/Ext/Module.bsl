// @strict-types

#Область ПрограммныйИнтерфейс


// Результаты нормативной сертификации номенклатуры.


// Результаты нормативной сертификации номенклатуры.
// 
// Параметры:
//  ОбъектДокумента - ДокументОбъект.гкс_ЛабораторныйАнализ, Структура - Объект документа или структура с полями документа
//  ДополнительныеПараметры - Структура, Неопределено - Дополнительные параметры:
//   * Контрагент - СправочникСсылка.Контрагенты - Переопределение контрагента
//   * Показатель - СправочникСсылка.гкс_ПоказателиАнализовНоменклатуры - Конкретный показатель
//   * ТекущиеЗначениеПоказателя - Соответствие - Текущие значения показателей
// Возвращаемое значение:
//  Массив - Результаты нормативной сертификации номенклатуры
Функция РезультатыНормативнойСертификацииНоменклатуры(ОбъектДокумента, ДополнительныеПараметрыа = Неопределено) Экспорт
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапросаНормативнойСертификации(ОбъектДокумента, ДополнительныеПараметрыа);
		
	Период = ПараметрыЗапроса.Период;
	Номенклатура = ПараметрыЗапроса.Номенклатура;
	ТочкаМаршрута = ПараметрыЗапроса.ТочкаМаршрута;
	ВидПеревозки = ПараметрыЗапроса.ВидПеревозки;
 	НазначениеИспользованияКачества = ПараметрыЗапроса.НазначениеИспользованияКачества;
 	
	Контрагент = Неопределено;
	ПараметрыЗапроса.Свойство("Контрагент", Контрагент);
	
	Показатель = Неопределено;
	ПараметрыЗапроса.Свойство("Показатель", Показатель);
	
	ТекущиеЗначениеПоказателя = Неопределено;
	ПараметрыЗапроса.Свойство("ТекущиеЗначениеПоказателя", ТекущиеЗначениеПоказателя);
	
	Результат = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Результат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДатаНачала = ?(ЗначениеЗаполнено(Период.ДатаНачала), Период.ДатаНачала, ТекущаяДатаСеанса());
	ДатаОкончания = ?(ЗначениеЗаполнено(Период.ДатаОкончания),
			Период.ДатаОкончания, Константы.гкс_ДатаОкончанияПериодаСертификацииПоУмолчанию.Получить());
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрута);
	Запрос.УстановитьПараметр("ВидПеревозки", ВидПеревозки);
	Запрос.УстановитьПараметр("НазначениеИспользованияКачества", НазначениеИспользованияКачества);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);

	УстановитьТекстЗапросаНормативнойСертификации(Запрос);
	
	Если ЗначениеЗаполнено(Показатель) Тогда
		ТекстУсловия = "ПоказательАнализа = &ПоказательАнализа";
		Запрос.УстановитьПараметр("ПоказательАнализа", Показатель);
	Иначе
		ТекстУсловия = " ИСТИНА";
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстУсловияПоказательАнализа", ТекстУсловия);
	
	ЕстьТекущиеЗначения = ТипЗнч(ТекущиеЗначениеПоказателя) = Тип("Соответствие");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЭлементРезультата = СтруктураДанныхПоПоказателю();
		ЗаполнитьЗначенияСвойств(ЭлементРезультата, Выборка);
		

		Если ЕстьТекущиеЗначения Тогда
			ОбработатьТекущиеЗначенияПоказателя(ЭлементРезультата, ТекущиеЗначениеПоказателя, Выборка);
		КонецЕсли;
		
		Результат.Добавить(ЭлементРезультата);
		
	КонецЦикла;
	
	Возврат Результат;	
	
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Установить текст запроса нормативной сертификации.
//
// Параметры:
//  Запрос - Запрос - Объект запроса для установки текста
//
Процедура УстановитьТекстЗапросаНормативнойСертификации(Запрос)
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Результаты.Номенклатура КАК Номенклатура,
	|	Результаты.ПоказательАнализа КАК Показатель,
	|	Результаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Результаты.ЗначениеПоказателя КАК МинимальноеЗначение,
	|	Результаты.МаксимальноеЗначение КАК МаксимальноеЗначение,
	|	Результаты.Базис КАК Базис,
	|	Результаты.ПериодС КАК ПериодС,
	|	Результаты.ПериодПо КАК ПериодПо,
	|	Результаты.ГОСТ КАК ГОСТ,
	|	0 КАК ОтклонениеОтБазиса,
	|	ЛОЖЬ КАК СоответствуетНормативу
	|ПОМЕСТИТЬ ВТРезультатыНСН
	|ИЗ
	|	РегистрСведений.гкс_РезультатыНормативнойСертификацииНоменклатуры.СрезПоследних(&ДатаОкончания,
	|		Номенклатура = &Номенклатура
	|	И ТочкаМаршрута = &ТочкаМаршрута
	|	И гкс_ВидПеревозки = &ВидПеревозки
	|	И гкс_НазначениеИспользованияКачества = &НазначениеИспользованияКачества
	|	И &ТекстУсловияПоказательАнализа
	|	И (ПериодС <= &ДатаНачала
	|	ИЛИ ПериодС = ДАТАВРЕМЯ(1, 1, 1))
	|	И (ПериодПо >= НАЧАЛОПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|	ИЛИ ПериодПо = ДАТАВРЕМЯ(1, 1, 1))) КАК Результаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинимальныеПоказателиКачестваПриемкиСрезПоследних.Показатель КАК Показатель,
	|	МинимальныеПоказателиКачестваПриемкиСрезПоследних.ЗначениеПоказателя КАК ЗначениеПоказателя,
	|	МинимальныеПоказателиКачестваПриемкиСрезПоследних.ОстатокДляПриемки КАК ОстатокДляПриемки,
	|	МинимальныеПоказателиКачестваПриемкиСрезПоследних.ШаблонКомментария КАК Комментарий
	|ПОМЕСТИТЬ ВТМинимальныеПоказатели
	|ИЗ
	|	РегистрСведений.гкс_МинимальныеПоказателиКачестваПриемки.СрезПоследних(&ДатаНачала, Контрагент = &Контрагент
	|	И Номенклатура = &Номенклатура
	|	И &НазначениеИспользованияКачества <> ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.ПриемкаКомпозит)
	|	И Показатель В
	|		(ВЫБРАТЬ
	|			ВТРезультатыНСН.Показатель КАК Показатель
	|		ИЗ
	|			ВТРезультатыНСН КАК ВТРезультатыНСН)) КАК МинимальныеПоказателиКачестваПриемкиСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРезультатыНСН.Номенклатура КАК Номенклатура,
	|	ВТРезультатыНСН.Показатель КАК Показатель,
	|	ВТРезультатыНСН.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТРезультатыНСН.МинимальноеЗначение КАК МинимальноеЗначение,
	|	ВТРезультатыНСН.МаксимальноеЗначение КАК МаксимальноеЗначение,
	|	ВТРезультатыНСН.Базис КАК Базис,
	|	ВТРезультатыНСН.ПериодС КАК ПериодС,
	|	ВТРезультатыНСН.ПериодПо КАК ПериодПо,
	|	ВТРезультатыНСН.ГОСТ КАК ГОСТ,
	|	ВТРезультатыНСН.ОтклонениеОтБазиса КАК ОтклонениеОтБазиса,
	|	ВТРезультатыНСН.СоответствуетНормативу КАК СоответствуетНормативу,
	|	ЕСТЬNULL(ВТМинимальныеПоказатели.ЗначениеПоказателя, 0) КАК МинЗначениеКонтрагента,
	|	ЕСТЬNULL(ВТМинимальныеПоказатели.ОстатокДляПриемки, 0) КАК ОстатокДляПриемки,
	|	ЕСТЬNULL(ВТМинимальныеПоказатели.Комментарий, """") КАК КомментарийКонтрагента
	|ИЗ
	|	ВТРезультатыНСН КАК ВТРезультатыНСН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМинимальныеПоказатели КАК ВТМинимальныеПоказатели
	|		ПО ВТРезультатыНСН.Показатель = ВТМинимальныеПоказатели.Показатель";
	
КонецПроцедуры


// Обработать текущие значения показателя.
//
// Параметры:
//  ЭлементРезультата - Структура - Элемент результата:
// * Номенклатура - СправочникСсылка.Номенклатура - Ссылка на номенклатуру
// * Показатель - СправочникСсылка.гкс_ПоказателиАнализовНоменклатуры - Ссылка на показатель анализа
// * ЕдиницаИзмерения - СправочникСсылка.УпаковкиЕдиницыИзмерения - Единица измерения показателя
// * МинимальноеЗначение - Число - Минимальное допустимое значение показателя
// * Базис - Число - Базисное значение показателя
// * МаксимальноеЗначение - Число - Максимальное допустимое значение показателя
// * ПериодС - Дата - Дата начала действия норматива
// * ПериодПо - Дата - Дата окончания действия норматива
// * ГОСТ - Строка - Наименование ГОСТа или стандарта
// * ОтклонениеОтБазиса - Число - Отклонение текущего значения от базиса
// * СоответствуетНормативу - Булево - Признак соответствия нормативу
// * Комментарий - Строка - Комментарий по результату проверки
//  ТекущиеЗначениеПоказателя - Соответствие, Неопределено - Текущие значения показателей
//  ДанныеВыборки - ВыборкаИзРезультатаЗапроса - Данные выборки из основного запроса
Процедура ОбработатьТекущиеЗначенияПоказателя(ЭлементРезультата, ТекущиеЗначениеПоказателя, ДанныеВыборки)
	
	ТекущееЗначение = ТекущиеЗначениеПоказателя.Получить(ДанныеВыборки.Показатель);
	Если ТекущееЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЕстьМинЗначениеКонтрагента = ЗначениеЗаполнено(ДанныеВыборки.МинЗначениеКонтрагента);
	ТекущееЗначениеНеНулевое = ТекущееЗначение <> 0;
	
	Если ЕстьМинЗначениеКонтрагента И ТекущееЗначениеНеНулевое Тогда
		
		ЗначениеСоответствует = ТекущееЗначение < ДанныеВыборки.МинЗначениеКонтрагента;
		ЭлементРезультата.СоответствуетНормативу = НЕ ЗначениеСоответствует;
		
		Если ЗначениеСоответствует Тогда
			ЭлементРезультата.Комментарий = СтрШаблон("%1 (%2)",
					ДанныеВыборки.КомментарийКонтрагента,
					ДанныеВыборки.МинЗначениеКонтрагента);
		КонецЕсли;
		
	Иначе
		ЭлементРезультата.СоответствуетНормативу = ЧислоВИнтервале(ТекущееЗначение,
				ЭлементРезультата.МинимальноеЗначение, ЭлементРезультата.МаксимальноеЗначение);
	КонецЕсли;
	
	ЭлементРезультата.ОтклонениеОтБазиса = ТекущееЗначение - ЭлементРезультата.Базис;
	
КонецПроцедуры


// Получить структуру нормативной сертификации номенклатуры.
// 
// Возвращаемое значение:
//  Структура - Получить структуру нормативной сертификации номенклатуры:
// * Номенклатура - 
// * Характеристика - 
// * Показатель -
// * ЕдиницаИзмерения -
// * МинимальноеЗначение - 
// * МаксимальноеЗначение -
// * Базис -
// * ПериодС -
// * ПериодПо -
// * ГОСТ -
// * ОтклонениеОтБазиса -
// * СоответствуетНормативу - Булево -
// * Комментарий - Строка
//
Функция СтруктураДанныхПоПоказателю()
	
	Результат = Новый Структура;
	Результат.Вставить("Номенклатура");
	Результат.Вставить("Показатель");
	
	Результат.Вставить("ЕдиницаИзмерения");
	Результат.Вставить("МинимальноеЗначение");
	Результат.Вставить("Базис");
	Результат.Вставить("МаксимальноеЗначение");
	Результат.Вставить("ПериодС");
	Результат.Вставить("ПериодПо");
	Результат.Вставить("ГОСТ");
		
	Результат.Вставить("ОтклонениеОтБазиса");
	Результат.Вставить("СоответствуетНормативу", Ложь);
	Результат.Вставить("Комментарий", "");
		
	Возврат Результат;
	
КонецФункции	

Функция ЧислоВИнтервале(Значение, ЛеваяГраница, ПраваяГраница)
	
	Если Значение >= ЛеваяГраница И Значение <= ПраваяГраница Тогда 
		Результат = Истина;
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции	

// Получить параметры запроса для нормативной сертификации номенклатуры.
//
// Параметры:
//  ОбъектДокумента - ДокументОбъект.гкс_ЛабораторныйАнализ, Структура - Объект документа или структура с полями документа
//  ДополнительныеПараметры - Структура, Неопределено - Дополнительные параметры:
//   * Контрагент - СправочникСсылка.Контрагенты - Переопределение контрагента
//   * Показатель - СправочникСсылка.гкс_ПоказателиАнализовНоменклатуры - Конкретный показатель
//   * ТекущиеЗначениеПоказателя - Соответствие - Текущие значения показателей
//
// Возвращаемое значение:
//   Структура - Параметры запроса для функции РезультатыНормативнойСертификацииНоменклатуры:
//    * Период - Структура - Период с полями ДатаНачала, ДатаОкончания
//    * Номенклатура - СправочникСсылка.Номенклатура
//    * ТочкаМаршрута - СправочникСсылка.гкс_ТочкиМаршрута
//    * ВидПеревозки - ПеречислениеСсылка.гкс_ВидыПеревозки
//    * НазначениеИспользованияКачества - ПеречислениеСсылка.гкс_НазначенияИспользованияКачества
//    * Контрагент - СправочникСсылка.Контрагенты (если задан в дополнительных параметрах)
//    * Показатель - СправочникСсылка.гкс_ПоказателиАнализовНоменклатуры (если задан в дополнительных параметрах)
//    * ТекущиеЗначениеПоказателя - Соответствие (если задан в дополнительных параметрах)
//
Функция ПолучитьПараметрыЗапросаНормативнойСертификации(ОбъектДокумента, ДополнительныеПараметры = Неопределено)
	
	// Создаем базовую структуру периода
	Период = Новый Структура;
	Период.Вставить("ДатаНачала", ОбъектДокумента.Дата);
	Период.Вставить("ДатаОкончания", ОбъектДокумента.Дата);
	
	// Создаем базовую структуру параметров запроса
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Период", Период);
	ПараметрыЗапроса.Вставить("Номенклатура", ОбъектДокумента.Номенклатура);
	ПараметрыЗапроса.Вставить("ТочкаМаршрута", ОбъектДокумента.ТочкаМаршрута);
	ПараметрыЗапроса.Вставить("ВидПеревозки", ОбъектДокумента.гкс_ВидПеревозки);
	ПараметрыЗапроса.Вставить("НазначениеИспользованияКачества", ОбъектДокумента.гкс_НазначениеИспользованияКачества);
	
	// Обрабатываем дополнительные параметры
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		ПараметрыЗапроса.Вставить("Контрагент", ДополнительныеПараметры.Контрагент);
		ПараметрыЗапроса.Вставить("Показатель", ДополнительныеПараметры.Показатель);
		ПараметрыЗапроса.Вставить("ТекущиеЗначениеПоказателя", ДополнительныеПараметры.ТекущиеЗначениеПоказателя);
	КонецЕсли;
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

#КонецОбласти


