#Область ПрограммныйИнтерфейс

#Область ВзаимодействиеСоСчитывателемRFIDМеток

// Получает параметры подключения к считывателю UHFRFID текущегопользователя
//
// Возвращаемое значение:
//   ФиксированнаяСтруктура - структура с параметрами подключения
//
Функция ПараметрыПодключенияКСчитывателю() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыПодключения = Новый Структура;
	
	МенеджерСчитывателей = Справочники.гкс_СчитывателиUHFRFID;
	СчитывательПользователя = МенеджерСчитывателей.СчитывательПользователя();
	
	Если ЗначениеЗаполнено(СчитывательПользователя) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СчитывательПользователя, 
			"АдресСлужбы, НомерПортаСлужбы, ApiUrl, ПортСчитывателя, ЗащищенноеСоединение");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыПодключения, Реквизиты);
		
		ПараметрыПодключения.Вставить("ИспользоватьЗащищенноеСоединение", Реквизиты.ЗащищенноеСоединение);
		
		ПараметрыАутентифкации = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(СчитывательПользователя, 
																						"ПараметрыАутентифкации");
		Если ЗначениеЗаполнено(ПараметрыАутентифкации) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыПодключения, ПараметрыАутентифкации);	
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Новый ФиксированнаяСтруктура(ПараметрыПодключения);
	
КонецФункции

#КонецОбласти

// Возвращает массив возможных состояний в зависимости от типа регистрации
//
// Параметры:
//  ТипРегистрации  - ПеречислениеСсылка.гкс_ТипРегистрации - тип регистрации
//
// Возвращаемое значение:
//   ФиксированныйМассив   - массив состояний
//
Функция СостоянияРегистрацииКВыгрузкеВКверион(ТипРегистрации) Экспорт
	
	МенеджерСостояний = Перечисления.гкс_СостоянияРегистрации;
	
	Состояния = Новый Массив;
	
	Если ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка Тогда
		
		Состояния.Добавить(МенеджерСостояний.Прибыл); 
		Состояния.Добавить(МенеджерСостояний.ПринятыПробы); 
		Состояния.Добавить(МенеджерСостояний.ВыгрузкаРазрешена);
		Состояния.Добавить(МенеджерСостояний.ВзвешенТара);  
		Состояния.Добавить(МенеджерСостояний.Выгружен);
		Состояния.Добавить(МенеджерСостояний.НеПринято);
	
	ИначеЕсли ТипРегистрации = Перечисления.гкс_ТипРегистрации.Отгрузка Тогда
		
		Состояния.Добавить(МенеджерСостояний.Прибыл); 
		Состояния.Добавить(МенеджерСостояний.ВзвешенТара); 
		Состояния.Добавить(МенеджерСостояний.Погружен);   
		Состояния.Добавить(МенеджерСостояний.ВзвешенБрутто);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Неверное значение параметра ТипРегистрации, ожидалось <Приемка> или <Отгрузка>'");		 
	КонецЕсли;	 
	
	Возврат Новый ФиксированныйМассив(Состояния);
	
КонецФункции 

#КонецОбласти