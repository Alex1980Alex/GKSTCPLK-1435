
#Область ПрограммныйИнтерфейс

// Возвращает транспортный документ для регистрации на ПЛК
//
// Параметры:
//  ДокументРегистрации - ДокументСсылка.гкс_РегистрацияНаПЛК - регистрация для которой определяется транспортный документ;
// 
// Возвращаемое значение:
//  Результат - ДокументСсылка.гкс_ТранспортныйДокумент - ссылка на транспортный документ
//
Функция СформироватьТранспортныйДокументПоНеобходимости(ДокументРегистрации) Экспорт 
	
	Результат = Документы.гкс_ТранспортныйДокумент.ПустаяСсылка();
	
	ДанныеРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРегистрации, "ВидПеревозки, ТипРегистрации");
	
	ТранспортныйДокумент = Документы.гкс_ТранспортныйДокумент.НайтиПоРегистрации(ДокументРегистрации);
		
	Если ЗначениеЗаполнено(ТранспортныйДокумент) Тогда
		
		Отказ = Ложь;	
		ПерезаполнитьТранспортныйДокумент(ТранспортныйДокумент, ДокументРегистрации, Отказ);		
		Результат = ТранспортныйДокумент;	
		
	ИначеЕсли ДанныеРегистрации.ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка
		И ДанныеРегистрации.ВидПеревозки = Перечисления.гкс_ТипыТранспортныхСредствДоставки.Автомобиль Тогда
		
		Результат = Документы.гкс_ТранспортныйДокумент.СоздатьТранспортныйДокумент(ДокументРегистрации, Ложь);
		
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Перезаполняет данные транспортного документа 
//
// Параметры:
//  ТранспортныйДокумент - ДокументСсылка.гкс_ТранспортныйДокумент - ссылка на транспортный документ
//
//  ДокументРегистрации - ДокументСсылка.гкс_РегистрацияНаПЛК - документ регистрации транспорта
//
//  Отказ - Булево - флаг отказа
//
Процедура ПерезаполнитьТранспортныйДокумент(ТранспортныйДокумент, ДокументРегистрации, Отказ)
	
	ДокументОбъект = ТранспортныйДокумент.ПолучитьОбъект();
	
	ДанныеРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРегистрации, 
		"ВидПеревозки, ТипРегистрации");
		
	Если ДанныеРегистрации.ВидПеревозки = Перечисления.гкс_ТипыТранспортныхСредствДоставки.Автомобиль Тогда
		
		Если ДанныеРегистрации.ТипРегистрации = Перечисления.гкс_ТипРегистрации.Приемка Тогда
			ДокументОбъект.ПерезаполнитьДокументПослеПриемкиАвто(ДокументРегистрации);
		Иначе
			ДокументОбъект.ПерезаполнитьДокументПослеОтгрузкиАвто(ДокументРегистрации);
		КонецЕсли;
		
		Если ДокументОбъект.Модифицированность() Тогда
			Попытка
				ДокументОбъект.Записать();
			Исключение
				Отказ = Истина;
				ТекстОшибки = НСтр("ru = 'Не удалось записать документ.'");	
				СтрокаСообщенияОбОшибке = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации(ТекстОшибки, УровеньЖурналаРегистрации.Ошибка,,, СтрокаСообщенияОбОшибке);		
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры 

#КонецОбласти 

