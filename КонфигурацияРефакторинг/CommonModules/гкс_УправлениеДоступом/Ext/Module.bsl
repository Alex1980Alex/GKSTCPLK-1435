// @strict-types

#Область ПрограммныйИнтерфейс

// Заполняет виды доступа, используемые в ограничениях прав доступа.
//
// см. УправлениеДоступомПереопределяемый.ПриЗаполненииВидовДоступа
//
Процедура ПриЗаполненииВидовДоступа(ВидыДоступа) Экспорт
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя           = "Организации";
	ВидДоступа.Представление = НСтр("ru = 'Организации'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.Организации");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя			 = "ТочкиМаршрута";
	ВидДоступа.Представление = НСтр("ru = 'ПЛК'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.гкс_ТочкиМаршрута");
	
КонецПроцедуры

// Позволяет указать объекты метаданных, для которых задана логика ограничения доступа к данным.
// 
// Параметры:
//  Списки - Соответствие из КлючИЗначение - списки с ограничением доступа:
//             * Ключ     - ОбъектМетаданных - список с ограничением доступа.
//             * Значение - Булево - Истина - текст ограничения в модуле менеджера,
//                                   Ложь   - текст ограничения в этом переопределяемом
//                          модуле в процедуре ПриЗаполненииОграниченияДоступа.
//
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	//добавление список делать по порядку в дереве конфигурации
	
	Списки.Вставить(Метаданные.Документы.гкс_Взвешивание, Истина);
	Списки.Вставить(Метаданные.Документы.гкс_ЗаданияНаПроверкуКачества, Истина); 
	Списки.Вставить(Метаданные.Документы.гкс_ЗаписьВГрафикОтгрузкиПЛК, Истина);
	Списки.Вставить(Метаданные.Документы.гкс_ЗаписьВГрафикПриемкиПЛК, Истина);
	Списки.Вставить(Метаданные.Документы.гкс_ЗаписьВОчередьОтгрузкиПЛК, Истина);	
	Списки.Вставить(Метаданные.Документы.гкс_ЗаписьВОчередьПриемкиПЛК, Истина);
	Списки.Вставить(Метаданные.Документы.гкс_ЗаявкаНаОтгрузкуПродукции, Истина);	
	Списки.Вставить(Метаданные.Документы.гкс_ЛабораторныйАнализ, Истина);
    Списки.Вставить(Метаданные.Документы.гкс_НаправлениеНаРазгрузку, Истина);
    Списки.Вставить(Метаданные.Документы.гкс_НормативнаяСертификацияНоменклатуры, Истина);
	Списки.Вставить(Метаданные.Документы.гкс_ОснованиеДляДвиженияЗапасов, Истина);	
	Списки.Вставить(Метаданные.Документы.гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16, Истина);	
    Списки.Вставить(Метаданные.Документы.гкс_РегистрацияНаПЛК, Истина);
    Списки.Вставить(Метаданные.Документы.гкс_РеестрНакладныхЗПП3, Истина);
    Списки.Вставить(Метаданные.Документы.гкс_СпецификацияКДоговоруКонтрагента, Истина);
	
	Списки.Вставить(Метаданные.Документы.гкс_СРПВПеревеска, Истина);
	Списки.Вставить(Метаданные.Документы.гкс_СРПВПрибытиеНаПуть, Истина);
	Списки.Вставить(Метаданные.Документы.гкс_СРПВРегистрацияОперацииСВагоном, Истина);
	
    Списки.Вставить(Метаданные.Документы.гкс_ТранспортныйДокумент, Истина);
	Списки.Вставить(Метаданные.Документы.гкс_УстановкаНастроекНазначенияРазгрузки, Истина);
    Списки.Вставить(Метаданные.Документы.гкс_ФормированиеНомераПробы, Истина);
	
	Списки.Вставить(Метаданные.Справочники.Организации, Истина);
	
	Списки.Вставить(Метаданные.РегистрыСведений.гкс_АРМПриемкиНаПЛКСписокРегистраций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.гкс_КомпозитныеПробы, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.гкс_НастройкиПриемкаПЛКПоТочкамМаршрута, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.гкс_НоменклатураПЛК, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.гкс_РезультатыНормативнойСертификацииНоменклатуры, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.гкс_СостоянияРегистрации, Истина);
	
КонецПроцедуры

// Заполняет массив структур, которые будут использованы для начального заполнения и
// восстановления начального заполнения профилей.
//
// см. УправлениеДоступомПереопределяемый.ПриЗаполненииПоставляемыхПрофилейГруппДоступа
//
Процедура ПриЗаполненииПоставляемыхПрофилейГруппДоступа(ОписанияПрофилей, ПараметрыОбновления) Экспорт
	
	ИндексироватьПрофили(ОписанияПрофилей, "Имя");
	
	ЗаполнитьПоставляемыеПрофилиГруппДоступа(ОписанияПрофилей, ПараметрыОбновления);
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииИспользованияВидаДоступа.
Процедура ПриЗаполненииИспользованияВидаДоступа(ВидДоступа, Использование) Экспорт
		
	Если ВидДоступа = "ТочкиМаршрута" Тогда	
		Использование = Истина;		
	КонецЕсли;
		
КонецПроцедуры

// Заполняет состав видов доступа, используемых при ограничении прав объектов метаданных.
// Если состав видов доступа не заполнен, отчет "Права доступа" покажет некорректные сведения.
//
// Обязательно требуется заполнить только виды доступа, используемые в шаблонах ограничения доступа
// явно, а виды доступа, используемые в наборах значений доступа, могут быть получены из текущего
// состояния регистра сведений НаборыЗначенийДоступа.
//
//  Для автоматической подготовки содержимого процедуры следует воспользоваться инструментами
// разработчика для подсистемы Управление доступом.
//
// Параметры:
//  Описание     - Строка - многострочная строка формата <Таблица>.<Право>.<ВидДоступа>[.Таблица объекта],
//                 например, "Документ.ПриходнаяНакладная.Чтение.Организации",
//                           "Документ.ПриходнаяНакладная.Чтение.Контрагенты",
//                           "Документ.ПриходнаяНакладная.Изменение.Организации",
//                           "Документ.ПриходнаяНакладная.Изменение.Контрагенты",
//                           "Документ.ЭлектронныеПисьма.Чтение.Объект.Документ.ЭлектронныеПисьма",
//                           "Документ.ЭлектронныеПисьма.Изменение.Объект.Документ.ЭлектронныеПисьма",
//                           "Документ.Файлы.Чтение.Объект.Справочник.ПапкиФайлов",
//                           "Документ.Файлы.Чтение.Объект.Документ.ЭлектронноеПисьмо",
//                           "Документ.Файлы.Изменение.Объект.Справочник.ПапкиФайлов",
//                           "Документ.Файлы.Изменение.Объект.Документ.ЭлектронноеПисьмо".
//                 Вид доступа Объект предопределен как литерал. Этот вид доступа используется в
//                 шаблонах ограничений доступа как "ссылка" на другой объект, по которому
//                 ограничивается текущий объект таблицы.
//                 Когда вид доступа "Объект" задан, также требуется задать типы таблиц,
//                 которые используются для этого вида доступа. Т.е. перечислить типы,
//                 которые соответствуют полю, использованному в шаблоне ограничения доступа
//                 в паре с видом доступа "Объект". При перечислении типов по виду доступа "Объект"
//                 нужно перечислить только те типы поля, которые есть
//                 у поля РегистрыСведений.НаборыЗначенийДоступа.Объект, остальные типы лишние.
// 
Процедура ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(Описание) Экспорт
	
	Описание = Описание + "
	|Справочник.Организации.Чтение.Организации
	|Документ.гкс_Взвешивание.Чтение.ТочкиМаршрута
    |Документ.гкс_Взвешивание.Изменение.ТочкиМаршрута
	|Документ.гкс_ЗаданияНаПроверкуКачества.Чтение.ТочкиМаршрута
	|Документ.гкс_ЗаданияНаПроверкуКачества.Изменение.ТочкиМаршрута	
	|Документ.гкс_ЗаписьВГрафикОтгрузкиПЛК.Чтение.ТочкиМаршрута
	|Документ.гкс_ЗаписьВГрафикОтгрузкиПЛК.Изменение.ТочкиМаршрута	
	|Документ.гкс_ЗаписьВГрафикПриемкиПЛК.Чтение.ТочкиМаршрута
	|Документ.гкс_ЗаписьВГрафикПриемкиПЛК.Изменение.ТочкиМаршрута	
	|Документ.гкс_ЗаписьВОчередьОтгрузкиПЛК.Чтение.ТочкиМаршрута
	|Документ.гкс_ЗаписьВОчередьОтгрузкиПЛК.Изменение.ТочкиМаршрута	
	|Документ.гкс_ЗаписьВОчередьПриемкиПЛК.Чтение.ТочкиМаршрута
	|Документ.гкс_ЗаписьВОчередьПриемкиПЛК.Изменение.ТочкиМаршрута
	|Документ.гкс_ЗаявкаНаОтгрузкуПродукции.Чтение.Организации
	|Документ.гкс_ЗаявкаНаОтгрузкуПродукции.Изменение.Организации	
	|Документ.гкс_ЛабораторныйАнализ.Чтение.ТочкиМаршрута
	|Документ.гкс_ЛабораторныйАнализ.Изменение.ТочкиМаршрута	
	|Документ.гкс_НаправлениеНаРазгрузку.Чтение.ТочкиМаршрута
	|Документ.гкс_НаправлениеНаРазгрузку.Изменение.ТочкиМаршрута	
	|Документ.гкс_НормативнаяСертификацияНоменклатуры.Чтение.Организации
	|Документ.гкс_НормативнаяСертификацияНоменклатуры.Изменение.Организации
	|Документ.гкс_НормативнаяСертификацияНоменклатуры.Чтение.ТочкиМаршрута
	|Документ.гкс_НормативнаяСертификацияНоменклатуры.Изменение.ТочкиМаршрута	
	|Документ.гкс_ОснованиеДляДвиженияЗапасов.Чтение.Организации
	|Документ.гкс_ОснованиеДляДвиженияЗапасов.Изменение.Организации
	|Документ.гкс_ОснованиеДляДвиженияЗапасов.Чтение.ТочкиМаршрута
	|Документ.гкс_ОснованиеДляДвиженияЗапасов.Изменение.ТочкиМаршрута
	|Документ.гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16.Чтение.Организации
	|Документ.гкс_ПриказНаОтпускПродукцииЭлеватораЗПП16.Изменение.Организации
	|Документ.гкс_РегистрацияНаПЛК.Чтение.ТочкиМаршрута
	|Документ.гкс_РегистрацияНаПЛК.Изменение.ТочкиМаршрута
	|Документ.гкс_РегистрацияНаПЛК.Чтение.Организации
	|Документ.гкс_РегистрацияНаПЛК.Изменение.Организации
	|Документ.гкс_РеестрНакладныхЗПП3.Чтение.ТочкиМаршрута
	|Документ.гкс_РеестрНакладныхЗПП3.Изменение.ТочкиМаршрута
	|Документ.гкс_РеестрНакладныхЗПП3.Чтение.Организации
	|Документ.гкс_РеестрНакладныхЗПП3.Изменение.Организации
	|Документ.гкс_СпецификацияКДоговоруКонтрагента.Чтение.Организации
	|Документ.гкс_СпецификацияКДоговоруКонтрагента.Изменение.Организации	
	|Документ.гкс_СРПВПеревеска.Чтение.ТочкиМаршрута
	|Документ.гкс_СРПВПеревеска.Изменение.ТочкиМаршрута
	|Документ.гкс_СРПВПрибытиеНаПуть.Чтение.ТочкиМаршрута
	|Документ.гкс_СРПВПрибытиеНаПуть.Изменение.ТочкиМаршрута
	|Документ.гкс_СРПВРегистрацияОперацииСВагоном.Чтение.ТочкиМаршрута
	|Документ.гкс_СРПВРегистрацияОперацииСВагоном.Изменение.ТочкиМаршрута
	|Документ.гкс_ТранспортныйДокумент.Чтение.Организации
	|Документ.гкс_ТранспортныйДокумент.Изменение.Организации	
	|Документ.гкс_УстановкаНастроекНазначенияРазгрузки.Чтение.ТочкиМаршрута
	|Документ.гкс_УстановкаНастроекНазначенияРазгрузки.Изменение.ТочкиМаршрута
	|Документ.гкс_ФормированиеНомераПробы.Чтение.ТочкиМаршрута
	|Документ.гкс_ФормированиеНомераПробы.Изменение.ТочкиМаршрута
	|РегистрСведений.гкс_АРМПриемкиНаПЛКСписокРегистраций.Чтение.ТочкиМаршрута
	|РегистрСведений.гкс_АРМПриемкиНаПЛКСписокРегистраций.Изменение.ТочкиМаршрута
	|РегистрСведений.гкс_КомпозитныеПробы.Чтение.ТочкиМаршрута
	|РегистрСведений.гкс_КомпозитныеПробы.Изменение.ТочкиМаршрута
	|РегистрСведений.гкс_НастройкиПриемкаПЛКПоТочкамМаршрута.Чтение.ТочкиМаршрута
	|РегистрСведений.гкс_НастройкиПриемкаПЛКПоТочкамМаршрута.Изменение.ТочкиМаршрута
	|РегистрСведений.гкс_НоменклатураПЛК.Чтение.ТочкиМаршрута
	|РегистрСведений.гкс_НоменклатураПЛК.Изменение.ТочкиМаршрута
	|РегистрСведений.гкс_РезультатыНормативнойСертификацииНоменклатуры.Чтение.Организации
	|РегистрСведений.гкс_РезультатыНормативнойСертификацииНоменклатуры.Изменение.Организации	
	|РегистрСведений.гкс_СостоянияРегистрации.Чтение.ТочкиМаршрута
	|РегистрСведений.гкс_СостоянияРегистрации.Изменение.ТочкиМаршрута
	|";
	
КонецПроцедуры

// Проверяет возможность редактирования формы документа
//
// Параметры:
//   ФормаДокумента - ФормаКлиентскогоПриложения - форма, для которой требуется проверка.
//   Источник - ДанныеФормыСтруктура
//            - ТаблицаФормы - контекст для проверки условий (Форма.Объект).
//
Процедура ОпределитьДоступностьВозможностьИзмененияДокументаПоРеестру(ФормаДокумента, Источник) Экспорт
				
	Если гкс_ПриемкаТранспорта.ЗапретИзмененияДокументаПоРеестру(Источник.Ссылка) Тогда		
		ФормаДокумента.ТолькоПросмотр = Истина;
	КонецЕсли; 
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоставляемыеПрофилиГруппДоступа(ОписанияПрофилей, ПараметрыОбновления)

	// Базовые профиля
	ОписанияПрофилей.Добавить(ОписаниеПрофиляПросмотрДвиженийДокументов());
	
	// Функциональные профиля
	ОписанияПрофилей.Добавить(ОписаниеПрофиляКладовщик());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляДиспетчер());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляЛаборант());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляЛаборантВнешнихПроб());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляОператорСклада());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляПробоотборщик());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляТолькоПросмотрБезРЛС());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляМенеджерВетФитоКонтроля());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляСпециалистСлужбыКачества());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляРуководительСлужбыКачества());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляБухгалтер());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляМенеджерПоЗакупкам());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляАналитик());
	ОписанияПрофилей.Добавить(ВзаимодействиеССервисомЛИМС());
	ОписанияПрофилей.Добавить(ВзаимодействиеССервисомВесов());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляОхрана());
	ОписанияПрофилей.Добавить(ОписаниеПрофиляРучнаяКорректировкаВеса());
	
КонецПроцедуры

#Область ОписаниеПрофилей

#Область ОбщегоНазначения

Функция ОписаниеПрофиляПросмотрДвиженийДокументов()
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Просмотр движений документов";
	ОписаниеПрофиля.Идентификатор = "872d4688-d8e5-4856-8bde-1001f5776945";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Просмотр движений документов'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Использование контекстного отчета в документах, для просмотра их движений'");
	
	// Использование программы.
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаДвиженияДокумента");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

Функция ОписаниеПрофиляТолькоПросмотрБезРЛС()
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Только просмотр (без РЛС)";
	ОписаниеПрофиля.Идентификатор = "872d4688-d8e5-4856-8bde-1001f5776946";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Только просмотр (без РЛС)'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Только просмотр (без РЛС)'");
	
	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляПросмотраОбъектовЛабораторияВнешниеПробы(ОписаниеПрофиля);
	// Использование программы.
	ОписаниеПрофиля.Роли.Добавить("гкс_ТолькоПросмотрБезРЛС");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

#КонецОбласти

#Область ИнтеграционныеПрофиля

Функция ВзаимодействиеССервисомЛИМС()
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Взаимодействие с сервисом ЛИМС";
	ОписаниеПрофиля.Идентификатор = "872d4688-d8e5-4856-8bde-1001f5776346";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Взаимодействие с сервисом ЛИМС'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для интеграции с сервисом ЛИМС'");
	
	// Использование программы.
	ОписаниеПрофиля.Роли.Добавить("гкс_ВзаимодействиеССервисомLIMs");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

Функция ВзаимодействиеССервисомВесов()
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Взаимодействие с сервисом весов";
	ОписаниеПрофиля.Идентификатор = "0ab3fcb3-2151-11ee-a51f-00e04c6804de";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Взаимодействие с сервисом весов'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для интеграции с сервисом весов'");
	
	// Использование программы.
	ОписаниеПрофиля.Роли.Добавить("гкс_ВзаимодействиеССервисомВесов");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

#КонецОбласти

#Область ФункциональныеПрофиля

// Возвращает описание профиля "Менеджер вет/фито контроля"
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляМенеджерВетФитоКонтроля() 
	
	// Профиль "Менеджер вет/фито контроля".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Менеджер вет/фито контроля";
	ОписаниеПрофиля.Идентификатор = "daa17c27-f215-42a6-b3f9-2fec07e684c3";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Менеджер вет/фито контроля'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для менеджера вет/фито контроля'");
	
	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиУправленияПретензионнымДопускомКВагонам(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиМенеджерВетФитоКонтроля(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиМенеджерВетФитоКонтроля(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

// Возвращает описание профиля Пробоотборщик
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляПробоотборщик()
	
	// Профиль "Пробоотборщик".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();;
	
	ОписаниеПрофиля.Имя           = "Пробоотборщик";
	ОписаниеПрофиля.Идентификатор = "e438c5e5-c58e-4410-a36a-74d3839979c8";
	ОписаниеПрофиля.Наименование  =	НСтр("ru = 'Пробоотборщик'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для пробоотборщиков'");

	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиПробоотборщик(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомКомпозитныеПробы(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиПробоотборщик(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

// Возвращает описание профиля Лаборант
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляЛаборант()
	
	// Профиль "Лаборант".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();;
	
	ОписаниеПрофиля.Имя           = "Лаборант";
	ОписаниеПрофиля.Идентификатор = "1959dd09-b4fb-477f-9dbd-5820cf33eece";
	ОписаниеПрофиля.Наименование  =	НСтр("ru = 'Лаборант'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для лаборантов'");
	
	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиЛаборант(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиЛаборант(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомКомпозитныеПробы(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

// Возвращает описание профиля Лаборант внешних проб
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляЛаборантВнешнихПроб()
	
	// Профиль "Лаборант внешних проб".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();;
	
	ОписаниеПрофиля.Имя           = "Лаборант внешних проб";
	ОписаниеПрофиля.Идентификатор = "d28badeb-c52e-4e90-8910-1e6f3973e27d";
	ОписаниеПрофиля.Наименование  =	НСтр("ru = 'Лаборант внешних проб'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для лаборантов создающих внешние пробы'");
	
	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСОбъектамиЛабораторияВнешниеПробы(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

// Возвращает описание профиля Кладовщик
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляКладовщик()
	
	// Профиль "Кладовщик".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Кладовщик";
	ОписаниеПрофиля.Идентификатор = "9657d201-3d20-4a02-a1a7-026e24f38ff1";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Кладовщик'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для кладовщиков'");
	
	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомКомпозитныеПробы(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиКладовщик(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиКладовщик(ОписаниеПрофиля);
		
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

// Возвращает описание профиля Диспетчер
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляДиспетчер() 
	
	// Профиль "Диспетчер".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Диспетчер";
	ОписаниеПрофиля.Идентификатор = "bda72b4b-c4c9-458a-9073-944ab2b0c31b";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Диспетчер'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для диспетчеров'");

	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомКалендарьОчереди(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиДиспетчер(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиДиспетчер(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомТребованияПоОтборуПроб(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
		
КонецФункции

// Возвращает описание профиля Диспетчер
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляОператорСклада() 
	
	// Профиль "Оператор склада".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ОператорСклада";
	ОписаниеПрофиля.Идентификатор = "235fcc8c-957b-4f15-884d-7fae58c769b7";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Оператор склада'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для оператор склада'");

	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиОператорСклада(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
		
КонецФункции

Функция ОписаниеПрофиляСпециалистСлужбыКачества()
	
	// Профиль "Специалист службы качества".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Специалист службы качеств";
	ОписаниеПрофиля.Идентификатор = "235fcc8c-957b-4f15-884d-7fae58c769b8";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Специалист службы качества'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для специалиста службы качества'");

	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиСпециалистСлужбыКачества(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомКомпозитныеПробы(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомТребованияПоОтборуПроб(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиСпециалистСлужбыКачества(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

Функция ОписаниеПрофиляРуководительСлужбыКачества()
	
	// Профиль "Руководитель службы качества".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Руководитель службы качеств";
	ОписаниеПрофиля.Идентификатор = "eea86538-39e9-4491-a36b-64cb64e73684";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Руководитель службы качества'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для Руководитель службы качества'");

	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиСпециалистСлужбыКачества(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомКомпозитныеПробы(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомТребованияПоОтборуПроб(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиСпециалистСлужбыКачества(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиРуководительСлужбыКачества(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

// Возвращает описание профиля Бухгалтер
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляБухгалтер()
	// Профиль "Бухгалтер".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Бухгалтер";
	ОписаниеПрофиля.Идентификатор = "b44988f0-ced4-4c8c-b54d-f468db4fe233";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Бухгалтер'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для бухгалтера'");

	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиБухгалтер(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиБухгалтер(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

// Возвращает описание профиля "Менеджер по закупкам"
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляМенеджерПоЗакупкам() 
	
	// Профиль "Менеджер по закупкам".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Менеджер по закупкам";
	ОписаниеПрофиля.Идентификатор = "81b58804-10c3-4910-a659-80fe7c5b8b74";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Менеджер по закупкам'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ОписаниеПрофиля.Описание = НСтр("ru = 'Менеджер по закупкам'");
	
	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомКалендарьОчереди(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиМенеджерПоЗакупкам(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

// Возвращает описание профиля "Аналитик"
//
// Возвращаемое значение
// Структура - см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа()
//
Функция ОписаниеПрофиляАналитик() 
	
	// Профиль "Аналитик".
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Аналитик";
	ОписаниеПрофиля.Идентификатор = "2efd48ab-d1dd-4925-b363-592d0b347460";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Аналитик'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	ОписаниеПрофиля.Описание = НСтр("ru = 'Аналитик'");
	
	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	
	ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиАналитик(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСИнтеграцияWarehouse(ОписаниеПрофиля);
	
	// Виды доступа.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ТочкиМаршрута", "ВначалеВсеРазрешены");
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

Функция ОписаниеПрофиляОхрана()
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Охрана";
	ОписаниеПрофиля.Идентификатор = "1624c418-ce69-4ed3-87ef-d707deb65bb4";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Охрана'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Для сотрудников КПП'");
	
	ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля);
	ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля);
	ДополнитьПрофильРолямиДляРаботыСРабочимМестомКПП(ОписаниеПрофиля);
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

Функция ОписаниеПрофиляРучнаяКорректировкаВеса()
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Ручная корректировка веса";
	ОписаниеПрофиля.Идентификатор = "49bd5fba-7cdd-4b02-8461-16d043774c93";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Ручная корректировка веса'", ОбщегоНазначения.КодОсновногоЯзыка());
	ОписаниеПрофиля.Описание = НСтр("ru = 'Дает право ручной корректировки веса в док-те Взвешивание'");
	
	ДополнитьПрофильРолямиРучнаяКорректировкаВеса(ОписаниеПрофиля);
	
	Возврат ОписаниеПрофиля;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеПрофилей

// Дополнить профиль обязательными ролями.
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильОбязательнымиРолями(ОписаниеПрофиля)
	
	// Запуск 1С:Предприятия
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	
	// Базовые права
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБСП");
	
	// Подсистема печать
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("ИзменениеМакетовПечатныхФорм");
		
	// Заметки
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗаметок");
	
	// Редактирование реквизитов объектов
	ОписаниеПрофиля.Роли.Добавить("РедактированиеРеквизитовОбъектов");
	
	// Варианты отчетов
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЛичныхВариантовОтчетов");
	
	// Текущие дела
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	
	// Универсальный отчет
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеУниверсальногоОтчета");
	
	// Связанные документы
	ОписаниеПрофиля.Роли.Добавить("ПросмотрСвязанныеДокументы");
	
	// Напоминания пользователя
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеНапоминаний");
	
	// Дополнительные реквизиты и сведения	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДополнительныхРеквизитовИСведений");
	ОписаниеПрофиля.Роли.Добавить("ИзменениеДополнительныхСведений");
			
КонецПроцедуры

// Дополнить профиль общими ролями приемка транспорта
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильОбщимиРолямиПриемкаТранспорта(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_РазделПриемкаТранспорта");
	ОписаниеПрофиля.Роли.Добавить("гкс_БазовыеПраваУправлениеТранспортомНаПЛК");
	ОписаниеПрофиля.Роли.Добавить("гкс_ПросмотрОтчетовПоПриемке");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_НастройкиНапоминанияПользователя_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_СостоянияРегистрации_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ФормированиеНомераПробы_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ОснованиеДляДвиженияЗапасов_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЛабораторныйАнализ_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_Взвешивание_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НаправлениеНаРазгрузку_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ВъездНаКПП_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ВыездНаКПП_Просмотр");
		
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеИнтеграцииС1СДокументооборотом");
	
КонецПроцедуры

#Область РабочиеМеста

// Дополнить профиль общими ролями для работы с рабочим местом "Приемка транспорта"
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильРолямиДляРаботыСРабочимМестомПриемкаТранспортаБазовый(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_ПриемкаТранспорта_Использование");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_АРМПриемкиНаПЛКСписокРегистраций_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_СтатусыЗаписейВОчередиПриемкиПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_ЧтениеЛабораторияВнешнихПроб");
			
КонецПроцедуры

// Дополнить профиль общими ролями для работы с рабочим местом "Приемка транспорта", работа с реестр ЗПП3
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильРолямиДляРаботыСРабочимМестомПринятыеТС(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_ИспользованиеРабочегоМестаПринятыеТС");
	
КонецПроцедуры

// Дополнить профиль общими ролями для работы с рабочим местом "Календарь очереди"
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильРолямиДляРаботыСРабочимМестомКалендарьОчереди(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВГрафикПриемкиПЛК_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВОчередьПриемкиПЛК_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВГрафикОтгрузкиПЛК_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВОчередьОтгрузкиПЛК_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_КалендарьОчереди_Использование");
	ОписаниеПрофиля.Роли.Добавить("гкс_РазделЭлектроннаяОчередь");
	
КонецПроцедуры

// Дополнить профиль общими ролями для работы с рабочим местом "Требования по отбору проб"
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильРолямиДляРаботыСРабочимМестомТребованияПоОтборуПроб(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_АРМТребованияПоОтборуПробПриПоступлении_Использование");
	ОписаниеПрофиля.Роли.Добавить("гкс_ОбработкаЗагрузкиВнешнихПроб_Использование");
КонецПроцедуры

// Дополнить профиль общими ролями для работы с рабочим местом "Требования по отбору проб"
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильРолямиДляРаботыСРабочимМестомКомпозитныеПробы(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_АРМКомпозитныеПробы_Использование");
	
КонецПроцедуры

// Дополнить профиль общими ролями для работы с рабочим местом "КПП"
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильРолямиДляРаботыСРабочимМестомКПП(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_АРМКПП_Использование");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ВъездНаКПП_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ВыездНаКПП_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВОчередьПриемкиПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Отчет_ОтчетФормаВыездаЗаезда_Просмотр");
	
КонецПроцедуры

#КонецОбласти

// Дополнить профиль общими ролями для работы с командами управления допуском к вагонам
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильРолямиУправленияПретензионнымДопускомКВагонам(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_ВозможностьМенятьДопускПретензионныйВАРМеПриемкиНаПЛК");
	ОписаниеПрофиля.Роли.Добавить("гкс_ВозможностьМенятьДопускФитосанитарныйВАРМеПриемкиНаПЛК");
	ОписаниеПрофиля.Роли.Добавить("гкс_ВозможностьМенятьДопускФумигационныйВАРМеПриемкиНаПЛК");
	
КонецПроцедуры

#Область ПрофильДиспетчер

// Дополнить профиль общими ролями для работы с документами подсистемы приемки для профля диспетчер
// 
// Параметры:
//  ОписаниеПрофиля - Структура -  см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа
//
Процедура ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиДиспетчер(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_Взвешивание_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НаправлениеНаРазгрузку_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РегистрацияНаПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ФормированиеНомераПробы_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаданияНаПроверкуКачества_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЛабораторныйАнализ_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НормативнаяСертификацияНоменклатуры_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РеестрНакладныхЗПП3_Просмотр");
	
КонецПроцедуры

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиДиспетчер(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Справочник_ЭлектронныеТабло_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_КонтрольПревышенияВесаБрутто_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_НастройкиНазначенияРазгрузки_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_НастройкаЭлектронногоТабло_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_НазначенияОборудованияНаПЛК_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_ЗаданияНаПроверкуКачества_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_РезультатыНормативнойСертификацииНоменклатуры_Просмотр");

КонецПроцедуры

#КонецОбласти

#Область ПрофильЛаборант

Процедура ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиЛаборант(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_Взвешивание_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаданияНаПроверкуКачества_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЛабораторныйАнализ_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НаправлениеНаРазгрузку_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РегистрацияНаПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ФормированиеНомераПробы_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НормативнаяСертификацияНоменклатуры_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РеестрНакладныхЗПП3_Просмотр");

КонецПроцедуры

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиЛаборант(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_ЗаданияНаПроверкуКачества_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_РезультатыНормативнойСертификацииНоменклатуры_Изменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_ПросмотрОтчетовЛаборатория");
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_ГрупповоеИзменениеДатыВРегистрацииСвязанныхОбъектов_Использование"); 
	
КонецПроцедуры

#КонецОбласти

#Область ПрофильЛаборантВнешнихПроб

Процедура ДополнитьПрофильРолямиДляРаботыСОбъектамиЛабораторияВнешниеПробы(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_ДобавлениеИзменениеЛабораторияВнешнихПроб");
	
КонецПроцедуры

Процедура ДополнитьПрофильРолямиДляПросмотраОбъектовЛабораторияВнешниеПробы(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_ЧтениеЛабораторияВнешнихПроб");
	
КонецПроцедуры

#КонецОбласти

#Область ПрофильКладовщик

Процедура ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиКладовщик(ОписаниеПрофиля)

	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_Взвешивание_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаданияНаПроверкуКачества_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЛабораторныйАнализ_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НаправлениеНаРазгрузку_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РегистрацияНаПЛК_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РеестрНакладныхЗПП3_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_ОформленныеПартии_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ПриказНаОтпускПродукцииЭлеватораЗПП16_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ФормированиеНомераПробы_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ОснованиеДляДвиженияЗапасов_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВГрафикПриемкиПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВГрафикПриемкиПЛК_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВОчередьПриемкиПЛК_ДобавлениеИзменение");

	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаявкаНаОтгрузкуПродукции_ДобавлениеИзменение");
	
КонецПроцедуры

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиКладовщик(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Справочник_ТранспортныеСредства_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_ЗаданияНаПроверкуКачества_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_ГрафикПриемкиНаПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_РезультатыНормативнойСертификацииНоменклатуры_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_СвязьРегистрацииИТранспортногоДокумента_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеУниверсальногоОтчета");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	
КонецПроцедуры

#КонецОбласти

#Область ОператорСклада

Процедура ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиОператорСклада(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_Взвешивание_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаданияНаПроверкуКачества_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НаправлениеНаРазгрузку_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЛабораторныйАнализ_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РегистрацияНаПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ФормированиеНомераПробы_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РеестрНакладныхЗПП3_Просмотр");

	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаявкаНаОтгрузкуПродукции_Просмотр");
	
КонецПроцедуры

#КонецОбласти

#Область Пробоотборщик

Процедура ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиПробоотборщик(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_Взвешивание_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НаправлениеНаРазгрузку_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаданияНаПроверкуКачества_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЛабораторныйАнализ_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РегистрацияНаПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ФормированиеНомераПробы_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НормативнаяСертификацияНоменклатуры_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РеестрНакладныхЗПП3_Просмотр");
	
КонецПроцедуры

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиПробоотборщик(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_ЗаданияНаПроверкуКачества_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_РезультатыНормативнойСертификацииНоменклатуры_Просмотр");
	
КонецПроцедуры

#КонецОбласти

#Область МенеджерФитоВетКонтроля

Процедура ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиМенеджерВетФитоКонтроля(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НаправлениеНаРазгрузку_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РегистрацияНаПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВГрафикПриемкиПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаписьВОчередьПриемкиПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РеестрНакладныхЗПП3_Просмотр");

КонецПроцедуры

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиМенеджерВетФитоКонтроля(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_КалендарьОчереди_Использование");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_КодыПоказателейКачестваЛИМС_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_СтатусыДопускаВагоновКВскрытию_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_СтатусыЗаписейВОчередиПриемкиПЛК_Просмотр");
	
КонецПроцедуры

#КонецОбласти

#Область СпециалистСлужбыКачества

Процедура ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиСпециалистСлужбыКачества(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_Взвешивание_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаданияНаПроверкуКачества_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЛабораторныйАнализ_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РегистрацияНаПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ФормированиеНомераПробы_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_НормативнаяСертификацияНоменклатуры_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РеестрНакладныхЗПП3_Просмотр");
		
КонецПроцедуры

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиСпециалистСлужбыКачества(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_КодыПоказателейКачестваЛИМС_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_РезультатыНормативнойСертификацииНоменклатуры_Изменение");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_ГрупповоеИзменениеДатыВРегистрацииСвязанныхОбъектов_Использование"); 
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистраСведений_гкс_КонтрагентыНоменклатурыЛИМС_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_НастройкиПечатиФормированияПроб_ДобавлениеИзменение");
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Справочник_ОтветственныеЛица_ДобавлениеИзменение");
		
КонецПроцедуры

#КонецОбласти

#Область РуководительСлужбыКачества

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиРуководительСлужбыКачества(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_ИзменениеСтатусаВыполненЛабораторномАнализе");
	
КонецПроцедуры

#КонецОбласти

#Область Бухгалтер

Процедура ДополнитьПрофильРолямиДляРаботыСДокументамиПриемкиБухгалтер(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РеестрНакладныхЗПП3_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_ОформленныеПартии_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ПриказНаОтпускПродукцииЭлеватораЗПП16_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_РегистрацияНаПЛК_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ТранспортныйДокумент_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ФормированиеНомераПробы_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_Взвешивание_Просмотр");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаявкаНаОтгрузкуПродукции_ДобавлениеИзменение");
	
КонецПроцедуры

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиБухгалтер(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Справочник_АлгоритмыРасчетаПоказателейКачества_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_ГрупповоеИзменениеДатыВРегистрацииСвязанныхОбъектов_Использование");
	
КонецПроцедуры

#КонецОбласти

#Область МенеджерПоЗакупкам

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиМенеджерПоЗакупкам(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_СтатусыЗаписейВОчередиПриемкиПЛК_Просмотр");
	
КонецПроцедуры

#КонецОбласти

#Область Аналитик

Процедура ДополнитьПрофильРолямиДляРаботыСПрочимиОбъектамиАналитик(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_БазовыеПраваАналитика");
	ОписаниеПрофиля.Роли.Добавить("гкс_БазовыаПраваИнтеграционныйАдаптер");
	
	ОписаниеПрофиля.Роли.Добавить("гкс_Обработка_ГрупповоеИзменениеДатыВРегистрацииСвязанныхОбъектов_Использование");
	ОписаниеПрофиля.Роли.Добавить("гкс_РегистрСведений_НастройкиНапоминанияПользователя_ДобавлениеИзменение");
	ОписаниеПрофиля.Роли.Добавить("гкс_Документ_ЗаявкаНаОтгрузкуПродукции_ДобавлениеИзменение");
	
КонецПроцедуры

#КонецОбласти  

#Область РучнаяКорректировкаВеса

Процедура ДополнитьПрофильРолямиРучнаяКорректировкаВеса(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_РучнаяКорректировкаВеса");
	
КонецПроцедуры

#КонецОбласти

#Область ИнтеграцияWarehouse

Процедура ДополнитьПрофильРолямиДляРаботыСИнтеграцияWarehouse(ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("гкс_ДобавлениеИзменениеИнтеграцииWarehouse");
	ОписаниеПрофиля.Роли.Добавить("гкс_НастройкаПодключенийКВебСервисам");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область Прочее

Функция ИндексироватьПрофили(ОписанияПрофилей, ПолеПрофиля = "Имя")
	
	Результат = Новый Соответствие;
	Для Индекс = 0 По ОписанияПрофилей.ВГраница() Цикл
		
		Профиль = ОписанияПрофилей[Индекс];
		Результат.Вставить(Профиль[ПолеПрофиля], Индекс);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

// Найти профиль.
// 
// Параметры:
//  ИмяПрофиля - Строка -
//  ОписанияПрофилей - Массив из Структура - 
//  ИндексПрофилей - Соотвествие -  
// 
// Возвращаемое значение:
//  Неопределено, Структура - Найденный профиль
Функция НайтиПрофиль(ИмяПрофиля, ОписанияПрофилей, ИндексПрофилей)

	ИндексПрофиля = ИндексПрофилей[ИмяПрофиля];
	Если ИндексПрофиля = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат ОписанияПрофилей[ИндексПрофиля];
	
КонецФункции

#КонецОбласти

#КонецОбласти
