// @strict-types

#Область ПрограммныйИнтерфейс

// Рассчитать данные регистрации для РМПриемка транспорта.
// 
// Параметры:
//  Регистрация - ДокументСсылка.гкс_РегистрацияНаПЛК - 
//
Процедура РассчитатьДанныеРегистрацииДляРМПриемкаТранспорта(Знач Регистрация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	РегистрыСведений
	         .гкс_АРМПриемкиНаПЛКСписокРегистраций
	         .ЗарегистрироватьВАРМПриемкиНаПЛК(Регистрация);
		
КонецПроцедуры

// Получить документы приемки по регистрации.
// 
// Параметры:
//  ДокументРегистрации - ДокументСсылка.гкс_РегистрацияНаПЛК - 
// 
// Возвращаемое значение:
//  Структура - Получить документы регистрации:
// * ТранспортныйДокумент - ДокументСсылка.гкс_ТранспортныйДокумент -  
//
Функция ИнформацияОТранспортеПоРегистрации(ДокументРегистрации) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат гкс_ПриемкаТранспорта.ИнформацияОТранспортеПоРегистрации(ДокументРегистрации);
	
КонецФункции

// Установить документы регистрации.
// 
// Параметры:
//  СтруктураЗаписи - Структура:
//   * ДокументРегистрации - ДокументСсылка.гкс_РегистрацияНаПЛК
//   * ТранспортныйДокумент - ДокументСсылка.гкс_ТранспортныйДокумент
//   * ТранспортноеСредство - СправочникСсылка.ТранспортныеСредства 
//
Процедура УстановитьСвязьРегистрацииИТранспортногоДокумента(СтруктураЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	гкс_ПриемкаТранспорта.УстановитьСвязьРегистрацииИТранспортногоДокумента(СтруктураЗаписи);	

КонецПроцедуры

// Получить документ записи в очередь для документа регистрации
// 
// Параметры:
//  ДокументРегистрации - ДокументСсылка.гкс_РегистрацияНаПЛК - документ для которого идет поиск
// 
// Возвращаемое значение:
//  ДокументСсылка.гкс_ЗаписьВОчередьПриемкиПЛК
//	или ДокументСсылка.гкс_ЗаписьВОчередьОтгрузкиПЛК - найденный документ записи в электронную очередь
//
Функция ИнформацияОПредварительнойЗаписи(ДокументРегистрации) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат РегистрыСведений.гкс_РегистрацииПоЭлектроннойОчереди.ИнформацияОЗаписиВОчереди(ДокументРегистрации);
	
КонецФункции

Процедура УстановитьСвязьРегистрацииИЗаписиВОчередь(СтруктураЗаписи) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	гкс_ПриемкаТранспорта.УстановитьСвязьРегистрацииИЗаписиВОчередь(СтруктураЗаписи);	

КонецПроцедуры

// см.гкс_ПриемкаТранспорта.ПолучитьЕдиницуИзмеренияВесаПриемки
Функция ПолучитьЕдиницуИзмеренияВесаПриемки() Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Возврат гкс_ПриемкаТранспорта.ПолучитьЕдиницуИзмеренияВесаПриемки();
КонецФункции

// Функция возвращает единицу измерения для траснпортного документа по-умолчанию - Тонна
// 
// Возвращаемое значение:
//	СправочникСсылка.УпаковкиЕдиницыИзмерения - единица измерения Тонна
Функция ПолучитьЕдиницуИзмеренияТранспортногоДокумента() Экспорт
	Возврат гкс_ПриемкаТранспортаПовтИсп.ПолучитьЕдиницуИзмеренияТранспортногоДокумента();
КонецФункции

//	см. гкс_ПриемкаТранспортаПовтИсп.ПолучитьКоэффициентПересчетаЕдиниц  
Функция ПолучитьКоэффициентПересчетаЕдиниц(ЕдиницаДо, ЕдиницаПосле) Экспорт
	Возврат гкс_ПриемкаТранспорта.ПолучитьКоэффициентПересчетаЕдиниц(ЕдиницаДо, ЕдиницаПосле);
КонецФункции

// Проверяет функциональную опцию автоматического формирования лаб. анализа
// типа Композит.
// 
// Возвращаемое значение:
//  Булево - Истина, если опция включена
//
Функция ФормироватьКомпозитныйЛабораторныйАнализ() Экспорт
	
	Возврат гкс_ПриемкаТранспорта.ФормироватьКомпозитныйЛабораторныйАнализ();
	
КонецФункции

// Определяет время начала производственный суток для даты
// 
// Параметры:
//  - ДатаРегистрации - Дата - 
// 
// Возвращаемое значение:
//  Дата - дата, время начала произв. суток		
//
Функция НачалоПроизводственныхСуток(ДатаСмены) Экспорт
		
	Возврат гкс_ПриемкаТранспорта.НачалоПроизводственныхСуток(ДатаСмены);
	
КонецФункции

// Определяет время окончания производственный суток для даты
// 
// Параметры:
//  - ДатаРегистрации - Дата - 
// 
// Возвращаемое значение:
//  Дата - дата, время окончания произв. суток		
//
Функция ОкончаниеПроизводственныхСуток(ДатаСмены) Экспорт
	
	Возврат гкс_ПриемкаТранспорта.ОкончаниеПроизводственныхСуток(ДатаСмены);
	
КонецФункции	

// Возвращает должность отвественного лица
// 
// Параметры:
//	Ответственный - СправочникСсылка.гкс_ОтветственныеЛица - ответственное лицо
// 
// Возвращаемое значение:
//  Строка - должность ответственного лица	
//
Функция ДолжностьОтветственного(Ответственный) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный, "Должность");

КонецФункции

// Возвращает текущую яму и сислос разгрузки номенклатуры по качеству
//
// Параметры:
//  ТочкаМаршрута  - СправочникСсылка.гкс_ТочкиМаршрута - ПЛК
//  ВидПеревозки  - ПеречислениеСсылка.гкс_ТипыТранспортныхСредствДоставки - Авто,ЖД и пр
//  Номенклатура  - СправочникСсылка.Номенклатура - номенклатура для разгрузки
//  СлужебнаяНоменклатура  - СправочникСсылка.Номенклатура - служебная номенклатура (сегмент качества)
//
// Возвращаемое значение:
//   Структура   - 
//		* ЯмаРазгрузки - СправочникСсылка.гкс_ТочкиМаршрута
//		* Силос - СправочникСсылка.гкс_ТочкиМаршрута
//
Функция ЯмаСилосРазгрузки(ТочкаМаршрута, ВидПеревозки, Номенклатура, СлужебнаяНоменклатура) Экспорт
	
	Возврат гкс_ПриемкаТранспорта.ЯмаСилосРазгрузки(ТочкаМаршрута, ВидПеревозки, Номенклатура, СлужебнаяНоменклатура);
	
КонецФункции

// Возвращает признак наличия документа взвешивания на въезде
// Параметры:
// РегистрацияНаПЛК - ДокументСсылка.гкс_РегистрацияНаПЛК
// ВозвращаемоеЗначение
// - Булево
Функция ЕстьВзвешиваниеБруттоПриемка(РегистрацияНаПЛК) Экспорт          
	Возврат
		гкс_ПриемкаТранспорта.ЕстьВзвешиваниеБруттоПриемка(РегистрацияНаПЛК);
КонецФункции	

// Возвращает все состояния по документу регистрации
// Параметры:
// ДокументРегистрации - ДокументСсылка.гкс_РегистрацияПЛК
// ВозвращаемоеЗначение
// - Массив
Функция ВсеСостоянияРегистрации(ДокументРегистрации) Экспорт        
	Возврат
		РегистрыСведений.гкс_СостоянияРегистрации.ВсеСостоянияРегистрации(ДокументРегистрации);
КонецФункции  

#КонецОбласти

