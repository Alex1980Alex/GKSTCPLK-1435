#Область ОбработчикиМетодовСервиса

Функция Ping(Запрос)
	
	КодОтвета = гкс_ОбщегоНазначенияКлиентСервер.КодОтветаЗапросВыполненУспешно();
	
	Ответ = Новый HTTPСервисОтвет(КодОтвета);
	
	Ответ.Заголовки	= ПолучитьОбщиеЗаголовкиОтвета();	
	Ответ.УстановитьТелоИзСтроки("OK", КодировкаОтвета());
	
	ВыполнитьЗаписьВЖурналСобытий(Запрос, Ответ);
	
	Возврат Ответ;
	
КонецФункции

Функция api_Samples_ExportByCodeGET(Запрос)
	
	ВремяНачала	= ОценкаПроизводительности.НачатьЗамерВремени();	
	
	КодПробы = Запрос.ПараметрыURL.Получить("code");
	
	Попытка
		
		СтрокаОтвет = гкс_ИнтеграцияЛИМССервер.ПолучитьОтветПоЗапросуКодаПробы(КодПробы);
		
		КодОтвета = гкс_ОбщегоНазначенияКлиентСервер.КодОтветаЗапросВыполненУспешно();

		Ответ = Новый HTTPСервисОтвет(КодОтвета);
		Ответ.Заголовки	= ПолучитьОбщиеЗаголовкиОтвета();
	
		Ответ.УстановитьТелоИзСтроки(СтрокаОтвет, КодировкаОтвета());		
	Исключение		
		СтрокаОтвет = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КодОтвета = гкс_ОбщегоНазначенияКлиентСервер.КодОтветаОшибкаНаСторонеСервера(); 
		
		Ответ = Новый HTTPСервисОтвет(КодОтвета);
		
		Ответ.Заголовки	= ПолучитьОбщиеЗаголовкиОшибки();
		Ответ.УстановитьТелоИзСтроки(СтрокаОтвет, КодировкаОтвета());
		
	КонецПопытки;
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени("ИнтеграцияЛИМС.ПолучениеЛабАнализаПоКоду", ВремяНачала);
	
	ВыполнитьЗаписьВЖурналСобытий(Запрос, Ответ);
	
	Возврат Ответ;
	
КонецФункции

Функция api_SamplesPUT(Запрос)
	
	ВремяНачала	= ОценкаПроизводительности.НачатьЗамерВремени();
	
	Идентификатор = Запрос.ПараметрыURL.Получить("id");
	ТелоЗапросаВСтроке = Запрос.ПолучитьТелоКакСтроку();
	
	Попытка
		
		КодОтвета = гкс_ОбщегоНазначенияКлиентСервер.КодОтветаЗапросВыполненУспешно();

		Ответ = Новый HTTPСервисОтвет(КодОтвета);
		Ответ.Заголовки	= ПолучитьОбщиеЗаголовкиОтвета();
		
		ТелоОтветаВСтроке = гкс_ИнтеграцияЛИМССервер
		                      .ПолучитьОтветПоИдентификаторуАнализа(Идентификатор, 
							                                        ТелоЗапросаВСтроке);		
	Исключение		
		Информация = ИнформацияОбОшибке();
		КодОтвета = гкс_ОбщегоНазначенияКлиентСервер.КодОтветаОшибкаВФормированииЗапроса();
		
		Ответ = Новый HTTPСервисОтвет(КодОтвета);
		Ответ.Заголовки	= ПолучитьОбщиеЗаголовкиОшибки();
		
		//@skip-warning
		ТелоОтветаВСтроке = ПодробноеПредставлениеОшибки(Информация);			
		
	КонецПопытки;
	
	Ответ.УстановитьТелоИзСтроки(ТелоОтветаВСтроке, КодировкаОтвета());
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени("ИнтеграцияЛИМС.SamplesPUT", ВремяНачала);
	
	ВыполнитьЗаписьВЖурналСобытий(Запрос, Ответ);
	
	Возврат Ответ;
	
КонецФункции

Функция api_SamplesGET(Запрос)
	
	КодОтвета = гкс_ОбщегоНазначенияКлиентСервер.КодОтветаЗапросВыполненУспешно();

	Ответ = Новый HTTPСервисОтвет(КодОтвета);
	Ответ.Заголовки	= ПолучитьОбщиеЗаголовкиОтвета();
	
	Ответ.УстановитьТелоИзСтроки(Запрос.ПараметрыURL.Получить("id"), КодировкаОтвета());
								 
	ВыполнитьЗаписьВЖурналСобытий(Запрос, Ответ);
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция КодировкаОтвета()
	Возврат "utf-8";
КонецФункции

Функция ПолучитьОбщиеЗаголовкиОтвета()
	
	Заголовки	= Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	
	Возврат Заголовки;
	
КонецФункции

Функция ПолучитьОбщиеЗаголовкиОшибки()
	
	Заголовки	= Новый Соответствие;
	Заголовки.Вставить("Content-Type", "text/html; charset=utf-8");
	
	Возврат Заголовки;
	
КонецФункции

Процедура ВыполнитьЗаписьВЖурналСобытий(Запрос, Ответ)
	
	Регистратор = РегистрыСведений.гкс_ЖурналСобытийHTTPСервисов; 	
	СтруктураЗаполнения = Регистратор.ПараметрыРегистрации(Запрос, Ответ, "ЛИМС");
	Регистратор.СоздатьЗаписьЖурналаСтроки(СтруктураЗаполнения);
	
КонецПроцедуры
	
#КонецОбласти 
