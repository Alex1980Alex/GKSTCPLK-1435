#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив из Строка - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ПриемкаПЛК");
		
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//	Структура - Таблицы проведения
//	СписокЗначений	- список значений, содержащий тексты запросов и их имена.
//						Возвращается в случае, если свойство 'ПолучитьТекстыЗапроса' параметра ДопПараметры
//						имеет значение Истина.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = гкс_ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.гкс_УстановкаНастроекНазначенияРазгрузки") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		ТекстЗапросаТаблицаНастройкиНазначенияРазгрузки(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	// Получим таблицы для движений
	Возврат гкс_ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ТочкаМаршрута)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры)
	
	МенеджерВременныхТаблиц = Неопределено;
	
	Если ДопПараметры <> Неопределено
		И ДопПараметры.Свойство("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц) Тогда
		
		МенеджерВременныхТаблиц = ?(МенеджерВременныхТаблиц = Неопределено,
									Новый МенеджерВременныхТаблиц,
									МенеджерВременныхТаблиц);
		
	Иначе
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;  
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка); 
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ДокументСсылка, "Дата, ТочкаМаршрута, ВидПеревозки, Номенклатура");
		
	Запрос.УстановитьПараметр("Период", РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ТочкаМаршрута", РеквизитыДокумента.ТочкаМаршрута);
	Запрос.УстановитьПараметр("ВидПеревозки", РеквизитыДокумента.ВидПеревозки);
	Запрос.УстановитьПараметр("Номенклатура", РеквизитыДокумента.Номенклатура);
		
КонецПроцедуры

Функция ТекстЗапросаТаблицаНастройкиНазначенияРазгрузки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "гкс_НастройкиНазначенияРазгрузки";
	
	Если Не гкс_ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УстановкаНастроекНазначенияРазгрузки.ТочкаМаршрута КАК ТочкаМаршрута,
	|	УстановкаНастроекНазначенияРазгрузки.ВидПеревозки КАК ВидПеревозки,
	|	УстановкаНастроекНазначенияРазгрузки.Номенклатура КАК Номенклатура,
	|	УстановкаНастроекНазначенияРазгрузки.Дата КАК Период,
	|	ТаблицаНазначенияРазгрузки.Силос КАК Силос,
	|	ТаблицаНазначенияРазгрузки.СлужебнаяНоменклатура КАК СлужебнаяНоменклатура,
	|	ТаблицаНазначенияРазгрузки.ЯмаРазгрузки КАК ЯмаРазгрузки,
	|	ТаблицаНазначенияРазгрузки.ТочкаВъезда КАК ТочкаВъезда,
	|	ИСТИНА КАК Действует
	|ПОМЕСТИТЬ ВТ_НовыеЗначения
	|ИЗ
	|	Документ.гкс_УстановкаНастроекНазначенияРазгрузки.НазначенияРазгрузки КАК ТаблицаНазначенияРазгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_УстановкаНастроекНазначенияРазгрузки КАК УстановкаНастроекНазначенияРазгрузки
	|		ПО ТаблицаНазначенияРазгрузки.Ссылка = УстановкаНастроекНазначенияРазгрузки.Ссылка
	|ГДЕ
	|	УстановкаНастроекНазначенияРазгрузки.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиНазначенияРазгрузкиСрезПоследних.СлужебнаяНоменклатура КАК СлужебнаяНоменклатура,
	|	НастройкиНазначенияРазгрузкиСрезПоследних.Силос КАК Силос,
	|	НастройкиНазначенияРазгрузкиСрезПоследних.ЯмаРазгрузки КАК ЯмаРазгрузки,
	|	НастройкиНазначенияРазгрузкиСрезПоследних.ТочкаВъезда КАК ТочкаВъезда,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ВТ_СтарыеЗначения
	|ИЗ
	|	РегистрСведений.гкс_НастройкиНазначенияРазгрузки.СрезПоследних(
	|			&Период,
	|			ТочкаМаршрута = &ТочкаМаршрута
	|				И ВидПеревозки = &ВидПеревозки
	|				И Номенклатура = &Номенклатура) КАК НастройкиНазначенияРазгрузкиСрезПоследних
	|ГДЕ
	|	НастройкиНазначенияРазгрузкиСрезПоследних.Действует
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ТочкаМаршрута КАК ТочкаМаршрута,
	|	&ВидПеревозки КАК ВидПеревозки,
	|	&Номенклатура КАК Номенклатура,
	|	ВТ_СтарыеЗначения.СлужебнаяНоменклатура КАК СлужебнаяНоменклатура,
	|	ВТ_СтарыеЗначения.Силос КАК Силос,
	|	ВТ_СтарыеЗначения.ЯмаРазгрузки КАК ЯмаРазгрузки,
	|	ВТ_СтарыеЗначения.ТочкаВъезда КАК ТочкаВъезда,
	|	ЛОЖЬ КАК Действует,
	|	&Период КАК Период
	|ИЗ
	|	ВТ_СтарыеЗначения КАК ВТ_СтарыеЗначения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НовыеЗначения КАК ВТ_НовыеЗначения
	|		ПО ВТ_СтарыеЗначения.СлужебнаяНоменклатура = ВТ_НовыеЗначения.СлужебнаяНоменклатура
	|ГДЕ
	|	ВТ_НовыеЗначения.СлужебнаяНоменклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_НовыеЗначения.ТочкаМаршрута,
	|	ВТ_НовыеЗначения.ВидПеревозки,
	|	ВТ_НовыеЗначения.Номенклатура,
	|	ВТ_НовыеЗначения.СлужебнаяНоменклатура,
	|	ВТ_НовыеЗначения.Силос,
	|	ВТ_НовыеЗначения.ЯмаРазгрузки,
	|	ВТ_НовыеЗначения.ТочкаВъезда,
	|	ВТ_НовыеЗначения.Действует,
	|	ВТ_НовыеЗначения.Период
	|ИЗ
	|	ВТ_НовыеЗначения КАК ВТ_НовыеЗначения";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
