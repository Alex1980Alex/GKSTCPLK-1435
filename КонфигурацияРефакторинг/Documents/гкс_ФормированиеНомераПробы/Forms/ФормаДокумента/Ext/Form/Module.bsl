
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		гкс_УправлениеДоступом.ОпределитьДоступностьВозможностьИзмененияДокументаПоРеестру(ЭтотОбъект, Объект);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроверитьВозможностьСозданияНовогоДокумента(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
	ИнициализироватьРеквизитыФормы();
	ИнициализироватьЭлементыФормы();
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьВидимостьКомандыСформироватьЛабАнализ();
	УстановитьВидимостьДат();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменениеФормированиеНомераПробы");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ВыполнитьАвтоматическуюПечатьЭтикеток();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипПробыПриИзменении(Элемент)
	
	ТипПробыПриИзмененииНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияПриИзменении(Элемент)
	
	РегистрацияПриИзмененииНаКлиенте();
	Если ЗначениеЗаполнено(Регистрация) Тогда
		РегистрацияПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьЛА(Команда)
	
	Если Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьЛабораторныйАнализНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНомерПробыИЗакрытьДокумент(Команда)
	
	ЭтоНовый = Параметры.Ключ.Пустая();
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	
	Записать(ПараметрыЗаписи);
	
	ПараметрыЗакрытия = Неопределено;
	Если ЭтоНовый 
		И гкс_ИнтеграцияСАРАВызовСервера.ВозможноФормироватьФайлСАРА(Объект.Ссылка) Тогда
		
		ПараметрыЗакрытия = Новый Структура;
		ПараметрыЗакрытия.Вставить("ЗаписатьДанныеДляСАРА", Истина);
		ПараметрыЗакрытия.Вставить("СсылкаНаСформированнуюПробу", Объект.Ссылка);
		
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

#Область ПодключаемыеКоманды 

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьВозможностьСозданияНовогоДокумента(Отказ)
	
	Если Не Параметры.Ключ.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьРольАдминистратораПЛК();
	
	ЕстьПравоДобавления = ПравоДоступа("Добавление", Метаданные.Документы.гкс_ФормированиеНомераПробы);
	ИзАРМа = Параметры.Свойство("ИзАРМа") И Параметры.ИзАРМа;	
	ВозможностьСозданияНовогоДокумента = 
			Пользователи.ЭтоПолноправныйПользователь() 
	        Или 
	        (ЭтоАдминистраторПЛК И ЕстьПравоДобавления)
	        Или 
	        (ИзАРМа И ЕстьПравоДобавления);
	
	Если Не ВозможностьСозданияНовогоДокумента Тогда
		ТекстСообщения = НСтр("ru = 'Создание документа возможно только из АРМ ""Приемка транспорта""'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
		        
	Отказ = Отказ Или Не ВозможностьСозданияНовогоДокумента;
	        	
КонецПроцедуры

#Область ОбработкаСобытийЭлементов
&НаСервере
Процедура ТипПробыПриИзмененииНаСервере()
	
	УстановитьВидимостьРеквизитовЗависимыхОтТипаПробы();
		
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияПриИзмененииНаКлиенте()
	
	Объект.СписокРегистраций.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура РегистрацияПриИзмененииНаСервере();
		
	СтрокаРегистрация = Объект.СписокРегистраций.Добавить();
	СтрокаРегистрация.ДокументРегистрации = Регистрация;
	
КонецПроцедуры

#КонецОбласти

#Область ИнициализацияРеквизитовФормы

&НаСервере
Процедура ИнициализироватьРеквизитыФормы()
	
	Если Не ЗначениеЗаполнено(Объект.ТипПробы) Тогда
		Объект.ТипПробы = Перечисления.гкс_ТипыПроб.Единичная;
	КонецЕсли;
	
	ЭтоЕдиничнаяПроба = Объект.ТипПробы = Перечисления.гкс_ТипыПроб.Единичная;
		
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь();
	
	Если ЭтоЕдиничнаяПроба Тогда
		ЗаполнитьТраснпортноеСредствоИзРегистрации();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьРольАдминистратораПЛК()
	ЭтоАдминистраторПЛК = гкс_ПриемкаНаПЛКСервер.ЭтоАдминистраторНаПЛК(Пользователи.ТекущийПользователь());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТраснпортноеСредствоИзРегистрации()
	
	Если Объект.СписокРегистраций.Количество() > 0 Тогда		
		Регистрация = Объект.СписокРегистраций[0].ДокументРегистрации;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ИнициализацияЭлементовФормы

&НаСервере
Процедура ИнициализироватьЭлементыФормы()
	
	ИнициализироватьСписокВыбораТочкиМаршрута();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьСписокВыбораТочкиМаршрута()
	
	Если ЭтоАдминистраторПЛК И НЕ ЭтоПолноправныйПользователь Тогда
		
		ТочкиМаршрутаПользователя = РегистрыСведений
						            .гкс_НастройкиПользователейПриемкаНаПЛК
						   			.НастроенныеТочкиМаршрутаПользователя(Пользователи.ТекущийПользователь());	
		Элементы.ТочкаМаршрута.СписокВыбора.ЗагрузитьЗначения(ТочкиМаршрутаПользователя);	
		Элементы.ТочкаМаршрута.РежимВыбораИзСписка = Истина;
						   			
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область УправлениеВидимостьюИДоступностью

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовФормы()
	
	Элементы.ТипПробы.ТолькоПросмотр = Не ЭтоПолноправныйПользователь;
	Элементы.ТочкаМаршрута.ТолькоПросмотр = Не Параметры.Ключ.Пустая();
	
	УстановитьВидимостьРеквизитовЗависимыхОтТипаПробы();
	
	УстановитьСвойствоТолькоПросмотрВЗависимостиОтОтраженностиДокумента();
	
	УстановитьВидимостьКомандыСформироватьЛабАнализ();
	УстановитьВидимостьКомандыСформироватьНомерПробы();
	
	УстановитьВидимостьДат();
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРеквизитовЗависимыхОтТипаПробы()
	
	Элементы.Регистрация.Видимость = ЭтоЕдиничнаяПроба;
	Элементы.ТранспортноеСредство.Видимость = ЭтоЕдиничнаяПроба;
	
	Элементы.КомандаСформироватьФайлСАРА.Видимость = 
		гкс_ИнтеграцияСАРАВызовСервера.ВозможноФормироватьФайлСАРА(Объект.Ссылка);
	
	Элементы.ГруппаСписокРегистраций.Видимость = Не ЭтоЕдиничнаяПроба;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКомандыСформироватьЛабАнализ()
	
	Элементы.ФормаСформироватьЛА.Видимость = ЗначениеЗаполнено(Объект.Ссылка) И Не ЭтотОбъект.ТолькоПросмотр;
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьВидимостьКомандыСформироватьНомерПробы()
	
	Элементы.ФормаСформироватьНомерПробыИЗакрытьДокумент.Видимость = Не ЭтотОбъект.ТолькоПросмотр;
	
КонецПроцедуры
   
&НаСервере
Процедура УстановитьСвойствоТолькоПросмотрВЗависимостиОтОтраженностиДокумента()
	
	НомерПробыЗаполнен = ЗначениеЗаполнено(Объект.НомерПробы);
	
	ЭтотОбъект.ТолькоПросмотр = НомерПробыЗаполнен И Объект.Проведен;
	Элементы.Регистрация.ТолькоПросмотр = НомерПробыЗаполнен И Объект.Проведен;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДат()
	
	МестнаяДатаЗаполнена = ЗначениеЗаполнено(Объект.МестнаяДата);
	
	Элементы.Дата.Видимость = НЕ МестнаяДатаЗаполнена;
	Элементы.МестнаяДата.Видимость = МестнаяДатаЗаполнена;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаКомандФормы

&НаСервере
Процедура СформироватьЛабораторныйАнализНаСервере()	
	
	Документы.гкс_ФормированиеНомераПробы.СформироватьЛабораторныйАнализПоНеобходимости(Объект.Ссылка);
	
КонецПроцедуры

// Выполняет автоматическую печать этикеток если документ проведен и заполнен номер пробы.
// Проверяет константу автоматической печати.
//
&НаКлиенте
Процедура ВыполнитьАвтоматическуюПечатьЭтикеток()
	
	// Проверяем условия печати
	Если НЕ Объект.Проведен ИЛИ НЕ ЗначениеЗаполнено(Объект.НомерПробы) Тогда
		Возврат;
	КонецЕсли;
	
	// Формируем параметры печати
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("Идентификатор", "ПФ_MXL_Этикетка");
	ПараметрыПечати.Вставить("МенеджерПечати", "Документ.гкс_ФормированиеНомераПробы");
	ПараметрыПечати.Вставить("ОбъектыПечати", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Ссылка));
		
	// Вызываем печать через обработчик команды без диалога
	гкс_УправлениеПечатьюКлиент.ВыполнитьКомандуПечати_ПФ_MXL_Этикетка(ПараметрыПечати);

	
КонецПроцедуры


#КонецОбласти

#КонецОбласти
