#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
		
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
		
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	Для Каждого Строка Из Объект.ТранспортныеСредства Цикл
		
		Если ЗначениеЗаполнено(Строка.ТранспортноеСредство) 
			И Объект.ВидПеревозки = Перечисления.гкс_ТипыТранспортныхСредствДоставки.ЖДТранспорт Тогда
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("НомерДокументаПоставщика", Объект.НомерДокумента);		
			ПараметрыПоиска.Вставить("ТранспортноеСредство", Строка.ТранспортноеСредство);
			ПараметрыПоиска.Вставить("ДатаПриемаГруза", Объект.ДатаДокумента);
			ПараметрыПоиска.Вставить("Номенклатура", Строка.Номенклатура);
			
			РегистрацияНаПЛК = Документы.гкс_РегистрацияНаПЛК.РегистрацияНаПЛКПоПараметрам(ПараметрыПоиска);
			
			Если ЗначениеЗаполнено(РегистрацияНаПЛК) Тогда
				гкс_ПриемкаНаПЛКСервер.ОтразитьТранспортныйДокумент(РегистрацияНаПЛК, Объект.Ссылка); 
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыТранспортныеСредства

&НаКлиенте
Процедура ТранспортныеСредстваПоДокументуПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НоваяСтрока Тогда
		
		Элемент.ТекущиеДанные.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортныеСредстваПоДокументуВесТарыПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.ТранспортныеСредстваПоДокументу.ТекущиеДанные;
	ПересчитатьВесНетто(ТекущаяСтрока);
	
КонецПроцедуры // } Гкс-

&НаКлиенте
Процедура ТранспортныеСредстваПоДокументуВесБруттоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТранспортныеСредстваПоДокументу.ТекущиеДанные;
	ПересчитатьВесНетто(ТекущаяСтрока);
	
КонецПроцедуры // } Гкс-

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// Заполняет показатель ВесНетто = ВесБрутто - ВесТары;
//
// Параметры:
//  ТекущаяСтрока  - ДанныеФормыСтруктура - текущая строка таблицы формы
//
&НаКлиенте
Процедура ПересчитатьВесНетто(ТекущаяСтрока)
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.ВесНетто = ТекущаяСтрока.ВесБрутто - ТекущаяСтрока.ВесТары;	

КонецПроцедуры // } Гкс-

#КонецОбласти

