#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует документ гкс_РегистрацияНаПЛК.
//
// Параметры:
//  Статус  - ПеречислениеСсылка.гкс_СРПВСтатусыВагонов - статус взвешивания по СРПВ
//
Процедура СформироватьДокументПЛКПриНеобходимости(Статус) Экспорт
	
	Если Статус <> Перечисления.гкс_СРПВСтатусыВагонов.Прибыл Тогда
		Возврат;
	КонецЕсли;	
	
	ДанныеЗаписиПоКлючуАналитики = РегистрыСведений.гкс_СРПВТранспортныеДокументыЖДПолученные
		.ДанныеЗаписиПоКлючуАналитики(ИдентификаторОтправки);
	
	Если ЗначениеЗаполнено(ДанныеЗаписиПоКлючуАналитики)
		И ДанныеЗаписиПоКлючуАналитики.Подобран	<> Неопределено
		И ДанныеЗаписиПоКлючуАналитики.Подобран
		И Не ДанныеЗаписиПоКлючуАналитики.Зарегистрирован Тогда
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("Дата", ТекущаяДатаСеанса());
		ДанныеЗаполнения.Вставить("ТочкаМаршрута", ТочкаМаршрута);
		ДанныеЗаполнения.Вставить("ТипРегистрации", Перечисления.гкс_ТипРегистрации.Приемка);
		ДанныеЗаполнения.Вставить("ВидПеревозки", Перечисления.гкс_ТипыТранспортныхСредствДоставки.ЖДТранспорт);	
		ДанныеЗаполнения.Вставить("ДокументОснование", Ссылка);
		ДанныеЗаполнения.Вставить("УсловиеПроезда", Справочники.гкс_УсловияПроезда.DAP);
		ДанныеЗаполнения.Вставить("ТранспортныйДокумент", ДанныеЗаписиПоКлючуАналитики.ТранспортныйДокумент);
		ДанныеЗаполнения.Вставить("НомерВагона", ДанныеЗаписиПоКлючуАналитики.НомерВагона);
		ДанныеЗаполнения.Вставить("Номенклатура", ДанныеЗаписиПоКлючуАналитики.Номенклатура);
		
		РегистрацияНаПЛК = Документы.гкс_РегистрацияНаПЛК.СоздатьДокументНаОсновании(ДанныеЗаполнения);
		
		Если ЗначениеЗаполнено(РегистрацияНаПЛК)
			И ЗначениеЗаполнено(ДанныеЗаписиПоКлючуАналитики.ТранспортныйДокумент) Тогда
			
			ПараметрыСвязи = Новый Структура;
			ПараметрыСвязи.Вставить("ДокументРегистрации", РегистрацияНаПЛК);
			ПараметрыСвязи.Вставить("ТранспортныйДокумент", ДанныеЗаписиПоКлючуАналитики.ТранспортныйДокумент);
			ПараметрыСвязи.Вставить("ТранспортноеСредство", 
							ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияНаПЛК, "ТранспортноеСредство"));
			
			гкс_ПриемкаТранспортаВызовСервера.УстановитьСвязьРегистрацииИТранспортногоДокумента(ПараметрыСвязи);
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
		
#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	ИдентификаторОтправки = Справочники.гкс_КлючиАналитикиСРПВ.ПустаяСсылка();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если гкс_УчетВагоновСРПВ.ВагонЗарегистрирован(ИдентификаторОтправки) Тогда
		Возврат;
	КонецЕсли;
	
	гкс_ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если гкс_УчетВагоновСРПВ.ВагонЗарегистрирован(ИдентификаторОтправки) Тогда
		Возврат;
	КонецЕсли;
			
	гкс_ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если гкс_УчетВагоновСРПВ.ВагонЗарегистрирован(ИдентификаторОтправки) Тогда
		Возврат;
	КонецЕсли;
	
	ДопПараметры = гкс_ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	ИнициализироватьДопПараметры(ДопПараметры);
	
	гкс_ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ, ДопПараметры);
	
	СформироватьДокументПЛКПриНеобходимости(Перечисления.гкс_СРПВСтатусыВагонов.Прибыл);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	гкс_ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение     

Процедура ИнициализироватьДопПараметры(ДопПараметры)
	ДопПараметры.ДополнительныеСвойства = Новый Структура;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
	