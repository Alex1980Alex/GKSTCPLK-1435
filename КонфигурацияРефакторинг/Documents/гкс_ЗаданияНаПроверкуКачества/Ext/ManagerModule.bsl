#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	МеханизмыДокумента.Добавить("ЛабораторияИКачество");
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт

	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = гкс_ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, Документ, ДопПараметры);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицагкс_ЗаданияНаПроверкуКачества(ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат гкс_ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДопПараметры)
	
	МенеджерВременныхТаблиц = Неопределено;
	
	Если ДопПараметры <> Неопределено
		И ДопПараметры.Свойство("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц) Тогда
		
		МенеджерВременныхТаблиц = ?(МенеджерВременныхТаблиц = Неопределено,
									Новый МенеджерВременныхТаблиц,
									МенеджерВременныхТаблиц);
		
	Иначе
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
		
КонецПроцедуры

#КонецОбласти

// Возвращает список транспортных документов удовлетворяющих отбору ВидПеревозки = ЖДТранспорт, а также параметрам
// Также подбираются ТД для регистраций, находящихся на ПЛК до взятия проб.
//
// Параметры:
//  ТочкаМаршрута - СправочникСсылка.гкс_ТочкиМаршрута - ПЛК, на который направляется транспорт по ТД
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура для отбора
//  ДатаНачалаПоиска - Дата - дата, с которой начинаем поиск ТД.
//
// Возвращаемое значение:
//  СписокЗначений - список с перечнем транспортных документов.
//
Функция ПолучитьСписокДоступныхТранспортныхДокументов(ТочкаМаршрута, Номенклатура, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СвязьРегистрацииИТранспортногоДокумента.ТранспортныйДокумент КАК ТранспортныйДокумент
	|ПОМЕСТИТЬ ВТ_ТранспортныеДокументыЗарегистрированные
	|ИЗ
	|	РегистрСведений.гкс_СвязьРегистрацииИТранспортногоДокумента КАК СвязьРегистрацииИТранспортногоДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_РегистрацияНаПЛК КАК РегистрацияНаПЛК
	|		ПО СвязьРегистрацииИТранспортногоДокумента.ДокументРегистрации = РегистрацияНаПЛК.Ссылка
	|ГДЕ
	|	РегистрацияНаПЛК.Номенклатура = &Номенклатура
	|	И РегистрацияНаПЛК.ТочкаМаршрута = &ТочкаМаршрута
	|	И РегистрацияНаПЛК.ВидПеревозки = &ВидЖДТранспорт
	|	И РегистрацияНаПЛК.ТипРегистрации = &ТипПриемка
	|	И РегистрацияНаПЛК.Дата > ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, -1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АРМПриемкиНаПЛКСписокРегистраций.ТранспортныйДокумент КАК ТранспортныйДокумент,
	|	СписокТранспортныхДокументов.Дата КАК Дата
	|ИЗ
	|	РегистрСведений.гкс_АРМПриемкиНаПЛКСписокРегистраций КАК АРМПриемкиНаПЛКСписокРегистраций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_ТранспортныйДокумент КАК СписокТранспортныхДокументов
	|		ПО АРМПриемкиНаПЛКСписокРегистраций.ТранспортныйДокумент = СписокТранспортныхДокументов.Ссылка
	|ГДЕ
	|	АРМПриемкиНаПЛКСписокРегистраций.ТочкаМаршрута = &ТочкаМаршрута
	|	И АРМПриемкиНаПЛКСписокРегистраций.ВидПеревозки = &ВидЖДТранспорт
	|	И АРМПриемкиНаПЛКСписокРегистраций.ТипРегистрации = &ТипПриемка
	|	И АРМПриемкиНаПЛКСписокРегистраций.ДокументФормированиеНомераПробы = &ФормированиеНомераПробыПустая
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрута);
	Запрос.УстановитьПараметр("ВидЖДТранспорт", Перечисления.гкс_ТипыТранспортныхСредствДоставки.ЖДТранспорт);
	Запрос.УстановитьПараметр("ТипПриемка", Перечисления.гкс_ТипРегистрации.Приемка);
	Запрос.УстановитьПараметр("ФормированиеНомераПробыПустая", Документы.гкс_ФормированиеНомераПробы.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	СписокТД = Новый СписокЗначений;
	Если Не РезультатЗапроса.Пустой() Тогда
		ТаблицаТД = РезультатЗапроса.Выгрузить();
		СписокТД = ТаблицаТД.ВыгрузитьКолонку("ТранспортныйДокумент");
	КонецЕсли;
	
	Возврат СписокТД;

КонецФункции

// Возвращает текст запроса получения списка нормативных показателей анализа.
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаПолучениеСпискаНормативныПоказателейАнализа() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЦБТ_НормативнаяСертификацияНоменклатуры.Ссылка) КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Сертификация
		|ИЗ
		|	Документ.гкс_НормативнаяСертификацияНоменклатуры КАК ЦБТ_НормативнаяСертификацияНоменклатуры
		|ГДЕ
		|	ЦБТ_НормативнаяСертификацияНоменклатуры.ТочкаМаршрута = &ТочкаМаршрута
		|	И ЦБТ_НормативнаяСертификацияНоменклатуры.Номенклатура = &Номенклатура
		|	И ЦБТ_НормативнаяСертификацияНоменклатуры.Проведен
		|	И ВЫБОР
		|			КОГДА ЦБТ_НормативнаяСертификацияНоменклатуры.ДатаОкончания = ДатаВремя(1,1,1)
		|				ТОГДА &ДатаПоУмолчанию
		|			ИНАЧЕ ЦБТ_НормативнаяСертификацияНоменклатуры.ДатаОкончания
		|		КОНЕЦ > &Дата
		|	И ЦБТ_НормативнаяСертификацияНоменклатуры.гкс_ВидПеревозки = ЗНАЧЕНИЕ(Перечисление.гкс_ТипыТранспортныхСредствДоставки.ЖДТранспорт)
		|	И ЦБТ_НормативнаяСертификацияНоменклатуры.гкс_НазначениеИспользованияКачества = ЗНАЧЕНИЕ(Перечисление.гкс_НазначенияИспользованияКачества.Приемка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦБТ_НормативнаяСертификацияНоменклатурыАнализы.ПоказательАнализа КАК ПоказательАнализа,
		|	ИСТИНА КАК ВыполнитьАнализ
		|ПОМЕСТИТЬ ВТ_ПоказателиАнализа
		|ИЗ
		|	ВТ_Сертификация КАК ВТ_Сертификация
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_НормативнаяСертификацияНоменклатуры.Анализы КАК ЦБТ_НормативнаяСертификацияНоменклатурыАнализы
		|		ПО ВТ_Сертификация.Ссылка = ЦБТ_НормативнаяСертификацияНоменклатурыАнализы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПоказателиАнализа.ПоказательАнализа КАК ПоказательАнализа,
		|	ВТ_ПоказателиАнализа.ВыполнитьАнализ КАК ВыполнитьАнализ
		|ИЗ
		|	ВТ_ПоказателиАнализа КАК ВТ_ПоказателиАнализа";
	Возврат ТекстЗапроса;
	
КонецФункции

// Заполняет ПереченьПоказателей показателями анализа.
//
// Параметры:
//  ТочкаМаршрута - СправочникСсылка.гкс_ТочкиМаршрута - ПЛК, на который направляется транспорт по ТД
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура для отбора
//  СписокТД - СписокЗначений - список транспортных документов.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица с перечнем показателей анализа.
//
Функция ЗаполнитьПоказателиНоменклатурыСУчетомЗаданий(ТочкаМаршрута, Номенклатура, СписокТД) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = Документы.гкс_ЗаданияНаПроверкуКачества.ТекстЗапросаПолучениеСпискаНормативныПоказателейАнализа();
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрута);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("СписокТД", СписокТД);
	Запрос.УстановитьПараметр("ВидЖДТранспорт", Перечисления.гкс_ТипыТранспортныхСредствДоставки.ЖДТранспорт);
	Запрос.УстановитьПараметр("ТипПриемка", Перечисления.гкс_ТипРегистрации.Приемка);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1, 0, 0, 0));
	Запрос.УстановитьПараметр("ДатаПоУмолчанию", Дата(2999, 1, 1, 0, 0, 0));
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданияНаПроверкуКачестваСрезПоследних.ПоказательАнализа КАК ПоказательАнализа
		|ИЗ
		|	РегистрСведений.гкс_ЗаданияНаПроверкуКачества.СрезПоследних(
		|			&Дата,
		|			ТочкаМаршрута = &ТочкаМаршрута
		|				И Номенклатура = &Номенклатура
		|				И ТранспортныйДокумент В (&СписокТД)) КАК ЗаданияНаПроверкуКачестваСрезПоследних
		|ГДЕ
		|	ЗаданияНаПроверкуКачестваСрезПоследних.ВыполнитьАнализ
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ПоказателиАнализа.ПоказательАнализа
		|ИЗ
		|	ВТ_ПоказателиАнализа КАК ВТ_ПоказателиАнализа";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ПереченьПоказателей = РезультатЗапроса.Выгрузить();
	ПереченьПоказателей.Колонки.Добавить("НомерПП", Новый ОписаниеТипов("Число"));
	НомерПП = 1;
	Для Каждого Строка Из ПереченьПоказателей Цикл
		Строка.НомерПП = НомерПП;
		НомерПП = НомерПП + 1;
	КонецЦикла;
	Возврат ПереченьПоказателей;
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ТочкаМаршрута)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицагкс_ЗаданияНаПроверкуКачества(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "гкс_ЗаданияНаПроверкуКачества";
	
	Если НЕ гкс_ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаданияНаПроверкуКачества.Дата КАК Период,
	|	ЗаданияНаПроверкуКачества.Комментарий КАК Комментарий,
	|	ЗаданияНаПроверкуКачества.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ЗаданияНаПроверкуКачества.Номенклатура КАК Номенклатура,
	|	ЗаданияНаПроверкуКачества.ТранспортныйДокумент КАК ТранспортныйДокумент,
	|	ЗаданияНаПроверкуКачестваТранспортныеСредства.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ЗаданияНаПроверкуКачестваТранспортныеСредства.Ссылка КАК Ссылка,
	|	ЗаданияНаПроверкуКачества.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_ТранспортныеСредства
	|ИЗ
	|	Документ.гкс_ЗаданияНаПроверкуКачества.ТранспортныеСредства КАК ЗаданияНаПроверкуКачестваТранспортныеСредства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.гкс_ЗаданияНаПроверкуКачества КАК ЗаданияНаПроверкуКачества
	|		ПО ЗаданияНаПроверкуКачестваТранспортныеСредства.Ссылка = ЗаданияНаПроверкуКачества.Ссылка
	|ГДЕ
	|	ЗаданияНаПроверкуКачестваТранспортныеСредства.Ссылка = &Ссылка
	|	И ЗаданияНаПроверкуКачестваТранспортныеСредства.Учитывать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТранспортныеСредства.Ответственный КАК Ответственный,
	|	ВТ_ТранспортныеСредства.Период КАК Период,
	|	ВТ_ТранспортныеСредства.Комментарий КАК Комментарий,
	|	ВТ_ТранспортныеСредства.ТочкаМаршрута КАК ТочкаМаршрута,
	|	ВТ_ТранспортныеСредства.Номенклатура КАК Номенклатура,
	|	ВТ_ТранспортныеСредства.ТранспортныйДокумент КАК ТранспортныйДокумент,
	|	ВТ_ТранспортныеСредства.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ЕСТЬNULL(ЗаданияНаПроверкуКачестваАнализы.ПоказательАнализа, ЗНАЧЕНИЕ(Справочник.гкс_ПоказателиАнализовНоменклатуры.ПустаяСсылка)) КАК ПоказательАнализа,
	|	ЕСТЬNULL(ЗаданияНаПроверкуКачестваАнализы.ВыполнитьАнализ, ЛОЖЬ) КАК ВыполнитьАнализ
	|ИЗ
	|	ВТ_ТранспортныеСредства КАК ВТ_ТранспортныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.гкс_ЗаданияНаПроверкуКачества.Анализы КАК ЗаданияНаПроверкуКачестваАнализы
	|		ПО ВТ_ТранспортныеСредства.Ссылка = ЗаданияНаПроверкуКачестваАнализы.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
