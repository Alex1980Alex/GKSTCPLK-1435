#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
   // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНакладные

&НаКлиенте
Процедура НакладныеДокументРегистрацииПриИзменении(Элемент)
	
	НакладныеДокументРегистрацииПриИзмененииНаКлиенте();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьДанныеРегистраций(Команда)
	
	Если Объект.Накладные.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьДанныеРегистрацийПродолжение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Табличная часть будет очищена, продолжить?'"),
			РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьДанныеРегистрацийНаСервере();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеРегистраций(Команда)
	
	Если Объект.Накладные.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ОбновитьДанныеРегистрацийЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные о весах будут перезаполнены, продолжить?'"),
			РежимДиалогаВопрос.ДаНет);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// Действие после ответа на вопрос ЗаполнитьДанныеРегистраций
//
// Параметры:
//  Ответ  - КодВозвратаДиалога
//  ДополнительныеПараметры  - Структура
//
&НаКлиенте
Процедура ЗаполнитьДанныеРегистрацийПродолжение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьДанныеРегистрацийНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НакладныеДокументРегистрацииПриИзмененииНаКлиенте()
	
	ОбновитьДанныеРегистрацийНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеРегистрацийЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	ОбновитьДанныеРегистрацийНаСервере();
	
КонецПроцедуры

// Заполняет табличную часть Накладные документами регистрации по отбору
//
&НаСервере
Процедура ЗаполнитьДанныеРегистрацийНаСервере()
	
	Объект.Накладные.Очистить();
	
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;	
	КонецЕсли;
	
	ДокументыРегистрации = Документы.гкс_РегистрацияНаПЛК.
						   РегистрацииНаПЛКПоЗавкеНаОтгрузку(Объект.ДокументОснование, Объект.Дата);
	
	ЗаполнитьДанныеВесов(ДокументыРегистрации);
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеРегистрацийНаСервере()
	
	Если Объект.Накладные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
    ДокументыРегистрации = Объект.Накладные.Выгрузить(,"ДокументРегистрации");
	Объект.Накладные.Очистить();

	ЗаполнитьДанныеВесов(ДокументыРегистрации);	
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьДанныеВесов(ДокументыРегистрации)
	
	АдресХранилища = гкс_ПриемкаНаПЛКСервер.
					 ПоказанияВесовДляСпискаРегистраций(ДокументыРегистрации, УникальныйИдентификатор);
	 
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если ТипЗнч(СтруктураДанных) = Тип("Структура") 
		И СтруктураДанных.Успешно Тогда
		
		Объект.Накладные.Загрузить(СтруктураДанных.ЗначенияВесовРегистраций);
		Объект.Накладные.Сортировать("ДокументРегистрации");
	КонецЕсли;
	
			
КонецПроцедуры	

#КонецОбласти


