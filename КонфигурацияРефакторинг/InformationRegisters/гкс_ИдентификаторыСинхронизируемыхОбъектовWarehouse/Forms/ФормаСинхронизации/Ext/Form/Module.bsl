
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьРеквизитыФормы();
	ЗаполнитьТаблицуПустымиСсылками();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
		
	Если Модифицированность И Не ЗавершениеРаботы Тогда
		
		СтандартнаяОбработка 	= Ложь;
		Отказ 					= Истина;
		Оповещение 				= Новый ОписаниеОповещения("ЗакрытиеЗавершение", ЭтотОбъект);
		ТекстВопроса 			= НСтр("ru = 'Есть измененные значения. Сохранить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ТаблицаСнихронизацииСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекСтрока = Элементы.ТаблицаСнихронизации.ТекущиеДанные;
	
	Если Не ТекСтрока = Неопределено Тогда
		
		Отбор 				= Новый Структура("Ключ", ТекСтрока.ТипОбъекта);
		СтрокиТипыWarehouse = ТаблицаТипыWarehouse.НайтиСтроки(Отбор);
		
		Если Не ЗначениеЗаполнено(СтрокиТипыWarehouse) Тогда
			Возврат;
		КонецЕсли;
		
		ТипыWarehouse 			= СтрокиТипыWarehouse.Получить(0);
		СтандартнаяОбработка 	= Ложь;
		ИмяМетаданных 			= ТипыWarehouse.Значение;
		ИмяФормыВыбора 			= СтрШаблон("Справочник.%1.ФормаВыбора", ИмяМетаданных);
		
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ИндексСтроки", Элементы.ТаблицаСнихронизации.ТекущаяСтрока);
		
		Оповещение = Новый ОписаниеОповещения("СсылкаНачалоВыбораОкончания", ЭтотОбъект, ДопПараметры);
		
		ОткрытьФорму(ИмяФормыВыбора,, ЭтотОбъект,,,, Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	
	ЗаполнитьТаблицуПустымиСсылками();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоказателиWarehouse(Команда)
	
	ЗаполнитьПоказателиWarehouseНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПродукциюWarehouse(Команда)
	ЗаполнитьПродукциюWarehouseНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	ЗаписатьИзмененныеСтроки();
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СсылкаНачалоВыбораОкончания(Результат, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		ТекДанные 			= ТаблицаСнихронизации.НайтиПоИдентификатору(ДопПараметры.ИндексСтроки);
		ТекДанные.Ссылка 	= Результат;
		ЗапомнитьСтрокуИзменения(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьСтрокуИзменения(ТекДанные)
	
	НоваяСтрока 		= ИзмененныеСтроки.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекДанные);
	Модифицированность 	= Истина;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьРеквизитыФормы()
	
	ЗаполнитьТаблицаТипыWarehouse();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицаТипыWarehouse()
	
	СоответствиеТиповИФорм 	= СоответствиеТиповИФорм();
	ЗначенияПеречисления 	= Метаданные.Перечисления.гкс_ТипыОбъектовWarehouse.ЗначенияПеречисления;
	
	Для Каждого Значение Из ЗначенияПеречисления Цикл
		
		ТекущийТип 		= Перечисления.гкс_ТипыОбъектовWarehouse[Значение.Имя];
		ИмяФормыПодбора = СоответствиеТиповИФорм.Получить(ТекущийТип);
		
		Если Не ИмяФормыПодбора = Неопределено Тогда
			НоваяСтрока 			= ТаблицаТипыWarehouse.Добавить();
			НоваяСтрока.Ключ 		= ТекущийТип;
			НоваяСтрока.Значение 	= ИмяФормыПодбора;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СоответствиеТиповИФорм()
	
	МенеджерТипОбъекта = Перечисления.гкс_ТипыОбъектовWarehouse;
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить(МенеджерТипОбъекта.ВидПробы, 				"гкс_НазначенияИспользованияКачества");
	Соответствие.Вставить(МенеджерТипОбъекта.Организация, 			"Организации");
	Соответствие.Вставить(МенеджерТипОбъекта.Показатель, 			"гкс_ПоказателиКачестваWarehouse");
	Соответствие.Вставить(МенеджерТипОбъекта.Продукция, 			"гкс_ПродукцияWarehouse");
	Соответствие.Вставить(МенеджерТипОбъекта.СтанцияНазначения, 	"гкс_КлассификаторСтанцийЖД");
	Соответствие.Вставить(МенеджерТипОбъекта.СтанцияОтправления, 	"гкс_КлассификаторСтанцийЖД");
	Соответствие.Вставить(МенеджерТипОбъекта.Сюрвейер, 				"Контрагенты");
	Соответствие.Вставить(МенеджерТипОбъекта.ТранспортноеСредство, 	"ТранспортныеСредства");
	Соответствие.Вставить(МенеджерТипОбъекта.Элеватор, 				"гкс_ТочкиМаршрута");
	Соответствие.Вставить(МенеджерТипОбъекта.ЕдиницыИзмерения, 		"УпаковкиЕдиницыИзмерения");
	
	Возврат Соответствие;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуПустымиСсылками()
	
	Запрос 				= Новый Запрос;
	Запрос.Текст 		= ТекстЗапросаИдентификаторыСинхронизируемыхОбъектов();
	Запрос.УстановитьПараметр("ОрганизацияПустая", 		Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("КонтрагентПустая", 		Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТранспортПустая", 		Справочники.ТранспортныеСредства.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияПустая", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПоказательПустая", 		Справочники.гкс_ПоказателиКачестваWarehouse.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПродукцияПустая", 		Справочники.гкс_ПродукцияWarehouse.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтанцияЖДПустая", 		Справочники.гкс_КлассификаторСтанцийЖД.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТочкаМаршрутаПустая", 	Справочники.гкс_ТочкиМаршрута.ПустаяСсылка());
	Запрос.УстановитьПараметр("НазначениеПустая", 		
		Перечисления.гкс_НазначенияИспользованияКачества.ПустаяСсылка());
	
	ТаблицаРезультат 	= Запрос.Выполнить().Выгрузить();
	
	ТаблицаСнихронизации.Загрузить(ТаблицаРезультат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказателиWarehouseНаСервере()
	
	гкс_ИнтеграцияWarehouse.СинхнронизацияПоказателейКачества();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПродукциюWarehouseНаСервере()
	
	гкс_ИнтеграцияWarehouse.СинхнронизацияПродукции();

КонецПроцедуры

&НаСервере
Функция ТекстЗапросаИдентификаторыСинхронизируемыхОбъектов()
	
	Возврат 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор КАК Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка КАК Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта КАК НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта КАК ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &ОрганизацияПустая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &КонтрагентПустая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &ТранспортПустая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &НазначениеПустая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &ЕдиницаИзмеренияПустая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &ПоказательПустая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &ПродукцияПустая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &СтанцияЖДПустая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовWarehouse.Идентификатор,
	|	ИдентификаторыОбъектовWarehouse.Ссылка,
	|	ИдентификаторыОбъектовWarehouse.НаименованиеОбъекта,
	|	ИдентификаторыОбъектовWarehouse.ТипОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse КАК ИдентификаторыОбъектовWarehouse
	|ГДЕ
	|	ИдентификаторыОбъектовWarehouse.Ссылка = &ТочкаМаршрутаПустая";	
	
КонецФункции

&НаКлиенте
Процедура ЗакрытиеЗавершение(Результат, ДопПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзмененныеСтроки();		
	КонецЕсли;
	
	Модифицированность = Ложь;
	Закрыть();

КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененныеСтроки()
	
	МенеджерИдОбъекты 	= РегистрыСведений.гкс_ИдентификаторыСинхронизируемыхОбъектовWarehouse;
	
	Для Каждого ТекСтрока Из ИзмененныеСтроки Цикл
		
		СтруктураЗаписи = МенеджерИдОбъекты.СтруктураЗаписи();
		ЗаполнитьЗначенияСвойств(СтруктураЗаписи, ТекСтрока);
		МенеджерИдОбъекты.ДополнитьСсылкуВЗаписьРегистра(СтруктураЗаписи);
		
	КонецЦикла;
	
	ИзмененныеСтроки.Очистить();
	
КонецПроцедуры

#КонецОбласти
