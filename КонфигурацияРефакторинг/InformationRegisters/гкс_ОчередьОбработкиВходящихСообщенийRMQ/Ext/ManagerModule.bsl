#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает подготовленный запрос для получения очереди входящих сообщений.
//
// Параметры:
//  ПараметрыЗапроса - Структура - структура параметров запроса
//                   - Неопределено - запрос будет инициализирован значенями по умолчанию.
//
// Возвращаемое значение:
//  Запрос - 
//
Функция ЗапросСообщенияИзОчереди(Знач ПараметрыЗапроса = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		ТипСтруктура = Тип("Структура");
		гкс_ОбщегоНазначенияКлиентСервер
						      .ПроверитьПараметр(
						      "гкс_ОчередьОбработкиВходящихСообщенийRMQ.ЗапросСообщенияИзОчереди", 
						      "ПараметрыЗапроса",
						       ПараметрыЗапроса, 
						       ТипСтруктура);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаСообщенийОчереди(ПараметрыЗапроса);
	Запрос.Параметры.Вставить("ПотокСобытий");
	
	Если ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		ЗаполнитьЗначенияСвойств(Запрос.Параметры, ПараметрыЗапроса);
	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции

Функция ПотокСобытийСообщения(Знач Сообщение) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сообщение", Сообщение);
	Запрос.Текст = ТекстЗапросаПотокСобытийСообщения();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПотокСобытий;
	КонецЕсли;
	
	Возврат Справочники.гкс_ПотокиСобытий.ПустаяСсылка();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗафиксироватьСообщениеВОчереди(Сообщение, 
                                         Знач КлючОбъекта = Неопределено, 
                                         Знач Порядок = Неопределено,
                                         Знач ПотокСобытий = Неопределено) Экспорт
		
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Сообщение", Сообщение);
	
	Если НЕ ЗначениеЗаполнено(Порядок) Тогда	
		Порядок = ТекущаяУниверсальнаяДатаВМиллисекундах();		
	КонецЕсли;
	СтруктураЗаписи.Вставить("Порядок", Порядок);
	
	Если ЗначениеЗаполнено(КлючОбъекта) Тогда		
		СтруктураЗаписи.Вставить("КлючОбъекта", КлючОбъекта);	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПотокСобытий) Тогда		
		ПотокСобытий = Справочники.гкс_ПотокиСобытий.ОсновнойПотокПоУмолчанию();		
	КонецЕсли;
	СтруктураЗаписи.Вставить("ПотокСобытий", ПотокСобытий);
	
	гкс_ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи, "гкс_ОчередьОбработкиВходящихСообщенийRMQ");
	
КонецПроцедуры

Процедура ОтметитьОбработкуСообщенияВОчереди(Сообщение) Экспорт
	
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("Сообщение", Сообщение);
	
	гкс_ОбменДаннымиСервер.УдалитьНаборЗаписейВРегистреСведений(СтруктураЗаписи, 
		"гкс_ОчередьОбработкиВходящихСообщенийRMQ");
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаСообщенийОчереди(ПараметрыЗапроса)
	
	Перем РазмерПорции;
	Перем ПотокСобытий;
	
	Если ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		
		ПараметрыЗапроса.Свойство("РазмерПорции", РазмерПорции);
		ПараметрыЗапроса.Свойство("ПотокСобытий", ПотокСобытий);
		
		Если ЗначениеЗаполнено(ПотокСобытий) Тогда
			ТекстЗапроса = ТекстЗапросаСообщенийОчередиСОтборомПоПотокам();
		Иначе
			ТекстЗапроса = ТекстЗапросаСообщенийОчередиБезОтбораПоПотокам();
		КонецЕсли;
	
		Если ЗначениеЗаполнено(РазмерПорции) Тогда
			ТекстЗаменаПервые = "ВЫБРАТЬ ПЕРВЫЕ " + Формат(РазмерПорции, "ЧГ="); 
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБРАТЬ ПЕРВЫЕ 100", ТекстЗаменаПервые);
		КонецЕсли;
		
	Иначе
		ТекстЗапроса = ТекстЗапросаСообщенийОчередиБезОтбораПоПотокам();
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

#Область ТекстыЗапросов

Функция ТекстЗапросаПотокСобытийСообщения()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Очередь.ПотокСобытий
	|ИЗ
	|	РегистрСведений.гкс_ОчередьОбработкиВходящихСообщенийRMQ КАК Очередь
	|ГДЕ
	|	Очередь.Сообщение = &Сообщение";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСообщенийОчередиБезОтбораПоПотокам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	Очередь.Порядок КАК Порядок,
	|	Очередь.Сообщение КАК Сообщение,
	|	Очередь.КлючОбъекта КАК КлючОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ОчередьОбработкиВходящихСообщенийRMQ КАК Очередь
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСообщенийОчередиСОтборомПоПотокам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	Очередь.Порядок КАК Порядок,
	|	Очередь.Сообщение КАК Сообщение,
	|	Очередь.КлючОбъекта КАК КлючОбъекта
	|ИЗ
	|	РегистрСведений.гкс_ОчередьОбработкиВходящихСообщенийRMQ КАК Очередь
	|ГДЕ
	|	Очередь.ПотокСобытий = &ПотокСобытий
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
