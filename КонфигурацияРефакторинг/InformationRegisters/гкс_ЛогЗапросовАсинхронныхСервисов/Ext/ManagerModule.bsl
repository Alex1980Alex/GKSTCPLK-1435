#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Создает запись вызова web-сервиса. Записывает представления запроса и ответа,
//	время выполнения, и идентифицирующую вызов информацию.
//
// Параметры:
//	- Пользователь - СправочникСсылка.Пользователи. Пользователь вызвавший запрос.
//	- НомерСеанса - число. Номер сеанса в котором произошел вызов.
//	- ОтметкаВремени - дата.
//	- Длительность  - дата. Длительность в миллисекундах.
//	- Запрос - ОбъектXDTO. Обрабатываемый запрос.
//	- Ответ  - ОбъектXDTO. Результат обработки запроса.
//
Процедура ЗаписатьВЛог(Знач Запись) Экспорт
	
	СжатиеДанных = Новый СжатиеДанных(9);
	НаборЗаписей = РегистрыСведений.гкс_ЛогЗапросовАсинхронныхСервисов.СоздатьНаборЗаписей();
	
	ЗаписьНабора = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(ЗаписьНабора, Запись);
		
	Запрос = Запись.Запрос;
	Если НЕ ТипЗнч(Запрос) = Тип("Строка") Тогда
		Запрос = Серилиализовать(Запрос);
	КонецЕсли;
	ЗаписьНабора.ХранилищеЗапроса = Новый ХранилищеЗначения(Запрос, СжатиеДанных);
	
	Ответ = Запись.Ответ;
	Если НЕ ТипЗнч(Ответ) = Тип("Строка") Тогда
		Ответ = Серилиализовать(Ответ);
	КонецЕсли;
	ЗаписьНабора.ХранилищеОтвета = Новый ХранилищеЗначения(Ответ, СжатиеДанных);
	
	Попытка
		НаборЗаписей.Записать(Ложь);
		
	Исключение
		ВызватьИсключение ОписаниеОшибки();
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СократитьЗаписиЛога() Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.Текст = ТекстЗапросаСокращениеЗаписейЛога();
	
	Результат = Запрос.Выполнить();
	Пока НЕ Результат.Пустой() Цикл
		
		НаборЗаписей = РегистрыСведений.гкс_ЛогЗапросовАсинхронныхСервисов.СоздатьНаборЗаписей();

		НачатьТранзакцию();
		Попытка
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
				НаборЗаписей.Записать();
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение ОписаниеОшибки();
			
		КонецПопытки;
		
		Результат = Запрос.Выполнить();
		
	КонецЦикла;
	
КонецПроцедуры

Функция Серилиализовать(Знач Значение)
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Значение, , ,НазначениеТипаXML.Явное);
	
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции

#Область ТекстыЗапросов

Функция ТекстЗапросаСокращениеЗаписейЛога() 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	Лог.Период КАК Период
	|ИЗ
	|	РегистрСведений.гкс_ЛогЗапросовАсинхронныхСервисов КАК Лог
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.гкс_НастройкиИнтеграционногоАдаптера КАК гкс_НастройкиИнтеграционногоАдаптера
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Лог.Период < ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, -ЕСТЬNULL(гкс_НастройкиИнтеграционногоАдаптера.СрокХраненияЛогаЗапросовАсинхронногоСервиса, 0))";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли