#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выбирает записи в очереди приемки за период 
//
// Параметры:
//  Период - Структура - период с свойствами ДатаНачала и ДатаОкончания
//
//  УсловияПроезда - Массив - массив условий проезда для фильтра в очереди
//
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса - записи в очереди приемки
//
Функция ЗаписиВОчередьЗаПериод(Период, УсловияПроезда) Экспорт

	ЗапросОчереди = Новый Запрос;
	ЗапросОчереди.Текст = 
	"ВЫБРАТЬ
	|	ОчередьПриемкиПЛК.НачалоПериода КАК НачалоПериода,
	|	ОчередьПриемкиПЛК.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ОчередьПриемкиПЛК.Номенклатура КАК Номенклатура,
	|	ОчередьПриемкиПЛК.Регистратор КАК Регистратор,
	|	ОчередьПриемкиПЛК.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ОчередьПриемкиПЛК.НомерТранспортногоСредства = """"
	|			ТОГДА ОчередьПриемкиПЛК.ТранспортноеСредство
	|		ИНАЧЕ ОчередьПриемкиПЛК.НомерТранспортногоСредства
	|	КОНЕЦ КАК ТранспортноеСредство
	|ПОМЕСТИТЬ ВТ_ОчередьПриемки
	|ИЗ
	|	РегистрСведений.гкс_ОчередьПриемкиПЛК КАК ОчередьПриемкиПЛК
	|ГДЕ
	|	ОчередьПриемкиПЛК.НачалоПериода <= &ОкончаниеПериода
	|	И ОчередьПриемкиПЛК.ОкончаниеПериода >= &НачалоПериода
	|	И ОчередьПриемкиПЛК.УсловиеПроезда В(&УсловияПроезда)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РССтатусыЗаписейВОчередиПриемкиПЛКСрезПоследних.ЗаписьВОчередь КАК ЗаписьВОчередь,
	|	РССтатусыЗаписейВОчередиПриемкиПЛКСрезПоследних.Статус КАК Статус
	|ПОМЕСТИТЬ ВТ_СтатусыЗаписейВОчереди
	|ИЗ
	|	РегистрСведений.гкс_СтатусыЗаписейВОчередиПриемкиПЛК.СрезПоследних(
	|			,
	|			ЗаписьВОчередь В
	|				(ВЫБРАТЬ
	|					ВТ_ОчередьПриемки.Регистратор КАК Регистратор
	|				ИЗ
	|					ВТ_ОчередьПриемки)) КАК РССтатусыЗаписейВОчередиПриемкиПЛКСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОчередьПриемки.НачалоПериода КАК НачалоПериода,
	|	ВТ_ОчередьПриемки.ОкончаниеПериода КАК ОкончаниеПериода,
	|	ВТ_ОчередьПриемки.Номенклатура КАК Номенклатура,
	|	ВТ_ОчередьПриемки.Регистратор КАК Регистратор,
	|	ВТ_ОчередьПриемки.Контрагент КАК Контрагент,
	|	ВТ_ОчередьПриемки.ТранспортноеСредство КАК ТранспортноеСредство,
	|	ВТ_СтатусыЗаписейВОчереди.Статус КАК Статус
	|ИЗ
	|	ВТ_ОчередьПриемки КАК ВТ_ОчередьПриемки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтатусыЗаписейВОчереди КАК ВТ_СтатусыЗаписейВОчереди
	|		ПО ВТ_ОчередьПриемки.Регистратор = ВТ_СтатусыЗаписейВОчереди.ЗаписьВОчередь";
	
	ЗапросОчереди.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	ЗапросОчереди.УстановитьПараметр("ОкончаниеПериода", Период.ДатаОкончания);
	ЗапросОчереди.УстановитьПараметр("УсловияПроезда", гкс_ЭлектроннаяОчередь.ОтборПоУсловиямПроезда(УсловияПроезда));
	
	РезультатЗапроса = ЗапросОчереди.Выполнить();
	
	ВыборкаОчереди = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаОчереди;
	
КонецФункции
	
Функция ЕстьЗаписьВОчередь(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	ПодготовитьПараметрыЗапросаЕстьЗаписьВОчередь(Запрос.Параметры, Параметры);
		
	Запрос.Текст = ПолучитьТекстЗапросаЕстьЗаписьВОчередь(Параметры);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ЕстьСвободноеМесто(ДанныеОчереди) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Очередь.Регистратор КАК Регистратор,
	|	Очередь.НачалоПериода КАК НачалоПериода,
	|	Очередь.ОкончаниеПериода КАК ОкончаниеПериода,
	|	Очередь.НомерТранспортногоСредства КАК НомерТранспортногоСредства
	|ИЗ
	|	РегистрСведений.гкс_ОчередьПриемкиПЛК КАК Очередь
	|ГДЕ
	|	Очередь.Активность
	|	И Очередь.ТочкаМаршрута = &ТочкаМаршрута
	|	И Очередь.Номенклатура = &Номенклатура
	|	И Очередь.УсловиеПроезда = &УсловиеПроезда
	|	И Очередь.НачалоПериода < &ОкончаниеПериода
	|	И Очередь.ОкончаниеПериода > &НачалоПериода
	|	И &УсловиеПоДокументу";
	
	Запрос.УстановитьПараметр("ТочкаМаршрута", ДанныеОчереди.ТочкаМаршрута);
	Запрос.УстановитьПараметр("Номенклатура", ДанныеОчереди.Номенклатура);
	Запрос.УстановитьПараметр("УсловиеПроезда", ДанныеОчереди.УсловиеПроезда);
	Запрос.УстановитьПараметр("НачалоПериода", ДанныеОчереди.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ДанныеОчереди.ОкончаниеПериода);	
		
	Если ДанныеОчереди.Свойство("Ссылка") Тогда 	
		Запрос.УстановитьПараметр("Ссылка", ДанныеОчереди.Ссылка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоДокументу", "НЕ Очередь.Регистратор = &Ссылка");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &УсловиеПоДокументу", "");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

// Периоды очереди с учетом записи в таблице
// 
// Параметры:
//  ПараметрыПериодовОчереди - Структура - 
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Периоды по параметрам в таблице
Функция ПериодыПоПараметрамВТаблице(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОчередьПриемкиПЛК.НачалоПериода КАК НачалоПериода,
	|	ОчередьПриемкиПЛК.ОкончаниеПериода КАК ОкончаниеПериода
	|ИЗ
	|	РегистрСведений.гкс_ОчередьПриемкиПЛК КАК ОчередьПриемкиПЛК
	|ГДЕ
	|	ОчередьПриемкиПЛК.ТочкаМаршрута = &ТочкаМаршрута
	|	И ОчередьПриемкиПЛК.Номенклатура = &Номенклатура
	|	И ОчередьПриемкиПЛК.НачалоПериода МЕЖДУ &НачалоПериода И &ОкончаниеПериода";
	
	Запрос.УстановитьПараметр("ТочкаМаршрута", Параметры.ТочкаМаршрута);
	Запрос.УстановитьПараметр("Номенклатура", Параметры.Номенклатура);
	Запрос.УстановитьПараметр("НачалоПериода", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", Параметры.ОкончаниеПериода);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаЕстьЗаписьВОчередь(Параметры)
	
	Если Параметры.Свойство("Периоды") Тогда
		
		ПорНомер = 1;
		ТекстЗапросаРезультат = "";
		Для Каждого Период Из Параметры.Периоды Цикл
			
			ТекстЗапроса = ТекстЗапросаЕстьЗаписьВОчередь();
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НачалоПериода", "&НачалоПериода" + Формат(ПорНомер,"ЧГ=0"));
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончаниеПериода", "&ОкончаниеПериода" + Формат(ПорНомер,"ЧГ=0"));
			
			Если ПорНомер = 1 Тогда
				ТекстЗапросаРезультат = ТекстЗапроса;
			Иначе
				
				ТекстЗапросаРезультат = ТекстЗапросаРезультат 
				+ "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|" + ТекстЗапроса;
				
			КонецЕсли;
			
			ПорНомер = ПорНомер + 1;
			
		КонецЦикла;
		
		Возврат ТекстЗапросаРезультат;
		
	Иначе	
		
		Возврат ТекстЗапросаЕстьЗаписьВОчередь();
		
	КонецЕсли;
	
КонецФункции

Процедура ПодготовитьПараметрыЗапросаЕстьЗаписьВОчередь(ПараметрыЗапроса, Параметры)
	
	ПараметрыЗапроса.Вставить("ТочкаМаршрута");
	ПараметрыЗапроса.Вставить("Номенклатура");
	
	Если Параметры.Свойство("Периоды") Тогда
		
		ЗаполнитьЗначенияСвойств(ПараметрыЗапроса, Параметры, "ТочкаМаршрута, Номенклатура");
		ПорНомер = 1;
		Для Каждого Период Из Параметры.Периоды Цикл
			
			ПараметрыЗапроса.Вставить("ОкончаниеПериода" + Формат(ПорНомер,"ЧГ=0"), Период.КонецПериода);
			ПараметрыЗапроса.Вставить("НачалоПериода" + Формат(ПорНомер,"ЧГ=0"), Период.НачалоПериода);	
			ПорНомер = ПорНомер + 1;
			
		КонецЦикла;
		
	Иначе	
		
		ПараметрыЗапроса.Вставить("НачалоПериода");
		ПараметрыЗапроса.Вставить("ОкончаниеПериода");
		
		ЗаполнитьЗначенияСвойств(ПараметрыЗапроса, Параметры);
		
	КонецЕсли;
	
	ПараметрыЗапроса.Вставить("УсловияПроезда", 
							  гкс_ЭлектроннаяОчередь.ОтборПоУсловиямПроезда(Параметры.УсловиеПроезда));
	
КонецПроцедуры

#Область ТекстыЗапросов

Функция ТекстЗапросаЕстьЗаписьВОчередь()
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	1 КАК ЕстьЗаписиВОчереди
	|ИЗ
	|	РегистрСведений.гкс_ОчередьПриемкиПЛК КАК Очередь
	|ГДЕ
	|	Очередь.ТочкаМаршрута = &ТочкаМаршрута
	|	И Очередь.Номенклатура = &Номенклатура
	|	И Очередь.НачалоПериода < &ОкончаниеПериода
	|	И Очередь.ОкончаниеПериода > &НачалоПериода
	|	И Очередь.УсловиеПроезда В(&УсловияПроезда)";
		
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
